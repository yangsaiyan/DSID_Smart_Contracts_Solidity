{"id":"7844ca8ae70f2eb5c4d922cf500ab1ef","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MinimalForwarder.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (metatx/MinimalForwarder.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n/**\r\n * @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.\r\n *\r\n * MinimalForwarder is mainly meant for testing, as it is missing features to be a good production-ready forwarder. This\r\n * contract does not intend to have all the properties that are needed for a sound forwarding system. A fully\r\n * functioning forwarding system with good properties requires more complexity. We suggest you look at other projects\r\n * such as the GSN which do have the goal of building a system like that.\r\n */\r\ncontract MinimalForwarder is EIP712 {\r\n    using ECDSA for bytes32;\r\n\r\n    struct ForwardRequest {\r\n        address from;\r\n        address to;\r\n        uint256 value;\r\n        uint256 gas;\r\n        uint256 nonce;\r\n        bytes data;\r\n    }\r\n\r\n    bytes32 private constant _TYPEHASH =\r\n        keccak256(\"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\");\r\n\r\n    mapping(address => uint256) private _nonces;\r\n\r\n    constructor() EIP712(\"MinimalForwarder\", \"0.0.1\") {}\r\n\r\n    function getNonce(address from) public view returns (uint256) {\r\n        return _nonces[from];\r\n    }\r\n\r\n    function verify(ForwardRequest calldata req, bytes calldata signature) public view returns (bool) {\r\n        address signer = _hashTypedDataV4(\r\n            keccak256(abi.encode(_TYPEHASH, req.from, req.to, req.value, req.gas, req.nonce, keccak256(req.data)))\r\n        ).recover(signature);\r\n        return _nonces[req.from] == req.nonce && signer == req.from;\r\n    }\r\n\r\n    function execute(ForwardRequest calldata req, bytes calldata signature)\r\n        public\r\n        payable\r\n        returns (bool, bytes memory)\r\n    {\r\n        require(verify(req, signature), \"MinimalForwarder: signature does not match request\");\r\n        _nonces[req.from] = req.nonce + 1;\r\n\r\n        (bool success, bytes memory returndata) = req.to.call{gas: req.gas, value: req.value}(\r\n            abi.encodePacked(req.data, req.from)\r\n        );\r\n\r\n        // Validate that the relayer has sent enough gas for the call.\r\n        // See https://ronan.eth.link/blog/ethereum-gas-dangers/\r\n        if (gasleft() <= req.gas / 63) {\r\n            // We explicitly trigger invalid opcode to consume all gas and bubble-up the effects, since\r\n            // neither revert or assert consume all gas since Solidity 0.8.0\r\n            // https://docs.soliditylang.org/en/v0.8.0/control-structures.html#panic-via-assert-and-error-via-require\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                invalid()\r\n            }\r\n        }\r\n\r\n        return (success, returndata);\r\n    }\r\n}"},"contracts/Student.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract StudentRegistry is ERC2771Context, Ownable {\r\n    struct Student {\r\n        string studentID;\r\n        bool registered;\r\n    }\r\n\r\n    mapping(address => Student) private students;\r\n\r\n    event StudentRegistered(address indexed student, string studentID);\r\n    event StudentUpdated(address indexed student, string newStudentID);\r\n\r\n    constructor(address _trustedForwarder) ERC2771Context(_trustedForwarder) Ownable(msg.sender) {}\r\n\r\n    modifier notRegistered() {\r\n        require(!students[_msgSender()].registered, \"Already registered\");\r\n        _;\r\n    }\r\n\r\n    function registerStudent(string memory _studentID) external notRegistered {\r\n        require(bytes(_studentID).length > 0, \"Student ID cannot be empty\");\r\n        \r\n        students[_msgSender()] = Student(_studentID, true);\r\n        emit StudentRegistered(_msgSender(), _studentID);\r\n    }\r\n\r\n    function updateStudent(address _studentAddress, string memory _newStudentID) external onlyOwner {\r\n        require(students[_studentAddress].registered, \"Student not found\");\r\n        require(bytes(_newStudentID).length > 0, \"New Student ID cannot be empty\");\r\n\r\n        students[_studentAddress].studentID = _newStudentID;\r\n        emit StudentUpdated(_studentAddress, _newStudentID);\r\n    }\r\n\r\n    function getStudent(address _studentAddress) external view returns (string memory) {\r\n        require(students[_studentAddress].registered, \"Student not found\");\r\n        return students[_studentAddress].studentID;\r\n    }\r\n\r\n    function _msgSender() internal view override(Context, ERC2771Context) returns (address sender) {\r\n        return ERC2771Context._msgSender();\r\n    }\r\n\r\n    function _msgData() internal view override(Context, ERC2771Context) returns (bytes calldata) {\r\n        return ERC2771Context._msgData();\r\n    }\r\n\r\n    function _contextSuffixLength() internal view override(Context, ERC2771Context) returns (uint256) {\r\n        return ERC2771Context._contextSuffixLength();\r\n    }\r\n\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[345],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":346,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":345,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,345],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","exportedSymbols":{"Context":[345],"ERC2771Context":[315]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":346,"src":"135:45:2","symbolAliases":[{"foreign":{"id":175,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"143:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":178,"name":"Context","nameLocations":["1005:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":345,"src":"1005:7:2"},"id":179,"nodeType":"InheritanceSpecifier","src":"1005:7:2"}],"canonicalName":"ERC2771Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"182:786:2","text":" @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,345],"name":"ERC2771Context","nameLocation":"987:14:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"1019:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":182,"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1111:17:2","nodeType":"VariableDeclaration","scope":315,"src":"1085:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":192,"nodeType":"Block","src":"1490:54:2","statements":[{"expression":{"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":188,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1500:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":189,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1520:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:37:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":191,"nodeType":"ExpressionStatement","src":"1500:37:2"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"1398:48:2","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":193,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1471:17:2","nodeType":"VariableDeclaration","scope":193,"src":"1463:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:27:2"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"1490:0:2"},"scope":315,"src":"1451:93:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"1690:41:2","statements":[{"expression":{"id":199,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1707:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":198,"id":200,"nodeType":"Return","src":"1700:24:2"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"1550:69:2","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","id":202,"implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1633:16:2","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"1649:2:2"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1681:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1680:9:2"},"scope":315,"src":"1624:107:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":215,"nodeType":"Block","src":"1914:55:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"1931:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1944:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1931:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":209,"id":214,"nodeType":"Return","src":"1924:38:2"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1737:90:2","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","id":216,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1841:18:2","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"forwarder","nameLocation":"1868:9:2","nodeType":"VariableDeclaration","scope":216,"src":"1860:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:19:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"1908:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":207,"name":"bool","nodeType":"ElementaryTypeName","src":"1908:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1907:6:2"},"scope":315,"src":"1832:137:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[327],"body":{"id":262,"nodeType":"Block","src":"2277:358:2","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"calldataLength","nameLocation":"2295:14:2","nodeType":"VariableDeclaration","scope":262,"src":"2287:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":228,"initialValue":{"expression":{"expression":{"id":225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2312:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2316:4:2","memberName":"data","nodeType":"MemberAccess","src":"2312:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2321:6:2","memberName":"length","nodeType":"MemberAccess","src":"2312:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2287:40:2"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2345:19:2","nodeType":"VariableDeclaration","scope":262,"src":"2337:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":233,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[314],"referencedDeclaration":314,"src":"2367:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2337:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2422:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2426:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2422:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":234,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2403:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2437:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":239,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2455:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2437:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2403:71:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":260,"nodeType":"Block","src":"2579:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":256,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2600:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$315_$","typeString":"type(contract super ERC2771Context)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:10:2","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":327,"src":"2600:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":222,"id":259,"nodeType":"Return","src":"2593:25:2"}]},"id":261,"nodeType":"IfStatement","src":"2399:230:2","trueBody":{"id":255,"nodeType":"Block","src":"2476:97:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2513:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:4:2","memberName":"data","nodeType":"MemberAccess","src":"2513:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2513:47:2","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2522:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":249,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2539:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2522:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2505:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":244,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2505:7:2","typeDescriptions":{}}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:2","typeDescriptions":{}}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":222,"id":254,"nodeType":"Return","src":"2490:72:2"}]}}]},"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1975:226:2","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":263,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2215:10:2","nodeType":"FunctionDefinition","overrides":{"id":219,"nodeType":"OverrideSpecifier","overrides":[],"src":"2250:8:2"},"parameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2225:2:2"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"2268:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:9:2"},"scope":315,"src":"2206:429:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[336],"body":{"id":303,"nodeType":"Block","src":"2944:338:2","statements":[{"assignments":[271],"declarations":[{"constant":false,"id":271,"mutability":"mutable","name":"calldataLength","nameLocation":"2962:14:2","nodeType":"VariableDeclaration","scope":303,"src":"2954:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":275,"initialValue":{"expression":{"expression":{"id":272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2979:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2983:4:2","memberName":"data","nodeType":"MemberAccess","src":"2979:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2988:6:2","memberName":"length","nodeType":"MemberAccess","src":"2979:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2954:40:2"},{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3012:19:2","nodeType":"VariableDeclaration","scope":303,"src":"3004:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":278,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[314],"referencedDeclaration":314,"src":"3034:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3034:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3004:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3089:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3093:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3089:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":281,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3070:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3104:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":286,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3122:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3104:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3070:71:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":301,"nodeType":"Block","src":"3228:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":297,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3249:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$315_$","typeString":"type(contract super ERC2771Context)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:8:2","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":336,"src":"3249:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":269,"id":300,"nodeType":"Return","src":"3242:23:2"}]},"id":302,"nodeType":"IfStatement","src":"3066:210:2","trueBody":{"id":296,"nodeType":"Block","src":"3143:79:2","statements":[{"expression":{"baseExpression":{"expression":{"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:2","memberName":"data","nodeType":"MemberAccess","src":"3164:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3174:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":292,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3191:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3174:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3164:47:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":269,"id":295,"nodeType":"Return","src":"3157:54:2"}]}}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"2641:222:2","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":304,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2877:8:2","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"2910:8:2"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"2885:2:2"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"2928:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":267,"name":"bytes","nodeType":"ElementaryTypeName","src":"2928:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2927:16:2"},"scope":315,"src":"2868:414:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[344],"body":{"id":313,"nodeType":"Block","src":"3466:26:2","statements":[{"expression":{"hexValue":"3230","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3483:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":310,"id":312,"nodeType":"Return","src":"3476:9:2"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3288:92:2","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3394:20:2","nodeType":"FunctionDefinition","overrides":{"id":307,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:2"},"parameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3414:2:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"3457:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3456:9:2"},"scope":315,"src":"3385:107:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":316,"src":"969:2525:2","usedErrors":[],"usedEvents":[]}],"src":"109:3386:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[345]},"id":346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"127:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":345,"linearizedBaseContracts":[345],"name":"Context","nameLocation":"642:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":326,"nodeType":"Block","src":"718:34:3","statements":[{"expression":{"expression":{"id":323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:3","memberName":"sender","nodeType":"MemberAccess","src":"735:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":322,"id":325,"nodeType":"Return","src":"728:17:3"}]},"id":327,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"675:2:3"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"709:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:3"},"scope":345,"src":"656:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"825:32:3","statements":[{"expression":{"expression":{"id":332,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:3","memberName":"data","nodeType":"MemberAccess","src":"842:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":331,"id":334,"nodeType":"Return","src":"835:15:3"}]},"id":336,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:3","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"775:2:3"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"809:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":329,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:3"},"scope":345,"src":"758:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"935:25:3","statements":[{"expression":{"hexValue":"30","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":340,"id":342,"nodeType":"Return","src":"945:8:3"}]},"id":344,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:3","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"892:2:3"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:3"},"scope":345,"src":"863:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":346,"src":"624:338:3","usedErrors":[],"usedEvents":[]}],"src":"101:862:3"},"id":3},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[397]},"id":398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":347,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"125:489:4","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":397,"linearizedBaseContracts":[397],"name":"Panic","nameLocation":"665:5:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"677:36:4","text":"@dev generic / unspecified error"},"id":352,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:4","nodeType":"VariableDeclaration","scope":397,"src":"718:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"764:37:4","text":"@dev used by the assert() builtin"},"id":356,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:4","nodeType":"VariableDeclaration","scope":397,"src":"806:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"851:41:4","text":"@dev arithmetic underflow or overflow"},"id":360,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:4","nodeType":"VariableDeclaration","scope":397,"src":"897:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:4","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"950:35:4","text":"@dev division or modulo by zero"},"id":364,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:4","nodeType":"VariableDeclaration","scope":397,"src":"990:49:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"1045:30:4","text":"@dev enum conversion error"},"id":368,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:4","nodeType":"VariableDeclaration","scope":397,"src":"1080:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:4","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1140:36:4","text":"@dev invalid encoding in storage"},"id":372,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:4","nodeType":"VariableDeclaration","scope":397,"src":"1181:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"1242:24:4","text":"@dev empty array pop"},"id":376,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:4","nodeType":"VariableDeclaration","scope":397,"src":"1271:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1325:35:4","text":"@dev array out of bounds access"},"id":380,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:4","nodeType":"VariableDeclaration","scope":397,"src":"1365:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"1423:65:4","text":"@dev resource error (too large allocation or too large array)"},"id":384,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:4","nodeType":"VariableDeclaration","scope":397,"src":"1493:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"1546:42:4","text":"@dev calling invalid internal function"},"id":388,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:4","nodeType":"VariableDeclaration","scope":397,"src":"1593:58:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:4","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"1819:151:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:4"},"nodeType":"YulFunctionCall","src":"1868:24:4"},"nodeType":"YulExpressionStatement","src":"1868:24:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:4","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:4"},"nodeType":"YulFunctionCall","src":"1905:18:4"},"nodeType":"YulExpressionStatement","src":"1905:18:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:4","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:4"},"nodeType":"YulFunctionCall","src":"1936:18:4"},"nodeType":"YulExpressionStatement","src":"1936:18:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":391,"isOffset":false,"isSlot":false,"src":"1918:4:4","valueSize":1}],"flags":["memory-safe"],"id":394,"nodeType":"InlineAssembly","src":"1829:135:4"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"1658:113:4","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:4","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"code","nameLocation":"1799:4:4","nodeType":"VariableDeclaration","scope":396,"src":"1791:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:4"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"1819:0:4"},"scope":397,"src":"1776:194:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":398,"src":"657:1315:4","usedErrors":[],"usedEvents":[]}],"src":"99:1874:4"},"id":4},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[403],"ShortStrings":[614],"StorageSlot":[738]},"id":615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":399,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":615,"sourceUnit":739,"src":"132:46:5","symbolAliases":[{"foreign":{"id":400,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"140:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":403,"name":"ShortString","nameLocation":"353:11:5","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:5","underlyingType":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"378:876:5","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":614,"linearizedBaseContracts":[614],"name":"ShortStrings","nameLocation":"1263:12:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":407,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:5","nodeType":"VariableDeclaration","scope":614,"src":"1345:111:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":411,"name":"StringTooLong","nameLocation":"1469:13:5","nodeType":"ErrorDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"str","nameLocation":"1490:3:5","nodeType":"VariableDeclaration","scope":411,"src":"1483:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:5"},"src":"1463:32:5"},{"errorSelector":"b3512b0c","id":413,"name":"InvalidShortString","nameLocation":"1506:18:5","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"1524:2:5"},"src":"1500:27:5"},{"body":{"id":456,"nodeType":"Block","src":"1786:208:5","statements":[{"assignments":[423],"declarations":[{"constant":false,"id":423,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:5","nodeType":"VariableDeclaration","scope":456,"src":"1796:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":422,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":428,"initialValue":{"arguments":[{"id":426,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1822:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":424,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:5","typeDescriptions":{}}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":429,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1840:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:5","memberName":"length","nodeType":"MemberAccess","src":"1840:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:5","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":438,"nodeType":"IfStatement","src":"1836:72:5","trueBody":{"id":437,"nodeType":"Block","src":"1858:50:5","statements":[{"errorCall":{"arguments":[{"id":434,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1893:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":433,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"1879:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"RevertStatement","src":"1872:25:5"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":447,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1965:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:5","typeDescriptions":{}}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:5","typeDescriptions":{}}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":450,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1974:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:5","memberName":"length","nodeType":"MemberAccess","src":"1974:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:5","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":439,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"1924:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$403_$","typeString":"type(ShortString)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:5","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:5","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$403_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"functionReturnParameters":421,"id":455,"nodeType":"Return","src":"1917:70:5"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"1533:170:5","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:5","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"str","nameLocation":"1745:3:5","nodeType":"VariableDeclaration","scope":457,"src":"1731:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":415,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:5"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"1773:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":419,"nodeType":"UserDefinedTypeName","pathNode":{"id":418,"name":"ShortString","nameLocations":["1773:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"1773:11:5"},"referencedDeclaration":403,"src":"1773:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:5"},"scope":614,"src":"1708:286:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":482,"nodeType":"Block","src":"2152:304:5","statements":[{"assignments":[467],"declarations":[{"constant":false,"id":467,"mutability":"mutable","name":"len","nameLocation":"2170:3:5","nodeType":"VariableDeclaration","scope":482,"src":"2162:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":471,"initialValue":{"arguments":[{"id":469,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"2187:4:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"id":468,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"2176:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:5"},{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"str","nameLocation":"2294:3:5","nodeType":"VariableDeclaration","scope":482,"src":"2280:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":478,"initialValue":{"arguments":[{"hexValue":"3332","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":474,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:5"},{"AST":{"nodeType":"YulBlock","src":"2349:81:5","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:5"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:5"},"nodeType":"YulFunctionCall","src":"2363:16:5"},"nodeType":"YulExpressionStatement","src":"2363:16:5"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:5"},"nodeType":"YulFunctionCall","src":"2399:14:5"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:5"},"nodeType":"YulFunctionCall","src":"2392:28:5"},"nodeType":"YulExpressionStatement","src":"2392:28:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":467,"isOffset":false,"isSlot":false,"src":"2375:3:5","valueSize":1},{"declaration":461,"isOffset":false,"isSlot":false,"src":"2415:4:5","valueSize":1},{"declaration":473,"isOffset":false,"isSlot":false,"src":"2370:3:5","valueSize":1},{"declaration":473,"isOffset":false,"isSlot":false,"src":"2403:3:5","valueSize":1}],"flags":["memory-safe"],"id":479,"nodeType":"InlineAssembly","src":"2324:106:5"},{"expression":{"id":480,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2446:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":465,"id":481,"nodeType":"Return","src":"2439:10:5"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2000:73:5","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:5","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:5","nodeType":"VariableDeclaration","scope":483,"src":"2096:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":460,"nodeType":"UserDefinedTypeName","pathNode":{"id":459,"name":"ShortString","nameLocations":["2096:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2096:11:5"},"referencedDeclaration":403,"src":"2096:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:5"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2137:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:5"},"scope":614,"src":"2078:378:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":514,"nodeType":"Block","src":"2598:175:5","statements":[{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"result","nameLocation":"2616:6:5","nodeType":"VariableDeclaration","scope":514,"src":"2608:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":498,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2652:4:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"expression":{"id":496,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2633:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$403_$","typeString":"type(ShortString)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:5","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:5","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:5","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2679:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:5","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"IfStatement","src":"2675:69:5","trueBody":{"id":510,"nodeType":"Block","src":"2692:52:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":507,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2713:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"RevertStatement","src":"2706:27:5"}]}},{"expression":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2760:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":491,"id":513,"nodeType":"Return","src":"2753:13:5"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2462:61:5","text":" @dev Return the length of a `ShortString`."},"id":515,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:5","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:5","nodeType":"VariableDeclaration","scope":515,"src":"2548:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":486,"nodeType":"UserDefinedTypeName","pathNode":{"id":485,"name":"ShortString","nameLocations":["2548:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2548:11:5"},"referencedDeclaration":403,"src":"2548:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:5"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"2589:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:5"},"scope":614,"src":"2528:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"2996:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3016:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:5","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:5","memberName":"length","nodeType":"MemberAccess","src":"3010:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":552,"nodeType":"Block","src":"3094:127:5","statements":[{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":541,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3134:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":538,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3108:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$738_$","typeString":"type(library StorageSlot)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:5","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":715,"src":"3108:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$635_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$635_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":634,"src":"3108:38:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3149:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":546,"nodeType":"ExpressionStatement","src":"3108:46:5"},{"expression":{"arguments":[{"id":549,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3192:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":547,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3175:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$403_$","typeString":"type(ShortString)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:5","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:5","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$403_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"functionReturnParameters":525,"id":551,"nodeType":"Return","src":"3168:42:5"}]},"id":553,"nodeType":"IfStatement","src":"3006:215:5","trueBody":{"id":537,"nodeType":"Block","src":"3036:52:5","statements":[{"expression":{"arguments":[{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3071:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":533,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3057:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$403_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"functionReturnParameters":525,"id":536,"nodeType":"Return","src":"3050:27:5"}]}}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2779:103:5","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:5","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"value","nameLocation":"2936:5:5","nodeType":"VariableDeclaration","scope":555,"src":"2922:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":517,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"store","nameLocation":"2958:5:5","nodeType":"VariableDeclaration","scope":555,"src":"2943:20:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":519,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"2983:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"ShortString","nameLocations":["2983:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2983:11:5"},"referencedDeclaration":403,"src":"2983:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:5"},"scope":614,"src":"2887:340:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"3467:158:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3500:5:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"expression":{"id":566,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3481:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$403_$","typeString":"type(ShortString)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:5","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:5","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3510:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":579,"nodeType":"Block","src":"3582:37:5","statements":[{"expression":{"id":577,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"3603:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":565,"id":578,"nodeType":"Return","src":"3596:12:5"}]},"id":580,"nodeType":"IfStatement","src":"3477:142:5","trueBody":{"id":576,"nodeType":"Block","src":"3529:47:5","statements":[{"expression":{"arguments":[{"id":573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3559:5:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"id":572,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3550:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":565,"id":575,"nodeType":"Return","src":"3543:22:5"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"3233:120:5","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:5","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"value","nameLocation":"3400:5:5","nodeType":"VariableDeclaration","scope":582,"src":"3388:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":558,"nodeType":"UserDefinedTypeName","pathNode":{"id":557,"name":"ShortString","nameLocations":["3388:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"3388:11:5"},"referencedDeclaration":403,"src":"3388:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"store","nameLocation":"3422:5:5","nodeType":"VariableDeclaration","scope":582,"src":"3407:20:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:5"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"3452:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:5"},"scope":614,"src":"3358:267:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"4105:174:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4138:5:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"expression":{"id":593,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4119:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$403_$","typeString":"type(ShortString)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:5","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:5","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":597,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4148:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":610,"nodeType":"Block","src":"4222:51:5","statements":[{"expression":{"expression":{"arguments":[{"id":606,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4249:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:5","memberName":"length","nodeType":"MemberAccess","src":"4243:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":592,"id":609,"nodeType":"Return","src":"4236:26:5"}]},"id":611,"nodeType":"IfStatement","src":"4115:158:5","trueBody":{"id":603,"nodeType":"Block","src":"4167:49:5","statements":[{"expression":{"arguments":[{"id":600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4199:5:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}],"id":599,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"4188:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$403_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":592,"id":602,"nodeType":"Return","src":"4181:24:5"}]}}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"3631:364:5","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:5","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"value","nameLocation":"4044:5:5","nodeType":"VariableDeclaration","scope":613,"src":"4032:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"ShortString","nameLocations":["4032:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"4032:11:5"},"referencedDeclaration":403,"src":"4032:11:5","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"store","nameLocation":"4066:5:5","nodeType":"VariableDeclaration","scope":613,"src":"4051:20:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":587,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:5"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"4096:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:5"},"scope":614,"src":"4000:279:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":615,"src":"1255:3026:5","usedErrors":[411,413],"usedEvents":[]}],"src":"106:4176:5"},"id":5},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[738]},"id":739,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":616,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"219:1187:6","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":738,"linearizedBaseContracts":[738],"name":"StorageSlot","nameLocation":"1415:11:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":620,"members":[{"constant":false,"id":619,"mutability":"mutable","name":"value","nameLocation":"1470:5:6","nodeType":"VariableDeclaration","scope":620,"src":"1462:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:6","nodeType":"StructDefinition","scope":738,"src":"1433:49:6","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":623,"members":[{"constant":false,"id":622,"mutability":"mutable","name":"value","nameLocation":"1522:5:6","nodeType":"VariableDeclaration","scope":623,"src":"1517:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":621,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:6","nodeType":"StructDefinition","scope":738,"src":"1488:46:6","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":626,"members":[{"constant":false,"id":625,"mutability":"mutable","name":"value","nameLocation":"1577:5:6","nodeType":"VariableDeclaration","scope":626,"src":"1569:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:6","nodeType":"StructDefinition","scope":738,"src":"1540:49:6","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":629,"members":[{"constant":false,"id":628,"mutability":"mutable","name":"value","nameLocation":"1632:5:6","nodeType":"VariableDeclaration","scope":629,"src":"1624:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:6","nodeType":"StructDefinition","scope":738,"src":"1595:49:6","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":632,"members":[{"constant":false,"id":631,"mutability":"mutable","name":"value","nameLocation":"1685:5:6","nodeType":"VariableDeclaration","scope":632,"src":"1678:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":630,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:6","nodeType":"StructDefinition","scope":738,"src":"1650:47:6","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":635,"members":[{"constant":false,"id":634,"mutability":"mutable","name":"value","nameLocation":"1738:5:6","nodeType":"VariableDeclaration","scope":635,"src":"1731:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":633,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:6","nodeType":"StructDefinition","scope":738,"src":"1703:47:6","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":638,"members":[{"constant":false,"id":637,"mutability":"mutable","name":"value","nameLocation":"1789:5:6","nodeType":"VariableDeclaration","scope":638,"src":"1783:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":636,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:6","nodeType":"StructDefinition","scope":738,"src":"1756:45:6","visibility":"public"},{"body":{"id":648,"nodeType":"Block","src":"1983:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:6","statements":[{"nodeType":"YulAssignment","src":"2032:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":645,"isOffset":false,"isSlot":true,"src":"2032:6:6","suffix":"slot","valueSize":1},{"declaration":641,"isOffset":false,"isSlot":false,"src":"2042:4:6","valueSize":1}],"flags":["memory-safe"],"id":647,"nodeType":"InlineAssembly","src":"1993:63:6"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"1807:87:6","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":649,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:6","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"slot","nameLocation":"1931:4:6","nodeType":"VariableDeclaration","scope":649,"src":"1923:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:6"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"r","nameLocation":"1980:1:6","nodeType":"VariableDeclaration","scope":649,"src":"1960:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$620_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"AddressSlot","nameLocations":["1960:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":620,"src":"1960:11:6"},"referencedDeclaration":620,"src":"1960:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$620_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:6"},"scope":738,"src":"1899:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"2243:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:6","statements":[{"nodeType":"YulAssignment","src":"2292:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":656,"isOffset":false,"isSlot":true,"src":"2292:6:6","suffix":"slot","valueSize":1},{"declaration":652,"isOffset":false,"isSlot":false,"src":"2302:4:6","valueSize":1}],"flags":["memory-safe"],"id":658,"nodeType":"InlineAssembly","src":"2253:63:6"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"2068:86:6","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:6","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"slot","nameLocation":"2191:4:6","nodeType":"VariableDeclaration","scope":660,"src":"2183:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:6"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"r","nameLocation":"2240:1:6","nodeType":"VariableDeclaration","scope":660,"src":"2220:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$623_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"BooleanSlot","nameLocations":["2220:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":623,"src":"2220:11:6"},"referencedDeclaration":623,"src":"2220:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$623_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:6"},"scope":738,"src":"2159:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"2503:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:6","statements":[{"nodeType":"YulAssignment","src":"2552:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":667,"isOffset":false,"isSlot":true,"src":"2552:6:6","suffix":"slot","valueSize":1},{"declaration":663,"isOffset":false,"isSlot":false,"src":"2562:4:6","valueSize":1}],"flags":["memory-safe"],"id":669,"nodeType":"InlineAssembly","src":"2513:63:6"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"2328:86:6","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:6","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"slot","nameLocation":"2451:4:6","nodeType":"VariableDeclaration","scope":671,"src":"2443:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:6"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"r","nameLocation":"2500:1:6","nodeType":"VariableDeclaration","scope":671,"src":"2480:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$626_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":666,"nodeType":"UserDefinedTypeName","pathNode":{"id":665,"name":"Bytes32Slot","nameLocations":["2480:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":626,"src":"2480:11:6"},"referencedDeclaration":626,"src":"2480:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$626_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:6"},"scope":738,"src":"2419:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"2763:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:6","statements":[{"nodeType":"YulAssignment","src":"2812:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2812:6:6","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2822:4:6","valueSize":1}],"flags":["memory-safe"],"id":680,"nodeType":"InlineAssembly","src":"2773:63:6"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"2588:86:6","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:6","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"slot","nameLocation":"2711:4:6","nodeType":"VariableDeclaration","scope":682,"src":"2703:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:6"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"r","nameLocation":"2760:1:6","nodeType":"VariableDeclaration","scope":682,"src":"2740:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$629_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"Uint256Slot","nameLocations":["2740:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"2740:11:6"},"referencedDeclaration":629,"src":"2740:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$629_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:6"},"scope":738,"src":"2679:163:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"3020:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:6","statements":[{"nodeType":"YulAssignment","src":"3069:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":689,"isOffset":false,"isSlot":true,"src":"3069:6:6","suffix":"slot","valueSize":1},{"declaration":685,"isOffset":false,"isSlot":false,"src":"3079:4:6","valueSize":1}],"flags":["memory-safe"],"id":691,"nodeType":"InlineAssembly","src":"3030:63:6"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2848:85:6","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:6","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"slot","nameLocation":"2969:4:6","nodeType":"VariableDeclaration","scope":693,"src":"2961:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:6"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"r","nameLocation":"3017:1:6","nodeType":"VariableDeclaration","scope":693,"src":"2998:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$632_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":688,"nodeType":"UserDefinedTypeName","pathNode":{"id":687,"name":"Int256Slot","nameLocations":["2998:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"2998:10:6"},"referencedDeclaration":632,"src":"2998:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$632_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:6"},"scope":738,"src":"2938:161:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"3277:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:6","statements":[{"nodeType":"YulAssignment","src":"3326:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":700,"isOffset":false,"isSlot":true,"src":"3326:6:6","suffix":"slot","valueSize":1},{"declaration":696,"isOffset":false,"isSlot":false,"src":"3336:4:6","valueSize":1}],"flags":["memory-safe"],"id":702,"nodeType":"InlineAssembly","src":"3287:63:6"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"3105:85:6","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:6","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"slot","nameLocation":"3226:4:6","nodeType":"VariableDeclaration","scope":704,"src":"3218:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:6"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"r","nameLocation":"3274:1:6","nodeType":"VariableDeclaration","scope":704,"src":"3255:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$635_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"StringSlot","nameLocations":["3255:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":635,"src":"3255:10:6"},"referencedDeclaration":635,"src":"3255:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$635_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:6"},"scope":738,"src":"3195:161:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"3558:85:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:6","statements":[{"nodeType":"YulAssignment","src":"3607:20:6","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":711,"isOffset":false,"isSlot":true,"src":"3607:6:6","suffix":"slot","valueSize":1},{"declaration":707,"isOffset":false,"isSlot":true,"src":"3617:10:6","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":713,"nodeType":"InlineAssembly","src":"3568:69:6"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"3362:101:6","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:6","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"store","nameLocation":"3506:5:6","nodeType":"VariableDeclaration","scope":715,"src":"3491:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":706,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:6"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"r","nameLocation":"3555:1:6","nodeType":"VariableDeclaration","scope":715,"src":"3536:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$635_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":710,"nodeType":"UserDefinedTypeName","pathNode":{"id":709,"name":"StringSlot","nameLocations":["3536:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":635,"src":"3536:10:6"},"referencedDeclaration":635,"src":"3536:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$635_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:6"},"scope":738,"src":"3468:175:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"3818:79:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:6","statements":[{"nodeType":"YulAssignment","src":"3867:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":722,"isOffset":false,"isSlot":true,"src":"3867:6:6","suffix":"slot","valueSize":1},{"declaration":718,"isOffset":false,"isSlot":false,"src":"3877:4:6","valueSize":1}],"flags":["memory-safe"],"id":724,"nodeType":"InlineAssembly","src":"3828:63:6"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"3649:84:6","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:6","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"slot","nameLocation":"3768:4:6","nodeType":"VariableDeclaration","scope":726,"src":"3760:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:6"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"r","nameLocation":"3815:1:6","nodeType":"VariableDeclaration","scope":726,"src":"3797:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$638_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"BytesSlot","nameLocations":["3797:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"3797:9:6"},"referencedDeclaration":638,"src":"3797:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$638_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:6"},"scope":738,"src":"3738:159:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"4094:85:6","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:6","statements":[{"nodeType":"YulAssignment","src":"4143:20:6","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":733,"isOffset":false,"isSlot":true,"src":"4143:6:6","suffix":"slot","valueSize":1},{"declaration":729,"isOffset":false,"isSlot":true,"src":"4153:10:6","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":735,"nodeType":"InlineAssembly","src":"4104:69:6"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"3903:99:6","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:6","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"store","nameLocation":"4043:5:6","nodeType":"VariableDeclaration","scope":737,"src":"4029:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:6"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"r","nameLocation":"4091:1:6","nodeType":"VariableDeclaration","scope":737,"src":"4073:19:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$638_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":732,"nodeType":"UserDefinedTypeName","pathNode":{"id":731,"name":"BytesSlot","nameLocations":["4073:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"4073:9:6"},"referencedDeclaration":638,"src":"4073:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$638_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:6"},"scope":738,"src":"4007:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":739,"src":"1407:2774:6","usedErrors":[],"usedEvents":[]}],"src":"193:3989:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4193],"SafeCast":[5958],"SignedMath":[6102],"Strings":[1938]},"id":1939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":740,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1939,"sourceUnit":4194,"src":"127:37:7","symbolAliases":[{"foreign":{"id":741,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"135:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1939,"sourceUnit":5959,"src":"165:45:7","symbolAliases":[{"foreign":{"id":743,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":746,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1939,"sourceUnit":6103,"src":"211:49:7","symbolAliases":[{"foreign":{"id":745,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"219:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"262:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1938,"linearizedBaseContracts":[1938],"name":"Strings","nameLocation":"305:7:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":749,"libraryName":{"id":748,"name":"SafeCast","nameLocations":["325:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":5958,"src":"325:8:7"},"nodeType":"UsingForDirective","src":"319:21:7"},{"constant":true,"id":752,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:7","nodeType":"VariableDeclaration","scope":1938,"src":"346:56:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":750,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":755,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:7","nodeType":"VariableDeclaration","scope":1938,"src":"408:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":753,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"457:81:7","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":762,"name":"StringsInsufficientHexLength","nameLocation":"549:28:7","nodeType":"ErrorDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"value","nameLocation":"586:5:7","nodeType":"VariableDeclaration","scope":762,"src":"578:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"length","nameLocation":"601:6:7","nodeType":"VariableDeclaration","scope":762,"src":"593:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:7"},"src":"543:66:7"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"615:108:7","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":765,"name":"StringsInvalidChar","nameLocation":"734:18:7","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"752:2:7"},"src":"728:27:7"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"761:84:7","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":768,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:7","nodeType":"ErrorDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"883:2:7"},"src":"850:36:7"},{"body":{"id":815,"nodeType":"Block","src":"1058:561:7","statements":[{"id":814,"nodeType":"UncheckedBlock","src":"1068:545:7","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"length","nameLocation":"1100:6:7","nodeType":"VariableDeclaration","scope":814,"src":"1092:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"1120:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":778,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"1109:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4193_$","typeString":"type(library Math)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3965,"src":"1109:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:7"},{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:7","nodeType":"VariableDeclaration","scope":814,"src":"1144:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":789,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1178:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":787,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:7"},{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:7","nodeType":"VariableDeclaration","scope":814,"src":"1199:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"nodeType":"VariableDeclarationStatement","src":"1199:11:7"},{"AST":{"nodeType":"YulBlock","src":"1249:67:7","statements":[{"nodeType":"YulAssignment","src":"1267:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:7"},"nodeType":"YulFunctionCall","src":"1286:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:7"},"nodeType":"YulFunctionCall","src":"1274:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":786,"isOffset":false,"isSlot":false,"src":"1278:6:7","valueSize":1},{"declaration":777,"isOffset":false,"isSlot":false,"src":"1294:6:7","valueSize":1},{"declaration":793,"isOffset":false,"isSlot":false,"src":"1267:3:7","valueSize":1}],"flags":["memory-safe"],"id":795,"nodeType":"InlineAssembly","src":"1224:92:7"},{"body":{"id":810,"nodeType":"Block","src":"1342:234:7","statements":[{"expression":{"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:7","subExpression":{"id":797,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1360:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"nodeType":"ExpressionStatement","src":"1360:5:7"},{"AST":{"nodeType":"YulBlock","src":"1408:86:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:7"},"nodeType":"YulFunctionCall","src":"1448:14:7"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:7"},"nodeType":"YulFunctionCall","src":"1443:32:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:7"},"nodeType":"YulFunctionCall","src":"1430:46:7"},"nodeType":"YulExpressionStatement","src":"1430:46:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":752,"isOffset":false,"isSlot":false,"src":"1464:10:7","valueSize":1},{"declaration":793,"isOffset":false,"isSlot":false,"src":"1438:3:7","valueSize":1},{"declaration":771,"isOffset":false,"isSlot":false,"src":"1452:5:7","valueSize":1}],"flags":["memory-safe"],"id":800,"nodeType":"InlineAssembly","src":"1383:111:7"},{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"1511:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"1511:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"1544:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"1540:21:7","trueBody":{"id":808,"nodeType":"Break","src":"1556:5:7"}}]},"condition":{"hexValue":"74727565","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":811,"nodeType":"WhileStatement","src":"1329:247:7"},{"expression":{"id":812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1596:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":775,"id":813,"nodeType":"Return","src":"1589:13:7"}]}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"892:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"value","nameLocation":"1013:5:7","nodeType":"VariableDeclaration","scope":816,"src":"1005:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:7"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1043:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":773,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:7"},"scope":1938,"src":"987:632:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"1795:92:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:7","trueExpression":{"hexValue":"2d","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1872:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":834,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"1857:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6102_$","typeString":"type(library SignedMath)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6101,"src":"1857:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1848:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:7","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:7","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":823,"id":840,"nodeType":"Return","src":"1805:75:7"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1625:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:7","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"value","nameLocation":"1750:5:7","nodeType":"VariableDeclaration","scope":842,"src":"1743:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":818,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:7"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"1780:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":821,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:7"},"scope":1938,"src":"1719:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"2066:100:7","statements":[{"id":860,"nodeType":"UncheckedBlock","src":"2076:84:7","statements":[{"expression":{"arguments":[{"id":851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2119:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2138:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":852,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"2126:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4193_$","typeString":"type(library Math)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4136,"src":"2126:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":850,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[862,945,965],"referencedDeclaration":945,"src":"2107:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":849,"id":859,"nodeType":"Return","src":"2100:49:7"}]}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"1893:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:7","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"value","nameLocation":"2021:5:7","nodeType":"VariableDeclaration","scope":862,"src":"2013:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:7"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"2051:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:7"},"scope":1938,"src":"1992:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"2379:435:7","statements":[{"assignments":[873],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:7","nodeType":"VariableDeclaration","scope":944,"src":"2389:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":875,"initialValue":{"id":874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:7"},{"assignments":[877],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:7","nodeType":"VariableDeclaration","scope":944,"src":"2425:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":881,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2461:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:7"},{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":887,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2482:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":889,"indexExpression":{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":892,"nodeType":"ExpressionStatement","src":"2482:15:7"},{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":893,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2507:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":895,"indexExpression":{"hexValue":"31","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":898,"nodeType":"ExpressionStatement","src":"2507:15:7"},{"body":{"id":927,"nodeType":"Block","src":"2577:95:7","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":913,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2591:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":915,"indexExpression":{"id":914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2598:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":916,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"2603:10:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":920,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2614:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":922,"nodeType":"ExpressionStatement","src":"2591:40:7"},{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":923,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ExpressionStatement","src":"2645:16:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2565:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"initializationExpression":{"assignments":[900],"declarations":[{"constant":false,"id":900,"mutability":"mutable","name":"i","nameLocation":"2545:1:7","nodeType":"VariableDeclaration","scope":928,"src":"2537:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":902,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2553:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:7"},"loopExpression":{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:7","subExpression":{"id":910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2574:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"2572:3:7"},"nodeType":"ForStatement","src":"2532:140:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2685:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"2681:96:7","trueBody":{"id":937,"nodeType":"Block","src":"2702:75:7","statements":[{"errorCall":{"arguments":[{"id":933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2752:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":934,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2759:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2723:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"RevertStatement","src":"2716:50:7"}]}},{"expression":{"arguments":[{"id":941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2800:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":939,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:7","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":871,"id":943,"nodeType":"Return","src":"2786:21:7"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"2172:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:7","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"value","nameLocation":"2318:5:7","nodeType":"VariableDeclaration","scope":945,"src":"2310:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"length","nameLocation":"2333:6:7","nodeType":"VariableDeclaration","scope":945,"src":"2325:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"2364:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":869,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:7"},"scope":1938,"src":"2289:525:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"3046:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":958,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3091:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":956,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:7","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:7","typeDescriptions":{}}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":961,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3099:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":953,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[862,945,965],"referencedDeclaration":945,"src":"3063:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":952,"id":963,"nodeType":"Return","src":"3056:58:7"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"2820:148:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":965,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:7","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"addr","nameLocation":"3002:4:7","nodeType":"VariableDeclaration","scope":965,"src":"2994:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:7"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"3031:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":950,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:7"},"scope":1938,"src":"2973:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1029,"nodeType":"Block","src":"3378:642:7","statements":[{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:7","nodeType":"VariableDeclaration","scope":1029,"src":"3388:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":973,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":981,"initialValue":{"arguments":[{"arguments":[{"id":978,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3428:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":977,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[862,945,965],"referencedDeclaration":965,"src":"3416:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":975,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:7","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:7"},{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:7","nodeType":"VariableDeclaration","scope":1029,"src":"3519:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":984,"nodeType":"VariableDeclarationStatement","src":"3519:17:7"},{"AST":{"nodeType":"YulBlock","src":"3571:78:7","statements":[{"nodeType":"YulAssignment","src":"3585:54:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:7","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:7","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:7"},"nodeType":"YulFunctionCall","src":"3616:17:7"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:7","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:7"},"nodeType":"YulFunctionCall","src":"3606:32:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:7"},"nodeType":"YulFunctionCall","src":"3598:41:7"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":974,"isOffset":false,"isSlot":false,"src":"3620:6:7","valueSize":1},{"declaration":983,"isOffset":false,"isSlot":false,"src":"3585:9:7","valueSize":1}],"flags":["memory-safe"],"id":985,"nodeType":"InlineAssembly","src":"3546:103:7"},{"body":{"id":1022,"nodeType":"Block","src":"3692:291:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3798:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1003,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3827:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1005,"indexExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3834:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1001,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:7","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"nodeType":"IfStatement","src":"3794:150:7","trueBody":{"id":1016,"nodeType":"Block","src":"3844:100:7","statements":[{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1010,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3912:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1012,"indexExpression":{"id":1011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3919:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1015,"nodeType":"ExpressionStatement","src":"3912:17:7"}]}},{"expression":{"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3957:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1021,"nodeType":"ExpressionStatement","src":"3957:15:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"initializationExpression":{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"i","nameLocation":"3672:1:7","nodeType":"VariableDeclaration","scope":1023,"src":"3664:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"hexValue":"3431","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:7","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:7"},"loopExpression":{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:7","subExpression":{"id":993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3689:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"3687:3:7"},"nodeType":"ForStatement","src":"3659:324:7"},{"expression":{"arguments":[{"id":1026,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4006:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1024,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:7","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":972,"id":1028,"nodeType":"Return","src":"3992:21:7"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"3127:165:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:7","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"addr","nameLocation":"3334:4:7","nodeType":"VariableDeclaration","scope":1030,"src":"3326:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:7"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1030,"src":"3363:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":970,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:7"},"scope":1938,"src":"3297:723:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"4175:104:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4198:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1040,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:7","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:7","memberName":"length","nodeType":"MemberAccess","src":"4192:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4217:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:7","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:7","memberName":"length","nodeType":"MemberAccess","src":"4211:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4246:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:7","typeDescriptions":{}}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4269:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:7","typeDescriptions":{}}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1057,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1039,"id":1065,"nodeType":"Return","src":"4185:87:7"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"4026:66:7","text":" @dev Returns true if the two strings are equal."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:7","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"a","nameLocation":"4126:1:7","nodeType":"VariableDeclaration","scope":1067,"src":"4112:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1032,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"b","nameLocation":"4143:1:7","nodeType":"VariableDeclaration","scope":1067,"src":"4129:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1034,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:7"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"4169:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:7"},"scope":1938,"src":"4097:182:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"4576:64:7","statements":[{"expression":{"arguments":[{"id":1076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4603:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1080,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4619:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1078,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:7","typeDescriptions":{}}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:7","memberName":"length","nodeType":"MemberAccess","src":"4613:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1075,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1086,1117],"referencedDeclaration":1117,"src":"4593:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1074,"id":1084,"nodeType":"Return","src":"4586:47:7"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"4285:214:7","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:7","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"input","nameLocation":"4537:5:7","nodeType":"VariableDeclaration","scope":1086,"src":"4523:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1069,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:7"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"4567:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:7"},"scope":1938,"src":"4504:136:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"5038:153:7","statements":[{"assignments":[1099,1101],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"success","nameLocation":"5054:7:7","nodeType":"VariableDeclaration","scope":1116,"src":"5049:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"5071:5:7","nodeType":"VariableDeclaration","scope":1116,"src":"5063:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1107,"initialValue":{"arguments":[{"id":1103,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5093:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1104,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5100:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1105,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5107:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1138,1175],"referencedDeclaration":1175,"src":"5080:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:7"},{"condition":{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:7","subExpression":{"id":1108,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"5126:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"IfStatement","src":"5121:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1110,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5142:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"RevertStatement","src":"5135:27:7"}},{"expression":{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"5179:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1097,"id":1115,"nodeType":"Return","src":"5172:12:7"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"4646:287:7","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:7","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"input","nameLocation":"4971:5:7","nodeType":"VariableDeclaration","scope":1117,"src":"4957:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"begin","nameLocation":"4986:5:7","nodeType":"VariableDeclaration","scope":1117,"src":"4978:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"end","nameLocation":"5001:3:7","nodeType":"VariableDeclaration","scope":1117,"src":"4993:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:7"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"5029:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:7"},"scope":1938,"src":"4938:253:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1137,"nodeType":"Block","src":"5512:83:7","statements":[{"expression":{"arguments":[{"id":1128,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5558:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1132,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5574:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:7","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:7","memberName":"length","nodeType":"MemberAccess","src":"5568:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1127,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5529:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1126,"id":1136,"nodeType":"Return","src":"5522:66:7"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"5197:215:7","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:7","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"input","nameLocation":"5453:5:7","nodeType":"VariableDeclaration","scope":1138,"src":"5439:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:7"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"success","nameLocation":"5488:7:7","nodeType":"VariableDeclaration","scope":1138,"src":"5483:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1122,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"value","nameLocation":"5505:5:7","nodeType":"VariableDeclaration","scope":1138,"src":"5497:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:7"},"scope":1938,"src":"5417:178:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1174,"nodeType":"Block","src":"5997:144:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6011:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1155,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6023:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1153,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:7","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:7","memberName":"length","nodeType":"MemberAccess","src":"6017:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1159,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6040:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1160,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6048:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1167,"nodeType":"IfStatement","src":"6007:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1151,"id":1166,"nodeType":"Return","src":"6053:17:7"}},{"expression":{"arguments":[{"id":1169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6116:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1170,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6123:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1171,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"6130:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1168,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6087:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1151,"id":1173,"nodeType":"Return","src":"6080:54:7"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"5601:238:7","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:7","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"input","nameLocation":"5889:5:7","nodeType":"VariableDeclaration","scope":1175,"src":"5875:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1140,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"begin","nameLocation":"5912:5:7","nodeType":"VariableDeclaration","scope":1175,"src":"5904:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"end","nameLocation":"5935:3:7","nodeType":"VariableDeclaration","scope":1175,"src":"5927:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:7"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"success","nameLocation":"5973:7:7","nodeType":"VariableDeclaration","scope":1175,"src":"5968:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1147,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"value","nameLocation":"5990:5:7","nodeType":"VariableDeclaration","scope":1175,"src":"5982:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:7"},"scope":1938,"src":"5844:297:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"6521:347:7","statements":[{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:7","nodeType":"VariableDeclaration","scope":1244,"src":"6531:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"id":1193,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6559:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:7","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:7"},{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"result","nameLocation":"6584:6:7","nodeType":"VariableDeclaration","scope":1244,"src":"6576:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:7"},{"body":{"id":1238,"nodeType":"Block","src":"6642:189:7","statements":[{"assignments":[1211],"declarations":[{"constant":false,"id":1211,"mutability":"mutable","name":"chr","nameLocation":"6662:3:7","nodeType":"VariableDeclaration","scope":1238,"src":"6656:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1210,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1221,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1216,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6711:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6719:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1215,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"6688:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1213,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:7","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1212,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6668:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6741:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:7","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1229,"nodeType":"IfStatement","src":"6737:30:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1188,"id":1228,"nodeType":"Return","src":"6750:17:7"}},{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6781:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ExpressionStatement","src":"6781:12:7"},{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6807:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1235,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6817:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ExpressionStatement","src":"6807:13:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6628:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1205,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6632:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"initializationExpression":{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"i","nameLocation":"6617:1:7","nodeType":"VariableDeclaration","scope":1239,"src":"6609:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"id":1202,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6621:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:7"},"loopExpression":{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:7","subExpression":{"id":1207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6639:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"6637:3:7"},"nodeType":"ForStatement","src":"6604:227:7"},{"expression":{"components":[{"hexValue":"74727565","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6854:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1188,"id":1243,"nodeType":"Return","src":"6840:21:7"}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"6147:201:7","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:7","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"input","nameLocation":"6414:5:7","nodeType":"VariableDeclaration","scope":1245,"src":"6400:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1177,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"begin","nameLocation":"6437:5:7","nodeType":"VariableDeclaration","scope":1245,"src":"6429:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"end","nameLocation":"6460:3:7","nodeType":"VariableDeclaration","scope":1245,"src":"6452:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:7"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"success","nameLocation":"6497:7:7","nodeType":"VariableDeclaration","scope":1245,"src":"6492:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1184,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"value","nameLocation":"6514:5:7","nodeType":"VariableDeclaration","scope":1245,"src":"6506:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:7"},"scope":1938,"src":"6353:515:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1263,"nodeType":"Block","src":"7165:63:7","statements":[{"expression":{"arguments":[{"id":1254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7191:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1258,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7207:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1256,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:7","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:7","memberName":"length","nodeType":"MemberAccess","src":"7201:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1264,1295],"referencedDeclaration":1295,"src":"7182:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1252,"id":1262,"nodeType":"Return","src":"7175:46:7"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"6874:216:7","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:7","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"input","nameLocation":"7127:5:7","nodeType":"VariableDeclaration","scope":1264,"src":"7113:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:7"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1264,"src":"7157:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1250,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:7"},"scope":1938,"src":"7095:133:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"7633:151:7","statements":[{"assignments":[1277,1279],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"success","nameLocation":"7649:7:7","nodeType":"VariableDeclaration","scope":1294,"src":"7644:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1276,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"value","nameLocation":"7665:5:7","nodeType":"VariableDeclaration","scope":1294,"src":"7658:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1278,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1285,"initialValue":{"arguments":[{"id":1281,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"7686:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1282,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"7693:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1283,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7700:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1316,1358],"referencedDeclaration":1358,"src":"7674:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:7"},{"condition":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:7","subExpression":{"id":1286,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7719:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1291,"nodeType":"IfStatement","src":"7714:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1288,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7735:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"RevertStatement","src":"7728:27:7"}},{"expression":{"id":1292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"7772:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1275,"id":1293,"nodeType":"Return","src":"7765:12:7"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"7234:296:7","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:7","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"input","nameLocation":"7567:5:7","nodeType":"VariableDeclaration","scope":1295,"src":"7553:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1266,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"begin","nameLocation":"7582:5:7","nodeType":"VariableDeclaration","scope":1295,"src":"7574:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"end","nameLocation":"7597:3:7","nodeType":"VariableDeclaration","scope":1295,"src":"7589:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:7"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"7625:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1273,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:7"},"scope":1938,"src":"7535:249:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"8175:82:7","statements":[{"expression":{"arguments":[{"id":1306,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8220:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8236:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1308,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:7","typeDescriptions":{}}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:7","memberName":"length","nodeType":"MemberAccess","src":"8230:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8192:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1304,"id":1314,"nodeType":"Return","src":"8185:65:7"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"7790:287:7","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:7","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"input","nameLocation":"8117:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"8103:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:7"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"success","nameLocation":"8152:7:7","nodeType":"VariableDeclaration","scope":1316,"src":"8147:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1300,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"8168:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"8161:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1302,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:7"},"scope":1938,"src":"8082:175:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1321,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:7","nodeType":"VariableDeclaration","scope":1938,"src":"8263:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:7","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1357,"nodeType":"Block","src":"8779:143:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"8793:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1338,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8805:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1336,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:7","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:7","memberName":"length","nodeType":"MemberAccess","src":"8799:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8822:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1343,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"8830:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"8789:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1334,"id":1349,"nodeType":"Return","src":"8835:17:7"}},{"expression":{"arguments":[{"id":1352,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8897:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1353,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8904:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1354,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"8911:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1351,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8869:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1334,"id":1356,"nodeType":"Return","src":"8862:53:7"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"8320:303:7","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:7","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"input","nameLocation":"8672:5:7","nodeType":"VariableDeclaration","scope":1358,"src":"8658:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1323,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"begin","nameLocation":"8695:5:7","nodeType":"VariableDeclaration","scope":1358,"src":"8687:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"end","nameLocation":"8718:3:7","nodeType":"VariableDeclaration","scope":1358,"src":"8710:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:7"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"success","nameLocation":"8756:7:7","nodeType":"VariableDeclaration","scope":1358,"src":"8751:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1330,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"value","nameLocation":"8772:5:7","nodeType":"VariableDeclaration","scope":1358,"src":"8765:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1332,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:7"},"scope":1938,"src":"8628:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"9299:812:7","statements":[{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:7","nodeType":"VariableDeclaration","scope":1478,"src":"9309:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1378,"initialValue":{"arguments":[{"id":1376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"9337:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1374,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:7","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:7"},{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"sign","nameLocation":"9407:4:7","nodeType":"VariableDeclaration","scope":1478,"src":"9400:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1379,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1396,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9414:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1382,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"9423:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1391,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"9471:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1392,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9479:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1390,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"9448:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1388,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:7","typeDescriptions":{}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:7","trueExpression":{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1384,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:7","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:7"},{"assignments":[1398],"declarations":[{"constant":false,"id":1398,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:7","nodeType":"VariableDeclaration","scope":1478,"src":"9567:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1397,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1405,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"9587:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1400,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:7","typeDescriptions":{}}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:7"},{"assignments":[1407],"declarations":[{"constant":false,"id":1407,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:7","nodeType":"VariableDeclaration","scope":1478,"src":"9616:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1414,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"9636:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1409,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:7","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:7"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"offset","nameLocation":"9673:6:7","nodeType":"VariableDeclaration","scope":1478,"src":"9665:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9683:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1418,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9699:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"9682:37:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:7"},{"assignments":[1425,1427],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:7","nodeType":"VariableDeclaration","scope":1478,"src":"9733:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:7","nodeType":"VariableDeclaration","scope":1478,"src":"9750:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1435,"initialValue":{"arguments":[{"id":1429,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"9783:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9790:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1431,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"9798:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1433,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"9806:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1138,1175],"referencedDeclaration":1175,"src":"9770:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"9825:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9839:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1438,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"9850:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"9967:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1457,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9981:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9997:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1460,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"10009:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1371,"id":1475,"nodeType":"Return","src":"10087:17:7"},"id":1476,"nodeType":"IfStatement","src":"9963:141:7","trueBody":{"id":1471,"nodeType":"Block","src":"10025:56:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1465,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:7","memberName":"min","nodeType":"MemberAccess","src":"10053:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1371,"id":1470,"nodeType":"Return","src":"10039:31:7"}]}},"id":1477,"nodeType":"IfStatement","src":"9821:283:7","trueBody":{"id":1455,"nodeType":"Block","src":"9866:91:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1442,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9894:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1450,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9936:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1448,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:7","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:7","trueExpression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:7","subExpression":{"arguments":[{"id":1445,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9917:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1443,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:7","typeDescriptions":{}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1371,"id":1454,"nodeType":"Return","src":"9880:66:7"}]}}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"8928:200:7","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:7","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"input","nameLocation":"9193:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"9179:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"begin","nameLocation":"9216:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"9208:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"end","nameLocation":"9239:3:7","nodeType":"VariableDeclaration","scope":1479,"src":"9231:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:7"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"success","nameLocation":"9276:7:7","nodeType":"VariableDeclaration","scope":1479,"src":"9271:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1367,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"value","nameLocation":"9292:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"9285:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1369,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:7"},"scope":1938,"src":"9133:978:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1497,"nodeType":"Block","src":"10456:67:7","statements":[{"expression":{"arguments":[{"id":1488,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"10486:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1492,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"10502:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1490,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:7","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:7","memberName":"length","nodeType":"MemberAccess","src":"10496:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1498,1529],"referencedDeclaration":1529,"src":"10473:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1486,"id":1496,"nodeType":"Return","src":"10466:50:7"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"10117:259:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:7","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"input","nameLocation":"10417:5:7","nodeType":"VariableDeclaration","scope":1498,"src":"10403:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1481,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:7"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"10447:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:7"},"scope":1938,"src":"10381:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"10937:156:7","statements":[{"assignments":[1511,1513],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"success","nameLocation":"10953:7:7","nodeType":"VariableDeclaration","scope":1528,"src":"10948:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"10970:5:7","nodeType":"VariableDeclaration","scope":1528,"src":"10962:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"id":1515,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10995:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1516,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"11002:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1517,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"11009:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1550,1587],"referencedDeclaration":1587,"src":"10979:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:7"},{"condition":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:7","subExpression":{"id":1520,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"11028:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1525,"nodeType":"IfStatement","src":"11023:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1522,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11044:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"11037:27:7"}},{"expression":{"id":1526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"11081:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1509,"id":1527,"nodeType":"Return","src":"11074:12:7"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"10529:300:7","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:7","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"input","nameLocation":"10870:5:7","nodeType":"VariableDeclaration","scope":1529,"src":"10856:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1500,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"begin","nameLocation":"10885:5:7","nodeType":"VariableDeclaration","scope":1529,"src":"10877:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"end","nameLocation":"10900:3:7","nodeType":"VariableDeclaration","scope":1529,"src":"10892:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:7"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"10928:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:7"},"scope":1938,"src":"10834:259:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"11420:86:7","statements":[{"expression":{"arguments":[{"id":1540,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"11469:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1544,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"11485:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1542,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:7","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:7","memberName":"length","nodeType":"MemberAccess","src":"11479:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1539,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11437:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1538,"id":1548,"nodeType":"Return","src":"11430:69:7"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"11099:218:7","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:7","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"input","nameLocation":"11361:5:7","nodeType":"VariableDeclaration","scope":1550,"src":"11347:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1531,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:7"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"success","nameLocation":"11396:7:7","nodeType":"VariableDeclaration","scope":1550,"src":"11391:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1534,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"value","nameLocation":"11413:5:7","nodeType":"VariableDeclaration","scope":1550,"src":"11405:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:7"},"scope":1938,"src":"11322:184:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"11914:147:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11928:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1567,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"11940:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1565,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:7","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:7","memberName":"length","nodeType":"MemberAccess","src":"11934:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11957:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1572,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11965:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"IfStatement","src":"11924:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1563,"id":1578,"nodeType":"Return","src":"11970:17:7"}},{"expression":{"arguments":[{"id":1581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"12036:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1582,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"12043:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1583,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12050:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12004:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1563,"id":1585,"nodeType":"Return","src":"11997:57:7"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"11512:241:7","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:7","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"input","nameLocation":"11806:5:7","nodeType":"VariableDeclaration","scope":1587,"src":"11792:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1552,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"begin","nameLocation":"11829:5:7","nodeType":"VariableDeclaration","scope":1587,"src":"11821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"end","nameLocation":"11852:3:7","nodeType":"VariableDeclaration","scope":1587,"src":"11844:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:7"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"success","nameLocation":"11890:7:7","nodeType":"VariableDeclaration","scope":1587,"src":"11885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1559,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"value","nameLocation":"11907:5:7","nodeType":"VariableDeclaration","scope":1587,"src":"11899:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:7"},"scope":1938,"src":"11758:303:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"12447:880:7","statements":[{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:7","nodeType":"VariableDeclaration","scope":1689,"src":"12457:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1607,"initialValue":{"arguments":[{"id":1605,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12485:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1603,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:7","typeDescriptions":{}}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:7"},{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:7","nodeType":"VariableDeclaration","scope":1689,"src":"12539:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1608,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1629,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12557:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12563:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1619,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"12607:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1620,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12615:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"12584:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1616,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:7","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1623,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:7","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:7"},{"assignments":[1631],"declarations":[{"constant":false,"id":1631,"mutability":"mutable","name":"offset","nameLocation":"12727:6:7","nodeType":"VariableDeclaration","scope":1689,"src":"12719:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1632,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"12736:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"12736:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:7"},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"result","nameLocation":"12777:6:7","nodeType":"VariableDeclaration","scope":1689,"src":"12769:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1641,"initialValue":{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:7"},{"body":{"id":1683,"nodeType":"Block","src":"12844:446:7","statements":[{"assignments":[1655],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"chr","nameLocation":"12864:3:7","nodeType":"VariableDeclaration","scope":1683,"src":"12858:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1654,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1665,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1660,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"12913:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1661,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"12921:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"12890:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1657,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:7","typeDescriptions":{}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1656,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"12870:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"12943:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1673,"nodeType":"IfStatement","src":"12939:31:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1600,"id":1672,"nodeType":"Return","src":"12953:17:7"}},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"12984:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1677,"nodeType":"ExpressionStatement","src":"12984:12:7"},{"id":1682,"nodeType":"UncheckedBlock","src":"13010:270:7","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13252:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1679,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"13262:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"13252:13:7"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"12830:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1649,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12834:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1684,"initializationExpression":{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"i","nameLocation":"12810:1:7","nodeType":"VariableDeclaration","scope":1684,"src":"12802:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1647,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12814:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1645,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12822:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:7"},"loopExpression":{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:7","subExpression":{"id":1651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"12841:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"12839:3:7"},"nodeType":"ForStatement","src":"12797:493:7"},{"expression":{"components":[{"hexValue":"74727565","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13313:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1600,"id":1688,"nodeType":"Return","src":"13299:21:7"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"12067:204:7","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:7","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"input","nameLocation":"12340:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"12326:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1589,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"begin","nameLocation":"12363:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"12355:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"end","nameLocation":"12386:3:7","nodeType":"VariableDeclaration","scope":1690,"src":"12378:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:7"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"success","nameLocation":"12423:7:7","nodeType":"VariableDeclaration","scope":1690,"src":"12418:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1596,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"value","nameLocation":"12440:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"12432:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:7"},"scope":1938,"src":"12276:1051:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1708,"nodeType":"Block","src":"13625:67:7","statements":[{"expression":{"arguments":[{"id":1699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"13655:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"13671:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1701,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:7","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:7","memberName":"length","nodeType":"MemberAccess","src":"13665:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1698,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1709,1740],"referencedDeclaration":1740,"src":"13642:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1697,"id":1707,"nodeType":"Return","src":"13635:50:7"}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"13333:212:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:7","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"input","nameLocation":"13586:5:7","nodeType":"VariableDeclaration","scope":1709,"src":"13572:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:7"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"13616:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:7"},"scope":1938,"src":"13550:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"14058:165:7","statements":[{"assignments":[1722,1724],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"success","nameLocation":"14074:7:7","nodeType":"VariableDeclaration","scope":1739,"src":"14069:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"value","nameLocation":"14091:5:7","nodeType":"VariableDeclaration","scope":1739,"src":"14083:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1730,"initialValue":{"arguments":[{"id":1726,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"14116:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1727,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14123:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1728,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"14130:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1725,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1761,1865],"referencedDeclaration":1865,"src":"14100:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:7"},{"condition":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:7","subExpression":{"id":1731,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"14149:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1736,"nodeType":"IfStatement","src":"14144:50:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1733,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"14165:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"RevertStatement","src":"14158:36:7"}},{"expression":{"id":1737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"14211:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1720,"id":1738,"nodeType":"Return","src":"14204:12:7"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"13698:252:7","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:7","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"input","nameLocation":"13991:5:7","nodeType":"VariableDeclaration","scope":1740,"src":"13977:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1711,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"begin","nameLocation":"14006:5:7","nodeType":"VariableDeclaration","scope":1740,"src":"13998:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"end","nameLocation":"14021:3:7","nodeType":"VariableDeclaration","scope":1740,"src":"14013:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:7"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"14049:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:7"},"scope":1938,"src":"13955:268:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"14523:70:7","statements":[{"expression":{"arguments":[{"id":1751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"14556:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1755,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"14572:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:7","typeDescriptions":{}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:7","memberName":"length","nodeType":"MemberAccess","src":"14566:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1761,1865],"referencedDeclaration":1865,"src":"14540:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1749,"id":1759,"nodeType":"Return","src":"14533:53:7"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"14229:191:7","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:7","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"input","nameLocation":"14464:5:7","nodeType":"VariableDeclaration","scope":1761,"src":"14450:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1742,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:7"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"success","nameLocation":"14499:7:7","nodeType":"VariableDeclaration","scope":1761,"src":"14494:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1745,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"value","nameLocation":"14516:5:7","nodeType":"VariableDeclaration","scope":1761,"src":"14508:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:7"},"scope":1938,"src":"14425:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"14963:733:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1775,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"14977:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1778,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14989:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:7","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:7","memberName":"length","nodeType":"MemberAccess","src":"14983:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1783,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15014:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1793,"nodeType":"IfStatement","src":"14973:72:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:7","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1774,"id":1792,"nodeType":"Return","src":"15019:26:7"}},{"assignments":[1795],"declarations":[{"constant":false,"id":1795,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:7","nodeType":"VariableDeclaration","scope":1864,"src":"15056:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1794,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1818,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15074:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15080:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1807,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15130:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1805,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:7","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1809,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15138:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1804,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"15101:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1802,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:7","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1812,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:7","typeDescriptions":{}}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:7"},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:7","nodeType":"VariableDeclaration","scope":1864,"src":"15242:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1822,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"15272:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"15272:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15359:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1830,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15365:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1832,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"15374:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1862,"nodeType":"Block","src":"15639:51:7","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:7","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1774,"id":1861,"nodeType":"Return","src":"15653:26:7"}]},"id":1863,"nodeType":"IfStatement","src":"15355:335:7","trueBody":{"id":1854,"nodeType":"Block","src":"15390:243:7","statements":[{"assignments":[1835,1837],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"s","nameLocation":"15511:1:7","nodeType":"VariableDeclaration","scope":1854,"src":"15506:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1834,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"v","nameLocation":"15522:1:7","nodeType":"VariableDeclaration","scope":1854,"src":"15514:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"arguments":[{"id":1839,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15559:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1840,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15566:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1841,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15573:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1838,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"15527:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:7"},{"expression":{"components":[{"id":1844,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"15599:1:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1849,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"15618:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1847,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:7","typeDescriptions":{}}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:7","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1774,"id":1853,"nodeType":"Return","src":"15591:31:7"}]}}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"14599:203:7","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:7","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"input","nameLocation":"14855:5:7","nodeType":"VariableDeclaration","scope":1865,"src":"14841:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"begin","nameLocation":"14878:5:7","nodeType":"VariableDeclaration","scope":1865,"src":"14870:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"end","nameLocation":"14901:3:7","nodeType":"VariableDeclaration","scope":1865,"src":"14893:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:7"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"success","nameLocation":"14939:7:7","nodeType":"VariableDeclaration","scope":1865,"src":"14934:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1770,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"14956:5:7","nodeType":"VariableDeclaration","scope":1865,"src":"14948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:7"},"scope":1938,"src":"14807:889:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"15765:461:7","statements":[{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"value","nameLocation":"15781:5:7","nodeType":"VariableDeclaration","scope":1924,"src":"15775:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1872,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1878,"initialValue":{"arguments":[{"id":1876,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"15795:3:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1874,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:7","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:7"},{"id":1921,"nodeType":"UncheckedBlock","src":"15959:238:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"15987:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:7","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16001:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:7","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16047:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16061:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:7","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16108:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16122:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:7","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1913,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:7","memberName":"max","nodeType":"MemberAccess","src":"16171:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1871,"id":1917,"nodeType":"Return","src":"16164:22:7"},"id":1918,"nodeType":"IfStatement","src":"16104:82:7","trueBody":{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16134:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:7","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1911,"nodeType":"ExpressionStatement","src":"16134:11:7"}},"id":1919,"nodeType":"IfStatement","src":"16043:143:7","trueBody":{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16074:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:7","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1900,"nodeType":"ExpressionStatement","src":"16074:11:7"}},"id":1920,"nodeType":"IfStatement","src":"15983:203:7","trueBody":{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16013:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1889,"nodeType":"ExpressionStatement","src":"16013:11:7"}}]},{"expression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"16214:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1871,"id":1923,"nodeType":"Return","src":"16207:12:7"}]},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:7","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"chr","nameLocation":"15731:3:7","nodeType":"VariableDeclaration","scope":1925,"src":"15724:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1866,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:7"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"15758:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1869,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:7"},"scope":1938,"src":"15702:524:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1936,"nodeType":"Block","src":"16611:225:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:7","statements":[{"nodeType":"YulAssignment","src":"16774:46:7","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:7","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:7"},"nodeType":"YulFunctionCall","src":"16801:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:7"},"nodeType":"YulFunctionCall","src":"16789:30:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:7"},"nodeType":"YulFunctionCall","src":"16783:37:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1928,"isOffset":false,"isSlot":false,"src":"16793:6:7","valueSize":1},{"declaration":1930,"isOffset":false,"isSlot":false,"src":"16811:6:7","valueSize":1},{"declaration":1933,"isOffset":false,"isSlot":false,"src":"16774:5:7","valueSize":1}],"flags":["memory-safe"],"id":1935,"nodeType":"InlineAssembly","src":"16735:95:7"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"16232:268:7","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:7","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:7","nodeType":"VariableDeclaration","scope":1937,"src":"16537:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1927,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"offset","nameLocation":"16566:6:7","nodeType":"VariableDeclaration","scope":1937,"src":"16558:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1929,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:7"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"value","nameLocation":"16604:5:7","nodeType":"VariableDeclaration","scope":1937,"src":"16596:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:7"},"scope":1938,"src":"16505:331:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1939,"src":"297:16541:7","usedErrors":[762,765,768],"usedEvents":[]}],"src":"101:16738:7"},"id":7},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2286]},"id":2287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1940,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"138:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2286,"linearizedBaseContracts":[2286],"name":"ECDSA","nameLocation":"352:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1946,"members":[{"id":1942,"name":"NoError","nameLocation":"392:7:8","nodeType":"EnumValue","src":"392:7:8"},{"id":1943,"name":"InvalidSignature","nameLocation":"409:16:8","nodeType":"EnumValue","src":"409:16:8"},{"id":1944,"name":"InvalidSignatureLength","nameLocation":"435:22:8","nodeType":"EnumValue","src":"435:22:8"},{"id":1945,"name":"InvalidSignatureS","nameLocation":"467:17:8","nodeType":"EnumValue","src":"467:17:8"}],"name":"RecoverError","nameLocation":"369:12:8","nodeType":"EnumDefinition","src":"364:126:8"},{"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"496:63:8","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1949,"name":"ECDSAInvalidSignature","nameLocation":"570:21:8","nodeType":"ErrorDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"591:2:8"},"src":"564:30:8"},{"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"600:60:8","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1954,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:8","nodeType":"ErrorDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"length","nameLocation":"707:6:8","nodeType":"VariableDeclaration","scope":1954,"src":"699:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:8"},"src":"665:50:8"},{"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"721:85:8","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1959,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:8","nodeType":"ErrorDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"s","nameLocation":"848:1:8","nodeType":"VariableDeclaration","scope":1959,"src":"840:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:8"},"src":"811:40:8"},{"body":{"id":2011,"nodeType":"Block","src":"2285:622:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1974,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"2299:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:8","memberName":"length","nodeType":"MemberAccess","src":"2299:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2009,"nodeType":"Block","src":"2793:108:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:8","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2000,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2827:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1944,"src":"2827:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2004,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"2872:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:8","memberName":"length","nodeType":"MemberAccess","src":"2872:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:8","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1973,"id":2008,"nodeType":"Return","src":"2807:83:8"}]},"id":2010,"nodeType":"IfStatement","src":"2295:606:8","trueBody":{"id":1995,"nodeType":"Block","src":"2323:464:8","statements":[{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"r","nameLocation":"2345:1:8","nodeType":"VariableDeclaration","scope":1995,"src":"2337:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1980,"nodeType":"VariableDeclarationStatement","src":"2337:9:8"},{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"s","nameLocation":"2368:1:8","nodeType":"VariableDeclaration","scope":1995,"src":"2360:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1983,"nodeType":"VariableDeclarationStatement","src":"2360:9:8"},{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"v","nameLocation":"2389:1:8","nodeType":"VariableDeclaration","scope":1995,"src":"2383:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1984,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1986,"nodeType":"VariableDeclarationStatement","src":"2383:7:8"},{"AST":{"nodeType":"YulBlock","src":"2560:171:8","statements":[{"nodeType":"YulAssignment","src":"2578:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:8"},"nodeType":"YulFunctionCall","src":"2589:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:8"},"nodeType":"YulFunctionCall","src":"2583:27:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:8"}]},{"nodeType":"YulAssignment","src":"2627:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:8"},"nodeType":"YulFunctionCall","src":"2638:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:8"},"nodeType":"YulFunctionCall","src":"2632:27:8"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:8"}]},{"nodeType":"YulAssignment","src":"2676:41:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:8"},"nodeType":"YulFunctionCall","src":"2695:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:8"},"nodeType":"YulFunctionCall","src":"2689:27:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:8"},"nodeType":"YulFunctionCall","src":"2681:36:8"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1979,"isOffset":false,"isSlot":false,"src":"2578:1:8","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"2627:1:8","valueSize":1},{"declaration":1964,"isOffset":false,"isSlot":false,"src":"2593:9:8","valueSize":1},{"declaration":1964,"isOffset":false,"isSlot":false,"src":"2642:9:8","valueSize":1},{"declaration":1964,"isOffset":false,"isSlot":false,"src":"2699:9:8","valueSize":1},{"declaration":1985,"isOffset":false,"isSlot":false,"src":"2676:1:8","valueSize":1}],"flags":["memory-safe"],"id":1987,"nodeType":"InlineAssembly","src":"2535:196:8"},{"expression":{"arguments":[{"id":1989,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2762:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1990,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"2768:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1991,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2771:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1992,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2774:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1988,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2012,2092,2200],"referencedDeclaration":2200,"src":"2751:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1973,"id":1994,"nodeType":"Return","src":"2744:32:8"}]}}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"857:1267:8","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2012,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:8","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"hash","nameLocation":"2166:4:8","nodeType":"VariableDeclaration","scope":2012,"src":"2158:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"signature","nameLocation":"2193:9:8","nodeType":"VariableDeclaration","scope":2012,"src":"2180:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1963,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:8"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:8","nodeType":"VariableDeclaration","scope":2012,"src":"2232:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"err","nameLocation":"2264:3:8","nodeType":"VariableDeclaration","scope":2012,"src":"2251:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1969,"nodeType":"UserDefinedTypeName","pathNode":{"id":1968,"name":"RecoverError","nameLocations":["2251:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"2251:12:8"},"referencedDeclaration":1946,"src":"2251:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:8","nodeType":"VariableDeclaration","scope":2012,"src":"2269:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:8"},"scope":2286,"src":"2129:778:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"3801:168:8","statements":[{"assignments":[2023,2026,2028],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:8","nodeType":"VariableDeclaration","scope":2041,"src":"3812:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"error","nameLocation":"3844:5:8","nodeType":"VariableDeclaration","scope":2041,"src":"3831:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"RecoverError","nameLocations":["3831:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"3831:12:8"},"referencedDeclaration":1946,"src":"3831:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:8","nodeType":"VariableDeclaration","scope":2041,"src":"3851:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2033,"initialValue":{"arguments":[{"id":2030,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3882:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2031,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3888:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2029,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2012,2092,2200],"referencedDeclaration":2012,"src":"3871:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:8"},{"expression":{"arguments":[{"id":2035,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3920:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"id":2036,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"3927:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2034,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3908:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1946_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2038,"nodeType":"ExpressionStatement","src":"3908:28:8"},{"expression":{"id":2039,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3953:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2021,"id":2040,"nodeType":"Return","src":"3946:16:8"}]},"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"2913:796:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:8","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"hash","nameLocation":"3739:4:8","nodeType":"VariableDeclaration","scope":2042,"src":"3731:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"signature","nameLocation":"3758:9:8","nodeType":"VariableDeclaration","scope":2042,"src":"3745:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2016,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:8"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"3792:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:8"},"scope":2286,"src":"3714:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"4348:342:8","statements":[{"id":2090,"nodeType":"UncheckedBlock","src":"4358:326:8","statements":[{"assignments":[2060],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"s","nameLocation":"4390:1:8","nodeType":"VariableDeclaration","scope":2090,"src":"4382:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2067,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4394:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:8","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:8"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"v","nameLocation":"4591:1:8","nodeType":"VariableDeclaration","scope":2090,"src":"4585:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2068,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2082,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2074,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4610:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:8","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2070,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:8","typeDescriptions":{}}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:8"},{"expression":{"arguments":[{"id":2084,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"4659:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2085,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"4665:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2086,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"4668:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2087,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4671:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2083,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2012,2092,2200],"referencedDeclaration":2200,"src":"4648:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2058,"id":2089,"nodeType":"Return","src":"4641:32:8"}]}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"3975:205:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:8","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"hash","nameLocation":"4222:4:8","nodeType":"VariableDeclaration","scope":2092,"src":"4214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"r","nameLocation":"4244:1:8","nodeType":"VariableDeclaration","scope":2092,"src":"4236:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"vs","nameLocation":"4263:2:8","nodeType":"VariableDeclaration","scope":2092,"src":"4255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:8"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:8","nodeType":"VariableDeclaration","scope":2092,"src":"4295:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"err","nameLocation":"4327:3:8","nodeType":"VariableDeclaration","scope":2092,"src":"4314:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"RecoverError","nameLocations":["4314:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"4314:12:8"},"referencedDeclaration":1946,"src":"4314:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:8","nodeType":"VariableDeclaration","scope":2092,"src":"4332:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:8"},"scope":2286,"src":"4185:505:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"4903:164:8","statements":[{"assignments":[2105,2108,2110],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:8","nodeType":"VariableDeclaration","scope":2124,"src":"4914:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"error","nameLocation":"4946:5:8","nodeType":"VariableDeclaration","scope":2124,"src":"4933:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2107,"nodeType":"UserDefinedTypeName","pathNode":{"id":2106,"name":"RecoverError","nameLocations":["4933:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"4933:12:8"},"referencedDeclaration":1946,"src":"4933:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:8","nodeType":"VariableDeclaration","scope":2124,"src":"4953:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2116,"initialValue":{"arguments":[{"id":2112,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"4984:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4990:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2114,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4993:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2111,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2012,2092,2200],"referencedDeclaration":2092,"src":"4973:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:8"},{"expression":{"arguments":[{"id":2118,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"5018:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"id":2119,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5025:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2117,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"5006:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1946_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"ExpressionStatement","src":"5006:28:8"},{"expression":{"id":2122,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5051:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2103,"id":2123,"nodeType":"Return","src":"5044:16:8"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"4696:116:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:8","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"hash","nameLocation":"4842:4:8","nodeType":"VariableDeclaration","scope":2125,"src":"4834:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"r","nameLocation":"4856:1:8","nodeType":"VariableDeclaration","scope":2125,"src":"4848:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"vs","nameLocation":"4867:2:8","nodeType":"VariableDeclaration","scope":2125,"src":"4859:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:8"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"4894:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:8"},"scope":2286,"src":"4817:250:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"5382:1372:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2146,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6278:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:8","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2160,"nodeType":"IfStatement","src":"6266:164:8","trueBody":{"id":2159,"nodeType":"Block","src":"6351:79:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:8","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2154,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6385:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"6385:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"id":2156,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6417:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2143,"id":2158,"nodeType":"Return","src":"6365:54:8"}]}},{"assignments":[2162],"declarations":[{"constant":false,"id":2162,"mutability":"mutable","name":"signer","nameLocation":"6532:6:8","nodeType":"VariableDeclaration","scope":2199,"src":"6524:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2169,"initialValue":{"arguments":[{"id":2164,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"6551:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2165,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6557:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2166,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6560:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2167,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6563:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2163,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6579:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:8","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"6575:113:8","trueBody":{"id":2188,"nodeType":"Block","src":"6601:87:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:8","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2180,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6635:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"6635:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:8","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2143,"id":2187,"nodeType":"Return","src":"6615:62:8"}]}},{"expression":{"components":[{"id":2190,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6706:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2191,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6714:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"6714:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:8","typeDescriptions":{}}},"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2143,"id":2198,"nodeType":"Return","src":"6698:49:8"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"5073:125:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:8","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"hash","nameLocation":"5240:4:8","nodeType":"VariableDeclaration","scope":2200,"src":"5232:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"v","nameLocation":"5260:1:8","nodeType":"VariableDeclaration","scope":2200,"src":"5254:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2129,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"r","nameLocation":"5279:1:8","nodeType":"VariableDeclaration","scope":2200,"src":"5271:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"s","nameLocation":"5298:1:8","nodeType":"VariableDeclaration","scope":2200,"src":"5290:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:8"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:8","nodeType":"VariableDeclaration","scope":2200,"src":"5329:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"err","nameLocation":"5361:3:8","nodeType":"VariableDeclaration","scope":2200,"src":"5348:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"RecoverError","nameLocations":["5348:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"5348:12:8"},"referencedDeclaration":1946,"src":"5348:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:8","nodeType":"VariableDeclaration","scope":2200,"src":"5366:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:8"},"scope":2286,"src":"5203:1551:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"6981:166:8","statements":[{"assignments":[2215,2218,2220],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:8","nodeType":"VariableDeclaration","scope":2235,"src":"6992:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"error","nameLocation":"7024:5:8","nodeType":"VariableDeclaration","scope":2235,"src":"7011:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2217,"nodeType":"UserDefinedTypeName","pathNode":{"id":2216,"name":"RecoverError","nameLocations":["7011:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"7011:12:8"},"referencedDeclaration":1946,"src":"7011:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:8","nodeType":"VariableDeclaration","scope":2235,"src":"7031:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[{"id":2222,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7062:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2223,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7068:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2224,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"7071:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2225,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"7074:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2221,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2012,2092,2200],"referencedDeclaration":2200,"src":"7051:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1946_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:8"},{"expression":{"arguments":[{"id":2229,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"7098:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},{"id":2230,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"7105:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2228,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"7086:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1946_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2232,"nodeType":"ExpressionStatement","src":"7086:28:8"},{"expression":{"id":2233,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"7131:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2213,"id":2234,"nodeType":"Return","src":"7124:16:8"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"6760:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:8","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"hash","nameLocation":"6912:4:8","nodeType":"VariableDeclaration","scope":2236,"src":"6904:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"v","nameLocation":"6924:1:8","nodeType":"VariableDeclaration","scope":2236,"src":"6918:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2204,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"r","nameLocation":"6935:1:8","nodeType":"VariableDeclaration","scope":2236,"src":"6927:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"s","nameLocation":"6946:1:8","nodeType":"VariableDeclaration","scope":2236,"src":"6938:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:8"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"6972:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:8"},"scope":2286,"src":"6887:260:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"7352:460:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7366:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2246,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7375:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"7375:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7462:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2252,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7471:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"7471:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7567:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2260,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7576:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1944,"src":"7576:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7701:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2272,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7710:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1946_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"7710:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2280,"nodeType":"IfStatement","src":"7697:109:8","trueBody":{"id":2279,"nodeType":"Block","src":"7742:64:8","statements":[{"errorCall":{"arguments":[{"id":2276,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"7786:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2275,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7763:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"RevertStatement","src":"7756:39:8"}]}},"id":2281,"nodeType":"IfStatement","src":"7563:243:8","trueBody":{"id":2270,"nodeType":"Block","src":"7613:78:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2266,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"7670:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:8","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"7634:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2269,"nodeType":"RevertStatement","src":"7627:53:8"}]}},"id":2282,"nodeType":"IfStatement","src":"7458:348:8","trueBody":{"id":2258,"nodeType":"Block","src":"7502:55:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2255,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7523:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"RevertStatement","src":"7516:30:8"}]}},"id":2283,"nodeType":"IfStatement","src":"7362:444:8","trueBody":{"id":2250,"nodeType":"Block","src":"7397:55:8","statements":[{"functionReturnParameters":2244,"id":2249,"nodeType":"Return","src":"7411:7:8"}]}}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"7153:122:8","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:8","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"error","nameLocation":"7314:5:8","nodeType":"VariableDeclaration","scope":2285,"src":"7301:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2239,"nodeType":"UserDefinedTypeName","pathNode":{"id":2238,"name":"RecoverError","nameLocations":["7301:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"7301:12:8"},"referencedDeclaration":1946,"src":"7301:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1946","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:8","nodeType":"VariableDeclaration","scope":2285,"src":"7321:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:8"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"7352:0:8"},"scope":2286,"src":"7280:532:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2287,"src":"344:7470:8","usedErrors":[1949,1954,1959],"usedEvents":[]}],"src":"112:7703:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2513],"IERC5267":[172],"MessageHashUtils":[2587],"ShortString":[403],"ShortStrings":[614]},"id":2514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":2588,"src":"139:56:9","symbolAliases":[{"foreign":{"id":2289,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"147:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":615,"src":"196:62:9","symbolAliases":[{"foreign":{"id":2291,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"204:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2292,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"218:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":173,"src":"259:55:9","symbolAliases":[{"foreign":{"id":2294,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2297,"name":"IERC5267","nameLocations":["1988:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:9"},"id":2298,"nodeType":"InheritanceSpecifier","src":"1988:8:9"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"316:1643:9","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2513,"linearizedBaseContracts":[2513,172],"name":"EIP712","nameLocation":"1978:6:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2300,"libraryName":{"id":2299,"name":"ShortStrings","nameLocations":["2009:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":614,"src":"2009:12:9"},"nodeType":"UsingForDirective","src":"2003:25:9"},{"constant":true,"id":2305,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:9","nodeType":"VariableDeclaration","scope":2513,"src":"2034:140:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2302,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2307,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:9","nodeType":"VariableDeclaration","scope":2513,"src":"2373:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2309,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:9","nodeType":"VariableDeclaration","scope":2513,"src":"2427:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2311,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:9","nodeType":"VariableDeclaration","scope":2513,"src":"2473:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2313,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:9","nodeType":"VariableDeclaration","scope":2513,"src":"2517:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2315,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:9","nodeType":"VariableDeclaration","scope":2513,"src":"2560:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2318,"mutability":"immutable","name":"_name","nameLocation":"2637:5:9","nodeType":"VariableDeclaration","scope":2513,"src":"2607:35:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"ShortString","nameLocations":["2607:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2607:11:9"},"referencedDeclaration":403,"src":"2607:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2321,"mutability":"immutable","name":"_version","nameLocation":"2678:8:9","nodeType":"VariableDeclaration","scope":2513,"src":"2648:38:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"},"typeName":{"id":2320,"nodeType":"UserDefinedTypeName","pathNode":{"id":2319,"name":"ShortString","nameLocations":["2648:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2648:11:9"},"referencedDeclaration":403,"src":"2648:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2323,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:9","nodeType":"VariableDeclaration","scope":2513,"src":"2692:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2325,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:9","nodeType":"VariableDeclaration","scope":2513,"src":"2726:31:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2382,"nodeType":"Block","src":"3383:376:9","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2333,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3393:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2336,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3432:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2334,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"3401:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:9","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":555,"src":"3401:30:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$403_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"src":"3393:53:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"id":2339,"nodeType":"ExpressionStatement","src":"3393:53:9"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3456:8:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2343,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"3501:16:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2341,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"3467:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:9","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":555,"src":"3467:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$403_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"src":"3456:62:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"id":2346,"nodeType":"ExpressionStatement","src":"3456:62:9"},{"expression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2347,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3528:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2351,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"3558:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2349,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:9","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2348,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2355,"nodeType":"ExpressionStatement","src":"3528:36:9"},{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2356,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"3574:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2360,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"3607:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:9","typeDescriptions":{}}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2364,"nodeType":"ExpressionStatement","src":"3574:42:9"},{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2365,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3627:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2366,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:9","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"nodeType":"ExpressionStatement","src":"3627:30:9"},{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"3667:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2371,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"3692:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2374,"nodeType":"ExpressionStatement","src":"3667:48:9"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3725:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2378,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}],"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:9","typeDescriptions":{}}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2381,"nodeType":"ExpressionStatement","src":"3725:27:9"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"2764:559:9","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2383,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"name","nameLocation":"3354:4:9","nodeType":"VariableDeclaration","scope":2383,"src":"3340:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"version","nameLocation":"3374:7:9","nodeType":"VariableDeclaration","scope":2383,"src":"3360:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:9"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"3383:0:9"},"scope":2513,"src":"3328:431:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"3907:200:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2391,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}],"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:9","typeDescriptions":{}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2393,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3938:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2395,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:9","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2397,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3970:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2406,"nodeType":"Block","src":"4046:55:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2403,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4067:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2388,"id":2405,"nodeType":"Return","src":"4060:30:9"}]},"id":2407,"nodeType":"IfStatement","src":"3917:184:9","trueBody":{"id":2402,"nodeType":"Block","src":"3986:54:9","statements":[{"expression":{"id":2400,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"4007:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2388,"id":2401,"nodeType":"Return","src":"4000:29:9"}]}}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"3765:75:9","text":" @dev Returns the domain separator for the current chain."},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:9","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"3872:2:9"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2409,"src":"3898:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:9"},"scope":2513,"src":"3845:262:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"4177:115:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2417,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"4215:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2418,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4226:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2419,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4239:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2420,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:9","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}],"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2422,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:9","typeDescriptions":{}}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2415,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:9","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2413,"id":2428,"nodeType":"Return","src":"4187:98:9"}]},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:9","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"4143:2:9"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"4168:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:9"},"scope":2513,"src":"4113:179:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2445,"nodeType":"Block","src":"5003:90:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2440,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"5053:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2442,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"5075:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2438,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"5020:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2587_$","typeString":"type(library MessageHashUtils)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:9","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2586,"src":"5020:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2437,"id":2444,"nodeType":"Return","src":"5013:73:9"}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"4298:614:9","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:9","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:9","nodeType":"VariableDeclaration","scope":2446,"src":"4943:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:9"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2446,"src":"4994:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:9"},"scope":2513,"src":"4917:176:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":2487,"nodeType":"Block","src":"5472:229:9","statements":[{"expression":{"components":[{"hexValue":"0f","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2466,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5533:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2468,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5560:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2470,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:9","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2474,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2513","typeString":"contract EIP712"}],"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:9","typeDescriptions":{}}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:9","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2481,"nodeType":"ArrayTypeName","src":"5672:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2464,"id":2486,"nodeType":"Return","src":"5482:212:9"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"5099:40:9","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:9","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[],"src":"5165:2:9"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"fields","nameLocation":"5249:6:9","nodeType":"VariableDeclaration","scope":2488,"src":"5242:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2449,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"name","nameLocation":"5283:4:9","nodeType":"VariableDeclaration","scope":2488,"src":"5269:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2451,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"version","nameLocation":"5315:7:9","nodeType":"VariableDeclaration","scope":2488,"src":"5301:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2453,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:9","nodeType":"VariableDeclaration","scope":2488,"src":"5336:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:9","nodeType":"VariableDeclaration","scope":2488,"src":"5365:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"salt","nameLocation":"5412:4:9","nodeType":"VariableDeclaration","scope":2488,"src":"5404:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:9","nodeType":"VariableDeclaration","scope":2488,"src":"5430:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ArrayTypeName","src":"5430:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:9"},"scope":2513,"src":"5144:557:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2499,"nodeType":"Block","src":"6082:65:9","statements":[{"expression":{"arguments":[{"id":2496,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"6126:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2494,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6099:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:9","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":582,"src":"6099:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$403_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$403_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2493,"id":2498,"nodeType":"Return","src":"6092:48:9"}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"5707:256:9","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:9","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"6041:2:9"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"6067:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2491,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:9"},"scope":2513,"src":"6021:126:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"6537:71:9","statements":[{"expression":{"arguments":[{"id":2508,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"6584:16:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2506,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"6554:8:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$403","typeString":"ShortString"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:9","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":582,"src":"6554:29:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$403_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$403_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2505,"id":2510,"nodeType":"Return","src":"6547:54:9"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"6153:262:9","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:9","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"6496:2:9"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"6522:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2503,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:9"},"scope":2513,"src":"6473:135:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2514,"src":"1960:4650:9","usedErrors":[411,413],"usedEvents":[152]}],"src":"113:6498:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2587],"Strings":[1938]},"id":2588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2515,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":1939,"src":"149:39:10","symbolAliases":[{"foreign":{"id":2516,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"157:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"190:330:10","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2587,"linearizedBaseContracts":[2587],"name":"MessageHashUtils","nameLocation":"529:16:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2527,"nodeType":"Block","src":"1314:341:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:10","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:10","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:10"},"nodeType":"YulFunctionCall","src":"1363:48:10"},"nodeType":"YulExpressionStatement","src":"1363:48:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:10","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:10"},"nodeType":"YulFunctionCall","src":"1465:25:10"},"nodeType":"YulExpressionStatement","src":"1465:25:10"},{"nodeType":"YulAssignment","src":"1544:31:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:10","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:10"},"nodeType":"YulFunctionCall","src":"1554:21:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2524,"isOffset":false,"isSlot":false,"src":"1544:6:10","valueSize":1},{"declaration":2521,"isOffset":false,"isSlot":false,"src":"1478:11:10","valueSize":1}],"flags":["memory-safe"],"id":2526,"nodeType":"InlineAssembly","src":"1324:325:10"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"552:665:10","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:10","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:10","nodeType":"VariableDeclaration","scope":2528,"src":"1254:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:10"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"digest","nameLocation":"1306:6:10","nodeType":"VariableDeclaration","scope":2528,"src":"1298:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:10"},"scope":2587,"src":"1222:433:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2553,"nodeType":"Block","src":"2207:143:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2545,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2316:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:10","memberName":"length","nodeType":"MemberAccess","src":"2316:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2543,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2299:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1938_$","typeString":"type(library Strings)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":816,"src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2541,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:10","typeDescriptions":{}}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2549,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2334:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2537,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:10","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:10","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2536,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2535,"id":2552,"nodeType":"Return","src":"2217:126:10"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"1661:455:10","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2554,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:10","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"message","nameLocation":"2166:7:10","nodeType":"VariableDeclaration","scope":2554,"src":"2153:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2530,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:10"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2554,"src":"2198:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:10"},"scope":2587,"src":"2121:229:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2573,"nodeType":"Block","src":"2804:80:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2568,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"2860:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2871:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2565,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2564,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2563,"id":2572,"nodeType":"Return","src":"2814:63:10"}]},"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"2356:332:10","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2574,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:10","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"validator","nameLocation":"2742:9:10","nodeType":"VariableDeclaration","scope":2574,"src":"2734:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"data","nameLocation":"2766:4:10","nodeType":"VariableDeclaration","scope":2574,"src":"2753:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2558,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:10"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2574,"src":"2795:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:10"},"scope":2587,"src":"2693:191:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2585,"nodeType":"Block","src":"3435:265:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:10"},"nodeType":"YulFunctionCall","src":"3495:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:10"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:10","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:10"},"nodeType":"YulFunctionCall","src":"3519:23:10"},"nodeType":"YulExpressionStatement","src":"3519:23:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:10","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:10"},"nodeType":"YulFunctionCall","src":"3562:14:10"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:10"},"nodeType":"YulFunctionCall","src":"3555:39:10"},"nodeType":"YulExpressionStatement","src":"3555:39:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:10"},"nodeType":"YulFunctionCall","src":"3614:14:10"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:10"},"nodeType":"YulFunctionCall","src":"3607:34:10"},"nodeType":"YulExpressionStatement","src":"3607:34:10"},{"nodeType":"YulAssignment","src":"3654:30:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:10","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:10"},"nodeType":"YulFunctionCall","src":"3664:20:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2582,"isOffset":false,"isSlot":false,"src":"3654:6:10","valueSize":1},{"declaration":2577,"isOffset":false,"isSlot":false,"src":"3578:15:10","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3630:10:10","valueSize":1}],"flags":["memory-safe"],"id":2584,"nodeType":"InlineAssembly","src":"3445:249:10"}]},"documentation":{"id":2575,"nodeType":"StructuredDocumentation","src":"2890:431:10","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:10","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:10","nodeType":"VariableDeclaration","scope":2586,"src":"3351:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:10","nodeType":"VariableDeclaration","scope":2586,"src":"3376:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:10"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"digest","nameLocation":"3427:6:10","nodeType":"VariableDeclaration","scope":2586,"src":"3419:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:10"},"scope":2587,"src":"3326:374:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2588,"src":"521:3181:10","usedErrors":[],"usedEvents":[]}],"src":"123:3580:10"},"id":10},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4193],"Panic":[397],"SafeCast":[5958]},"id":4194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2589,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4194,"sourceUnit":398,"src":"129:35:11","symbolAliases":[{"foreign":{"id":2590,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"137:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4194,"sourceUnit":5959,"src":"165:40:11","symbolAliases":[{"foreign":{"id":2592,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"173:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"207:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4193,"linearizedBaseContracts":[4193],"name":"Math","nameLocation":"289:4:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2599,"members":[{"id":2595,"name":"Floor","nameLocation":"324:5:11","nodeType":"EnumValue","src":"324:5:11"},{"id":2596,"name":"Ceil","nameLocation":"367:4:11","nodeType":"EnumValue","src":"367:4:11"},{"id":2597,"name":"Trunc","nameLocation":"409:5:11","nodeType":"EnumValue","src":"409:5:11"},{"id":2598,"name":"Expand","nameLocation":"439:6:11","nodeType":"EnumValue","src":"439:6:11"}],"name":"Rounding","nameLocation":"305:8:11","nodeType":"EnumDefinition","src":"300:169:11"},{"body":{"id":2630,"nodeType":"Block","src":"677:140:11","statements":[{"id":2629,"nodeType":"UncheckedBlock","src":"687:124:11","statements":[{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"c","nameLocation":"719:1:11","nodeType":"VariableDeclaration","scope":2629,"src":"711:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2616,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"723:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"727:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2617,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"746:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"750:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2624,"nodeType":"IfStatement","src":"742:28:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2610,"id":2623,"nodeType":"Return","src":"753:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2626,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"798:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2610,"id":2628,"nodeType":"Return","src":"784:16:11"}]}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"475:106:11","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:11","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"a","nameLocation":"610:1:11","nodeType":"VariableDeclaration","scope":2631,"src":"602:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"b","nameLocation":"621:1:11","nodeType":"VariableDeclaration","scope":2631,"src":"613:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:11"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"success","nameLocation":"652:7:11","nodeType":"VariableDeclaration","scope":2631,"src":"647:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2606,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"result","nameLocation":"669:6:11","nodeType":"VariableDeclaration","scope":2631,"src":"661:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:11"},"scope":4193,"src":"586:231:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2658,"nodeType":"Block","src":"1028:113:11","statements":[{"id":2657,"nodeType":"UncheckedBlock","src":"1038:97:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"1066:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"1070:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"1062:28:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2642,"id":2649,"nodeType":"Return","src":"1073:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"1118:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"1122:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2642,"id":2656,"nodeType":"Return","src":"1104:20:11"}]}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"823:109:11","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:11","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"a","nameLocation":"961:1:11","nodeType":"VariableDeclaration","scope":2659,"src":"953:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"b","nameLocation":"972:1:11","nodeType":"VariableDeclaration","scope":2659,"src":"964:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:11"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"success","nameLocation":"1003:7:11","nodeType":"VariableDeclaration","scope":2659,"src":"998:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2638,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"result","nameLocation":"1020:6:11","nodeType":"VariableDeclaration","scope":2659,"src":"1012:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:11"},"scope":4193,"src":"937:204:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2700,"nodeType":"Block","src":"1355:417:11","statements":[{"id":2699,"nodeType":"UncheckedBlock","src":"1365:401:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1623:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"1619:28:11","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2670,"id":2677,"nodeType":"Return","src":"1631:16:11"}},{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"c","nameLocation":"1669:1:11","nodeType":"VariableDeclaration","scope":2699,"src":"1661:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2684,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1673:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1677:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1696:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1700:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2688,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1705:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"1692:33:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2670,"id":2693,"nodeType":"Return","src":"1708:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2696,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1753:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2670,"id":2698,"nodeType":"Return","src":"1739:16:11"}]}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"1147:112:11","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2701,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:11","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"a","nameLocation":"1288:1:11","nodeType":"VariableDeclaration","scope":2701,"src":"1280:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"b","nameLocation":"1299:1:11","nodeType":"VariableDeclaration","scope":2701,"src":"1291:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:11"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"success","nameLocation":"1330:7:11","nodeType":"VariableDeclaration","scope":2701,"src":"1325:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"result","nameLocation":"1347:6:11","nodeType":"VariableDeclaration","scope":2701,"src":"1339:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:11"},"scope":4193,"src":"1264:508:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"1987:114:11","statements":[{"id":2727,"nodeType":"UncheckedBlock","src":"1997:98:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"2025:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2720,"nodeType":"IfStatement","src":"2021:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2712,"id":2719,"nodeType":"Return","src":"2033:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"2078:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"2082:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2712,"id":2726,"nodeType":"Return","src":"2064:20:11"}]}]},"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"1778:113:11","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:11","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"a","nameLocation":"1920:1:11","nodeType":"VariableDeclaration","scope":2729,"src":"1912:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"b","nameLocation":"1931:1:11","nodeType":"VariableDeclaration","scope":2729,"src":"1923:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:11"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"success","nameLocation":"1962:7:11","nodeType":"VariableDeclaration","scope":2729,"src":"1957:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2708,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"result","nameLocation":"1979:6:11","nodeType":"VariableDeclaration","scope":2729,"src":"1971:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:11"},"scope":4193,"src":"1896:205:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"2326:114:11","statements":[{"id":2755,"nodeType":"UncheckedBlock","src":"2336:98:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2364:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"nodeType":"IfStatement","src":"2360:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2740,"id":2747,"nodeType":"Return","src":"2372:17:11"}},{"expression":{"components":[{"hexValue":"74727565","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2417:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2421:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2740,"id":2754,"nodeType":"Return","src":"2403:20:11"}]}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"2107:123:11","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:11","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"a","nameLocation":"2259:1:11","nodeType":"VariableDeclaration","scope":2757,"src":"2251:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"b","nameLocation":"2270:1:11","nodeType":"VariableDeclaration","scope":2757,"src":"2262:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:11"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"success","nameLocation":"2301:7:11","nodeType":"VariableDeclaration","scope":2757,"src":"2296:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2736,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"result","nameLocation":"2318:6:11","nodeType":"VariableDeclaration","scope":2757,"src":"2310:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:11"},"scope":4193,"src":"2235:205:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"2912:207:11","statements":[{"id":2782,"nodeType":"UncheckedBlock","src":"2922:191:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"3060:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"3066:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"3070:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2776,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"3091:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2774,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"3075:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"3075:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2768,"id":2781,"nodeType":"Return","src":"3053:49:11"}]}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"2446:374:11","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:11","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"condition","nameLocation":"2847:9:11","nodeType":"VariableDeclaration","scope":2784,"src":"2842:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2759,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"a","nameLocation":"2866:1:11","nodeType":"VariableDeclaration","scope":2784,"src":"2858:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"b","nameLocation":"2877:1:11","nodeType":"VariableDeclaration","scope":2784,"src":"2869:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:11"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2784,"src":"2903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:11"},"scope":4193,"src":"2825:294:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"3256:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3285:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3288:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3291:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"3273:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2793,"id":2801,"nodeType":"Return","src":"3266:27:11"}]},"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"3125:59:11","text":" @dev Returns the largest of two numbers."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:11","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"a","nameLocation":"3210:1:11","nodeType":"VariableDeclaration","scope":2803,"src":"3202:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"b","nameLocation":"3221:1:11","nodeType":"VariableDeclaration","scope":2803,"src":"3213:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:11"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2803,"src":"3247:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:11"},"scope":4193,"src":"3189:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"3438:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3463:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3467:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2817,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3470:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2818,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3473:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2813,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2812,"id":2820,"nodeType":"Return","src":"3448:27:11"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"3306:60:11","text":" @dev Returns the smallest of two numbers."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:11","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"a","nameLocation":"3392:1:11","nodeType":"VariableDeclaration","scope":2822,"src":"3384:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"b","nameLocation":"3403:1:11","nodeType":"VariableDeclaration","scope":2822,"src":"3395:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:11"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"3429:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:11"},"scope":4193,"src":"3371:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2844,"nodeType":"Block","src":"3666:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3721:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3725:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3731:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"3735:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2831,"id":2843,"nodeType":"Return","src":"3713:28:11"}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"3488:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2845,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:11","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"a","nameLocation":"3620:1:11","nodeType":"VariableDeclaration","scope":2845,"src":"3612:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"b","nameLocation":"3631:1:11","nodeType":"VariableDeclaration","scope":2845,"src":"3623:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:11"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2845,"src":"3657:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:11"},"scope":4193,"src":"3595:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"4040:633:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"4054:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"4050:150:11","trueBody":{"id":2865,"nodeType":"Block","src":"4062:138:11","statements":[{"expression":{"arguments":[{"expression":{"id":2861,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4166:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":364,"src":"4166:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2858,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4154:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4154:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"4154:35:11"}]}},{"id":2884,"nodeType":"UncheckedBlock","src":"4583:84:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4630:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4614:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"4614:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4641:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2877,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"4650:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2854,"id":2883,"nodeType":"Return","src":"4607:49:11"}]}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"3754:210:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:11","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"a","nameLocation":"3994:1:11","nodeType":"VariableDeclaration","scope":2886,"src":"3986:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"b","nameLocation":"4005:1:11","nodeType":"VariableDeclaration","scope":2886,"src":"3997:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:11"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"4031:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:11"},"scope":4193,"src":"3969:704:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3022,"nodeType":"Block","src":"5094:4128:11","statements":[{"id":3021,"nodeType":"UncheckedBlock","src":"5104:4112:11","statements":[{"assignments":[2899],"declarations":[{"constant":false,"id":2899,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:11","nodeType":"VariableDeclaration","scope":3021,"src":"5433:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"5449:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2901,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"5453:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:11"},{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:11","nodeType":"VariableDeclaration","scope":3021,"src":"5513:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2906,"nodeType":"VariableDeclarationStatement","src":"5513:13:11"},{"AST":{"nodeType":"YulBlock","src":"5593:122:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:11"},"nodeType":"YulFunctionCall","src":"5634:6:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:11"},"nodeType":"YulFunctionCall","src":"5621:20:11"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:11","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:11","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:11"},"nodeType":"YulFunctionCall","src":"5671:14:11"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:11"},"nodeType":"YulFunctionCall","src":"5687:13:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:11"},"nodeType":"YulFunctionCall","src":"5667:34:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2899,"isOffset":false,"isSlot":false,"src":"5679:5:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"5694:5:11","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"5658:5:11","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"5628:1:11","valueSize":1},{"declaration":2891,"isOffset":false,"isSlot":false,"src":"5631:1:11","valueSize":1}],"id":2907,"nodeType":"InlineAssembly","src":"5584:131:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"5796:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"nodeType":"IfStatement","src":"5792:368:11","trueBody":{"id":2915,"nodeType":"Block","src":"5808:352:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"6126:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2912,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"6134:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2897,"id":2914,"nodeType":"Return","src":"6119:26:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"6270:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2918,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6285:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"IfStatement","src":"6266:143:11","trueBody":{"id":2934,"nodeType":"Block","src":"6292:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"6330:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2927,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6348:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":364,"src":"6348:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2929,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6372:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:11","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":360,"src":"6372:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2923,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6322:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2920,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6310:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":396,"src":"6310:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"ExpressionStatement","src":"6310:84:11"}]}},{"assignments":[2937],"declarations":[{"constant":false,"id":2937,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:11","nodeType":"VariableDeclaration","scope":3021,"src":"6664:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2938,"nodeType":"VariableDeclarationStatement","src":"6664:17:11"},{"AST":{"nodeType":"YulBlock","src":"6704:291:11","statements":[{"nodeType":"YulAssignment","src":"6773:38:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:11"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:11"},"nodeType":"YulFunctionCall","src":"6786:25:11"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:11"}]},{"nodeType":"YulAssignment","src":"6893:41:11","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:11"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:11"},"nodeType":"YulFunctionCall","src":"6913:20:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:11"},"nodeType":"YulFunctionCall","src":"6902:32:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:11"}]},{"nodeType":"YulAssignment","src":"6951:30:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:11"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:11"},"nodeType":"YulFunctionCall","src":"6960:21:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2893,"isOffset":false,"isSlot":false,"src":"6799:11:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"6927:5:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"6951:5:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"6964:5:11","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"6893:5:11","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"6906:5:11","valueSize":1},{"declaration":2937,"isOffset":false,"isSlot":false,"src":"6773:9:11","valueSize":1},{"declaration":2937,"isOffset":false,"isSlot":false,"src":"6916:9:11","valueSize":1},{"declaration":2937,"isOffset":false,"isSlot":false,"src":"6971:9:11","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"6793:1:11","valueSize":1},{"declaration":2891,"isOffset":false,"isSlot":false,"src":"6796:1:11","valueSize":1}],"id":2939,"nodeType":"InlineAssembly","src":"6695:300:11"},{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"twos","nameLocation":"7207:4:11","nodeType":"VariableDeclaration","scope":3021,"src":"7199:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"7214:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2944,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"7233:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:11"},{"AST":{"nodeType":"YulBlock","src":"7268:366:11","statements":[{"nodeType":"YulAssignment","src":"7333:37:11","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:11"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:11"},"nodeType":"YulFunctionCall","src":"7348:22:11"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:11"}]},{"nodeType":"YulAssignment","src":"7437:25:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:11"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:11"},"nodeType":"YulFunctionCall","src":"7446:16:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:11"}]},{"nodeType":"YulAssignment","src":"7581:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:11","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:11"},"nodeType":"YulFunctionCall","src":"7597:12:11"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:11"},"nodeType":"YulFunctionCall","src":"7593:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:11"},"nodeType":"YulFunctionCall","src":"7589:31:11"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2893,"isOffset":false,"isSlot":false,"src":"7333:11:11","valueSize":1},{"declaration":2893,"isOffset":false,"isSlot":false,"src":"7352:11:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"7437:5:11","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"7450:5:11","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"7365:4:11","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"7457:4:11","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"7581:4:11","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"7604:4:11","valueSize":1},{"declaration":2941,"isOffset":false,"isSlot":false,"src":"7611:4:11","valueSize":1}],"id":2949,"nodeType":"InlineAssembly","src":"7259:375:11"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"7700:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"7709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2952,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"7717:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"7700:21:11"},{"assignments":[2957],"declarations":[{"constant":false,"id":2957,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:11","nodeType":"VariableDeclaration","scope":3021,"src":"8056:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2964,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2959,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8079:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:11"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8312:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8327:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8341:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"8312:36:11"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8397:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8411:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"8382:36:11"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8469:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8483:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"8454:36:11"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8540:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2992,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8554:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"8525:36:11"},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8613:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3000,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"8598:36:11"},{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8672:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8687:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3008,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8701:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"8672:36:11"},{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"9154:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"9163:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"9171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"9154:24:11"},{"expression":{"id":3019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"9199:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2897,"id":3020,"nodeType":"Return","src":"9192:13:11"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"4679:312:11","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:11","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"x","nameLocation":"5020:1:11","nodeType":"VariableDeclaration","scope":3023,"src":"5012:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"y","nameLocation":"5031:1:11","nodeType":"VariableDeclaration","scope":3023,"src":"5023:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:11","nodeType":"VariableDeclaration","scope":3023,"src":"5034:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:11"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"result","nameLocation":"5086:6:11","nodeType":"VariableDeclaration","scope":3023,"src":"5078:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:11"},"scope":4193,"src":"4996:4226:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"9461:128:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"9485:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3040,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"9488:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"9491:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3038,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3023,3060],"referencedDeclaration":3023,"src":"9478:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3046,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"9539:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":3045,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"9522:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3049,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"9559:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3050,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"9562:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"9565:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3048,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3043,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"9506:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"9506:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3037,"id":3058,"nodeType":"Return","src":"9471:111:11"}]},"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"9228:118:11","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:11","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"x","nameLocation":"9375:1:11","nodeType":"VariableDeclaration","scope":3060,"src":"9367:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"y","nameLocation":"9386:1:11","nodeType":"VariableDeclaration","scope":3060,"src":"9378:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:11","nodeType":"VariableDeclaration","scope":3060,"src":"9389:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:11","nodeType":"VariableDeclaration","scope":3060,"src":"9410:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"Rounding","nameLocations":["9410:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"9410:8:11"},"referencedDeclaration":2599,"src":"9410:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:11"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3060,"src":"9452:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:11"},"scope":4193,"src":"9351:238:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3156,"nodeType":"Block","src":"10223:1849:11","statements":[{"id":3155,"nodeType":"UncheckedBlock","src":"10233:1833:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10261:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"10257:20:11","trueBody":{"expression":{"hexValue":"30","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3069,"id":3074,"nodeType":"Return","src":"10269:8:11"}},{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:11","nodeType":"VariableDeclaration","scope":3155,"src":"10748:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10768:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3079,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10772:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:11"},{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:11","nodeType":"VariableDeclaration","scope":3155,"src":"10787:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"initialValue":{"id":3084,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10801:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:11"},{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"x","nameLocation":"10945:1:11","nodeType":"VariableDeclaration","scope":3155,"src":"10938:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3086,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3089,"initialValue":{"hexValue":"30","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:11"},{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"y","nameLocation":"10971:1:11","nodeType":"VariableDeclaration","scope":3155,"src":"10964:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3090,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3093,"initialValue":{"hexValue":"31","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:11"},{"body":{"id":3130,"nodeType":"Block","src":"11014:882:11","statements":[{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:11","nodeType":"VariableDeclaration","scope":3130,"src":"11032:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3102,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11051:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3100,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11057:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:11"},{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3103,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11086:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3104,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11091:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3106,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11191:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11436:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11442:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3109,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"11454:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"ExpressionStatement","src":"11085:395:11"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3115,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11500:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3116,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"11503:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3117,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3118,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"11585:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11839:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"11843:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3123,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"11854:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3121,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:11","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3129,"nodeType":"ExpressionStatement","src":"11499:382:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"10998:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"WhileStatement","src":"10991:905:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11914:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"IfStatement","src":"11910:22:11","trueBody":{"expression":{"hexValue":"30","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3069,"id":3136,"nodeType":"Return","src":"11924:8:11"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"11983:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"11990:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:11","subExpression":{"id":3145,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12003:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:11","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3151,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12015:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:11","typeDescriptions":{}}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3138,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"11975:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3069,"id":3154,"nodeType":"Return","src":"11968:50:11"}]}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"9595:553:11","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3157,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:11","nodeType":"FunctionDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"a","nameLocation":"10177:1:11","nodeType":"VariableDeclaration","scope":3157,"src":"10169:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"n","nameLocation":"10188:1:11","nodeType":"VariableDeclaration","scope":3157,"src":"10180:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:11"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3157,"src":"10214:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:11"},"scope":4193,"src":"10153:1919:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"12672:82:11","statements":[{"id":3176,"nodeType":"UncheckedBlock","src":"12682:66:11","statements":[{"expression":{"arguments":[{"id":3169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12725:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"12728:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3173,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"12735:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3167,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"12713:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4193_$","typeString":"type(library Math)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:11","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3214,"src":"12713:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3166,"id":3175,"nodeType":"Return","src":"12706:31:11"}]}]},"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"12078:514:11","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:11","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"a","nameLocation":"12626:1:11","nodeType":"VariableDeclaration","scope":3178,"src":"12618:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"p","nameLocation":"12637:1:11","nodeType":"VariableDeclaration","scope":3178,"src":"12629:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:11"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"12663:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:11"},"scope":4193,"src":"12597:157:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3213,"nodeType":"Block","src":"13524:174:11","statements":[{"assignments":[3191,3193],"declarations":[{"constant":false,"id":3191,"mutability":"mutable","name":"success","nameLocation":"13540:7:11","nodeType":"VariableDeclaration","scope":3213,"src":"13535:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3190,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"result","nameLocation":"13557:6:11","nodeType":"VariableDeclaration","scope":3213,"src":"13549:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"arguments":[{"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"13577:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3196,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"13580:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3197,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"13583:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3194,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3238,3320],"referencedDeclaration":3238,"src":"13567:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:11"},{"condition":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:11","subExpression":{"id":3200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"13600:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"13595:74:11","trueBody":{"id":3209,"nodeType":"Block","src":"13609:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":3205,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"13635:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":364,"src":"13635:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3202,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"13623:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":396,"src":"13623:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3208,"nodeType":"ExpressionStatement","src":"13623:35:11"}]}},{"expression":{"id":3211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"13685:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3189,"id":3212,"nodeType":"Return","src":"13678:13:11"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"12760:678:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:11","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"b","nameLocation":"13467:1:11","nodeType":"VariableDeclaration","scope":3214,"src":"13459:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"e","nameLocation":"13478:1:11","nodeType":"VariableDeclaration","scope":3214,"src":"13470:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"m","nameLocation":"13489:1:11","nodeType":"VariableDeclaration","scope":3214,"src":"13481:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:11"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"13515:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:11"},"scope":4193,"src":"13443:255:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"14552:1493:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14566:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"IfStatement","src":"14562:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3227,"id":3234,"nodeType":"Return","src":"14574:17:11"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:11"},"nodeType":"YulFunctionCall","src":"14651:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:11"},"nodeType":"YulFunctionCall","src":"15563:17:11"},"nodeType":"YulExpressionStatement","src":"15563:17:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:11"},"nodeType":"YulFunctionCall","src":"15600:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:11"},"nodeType":"YulFunctionCall","src":"15593:28:11"},"nodeType":"YulExpressionStatement","src":"15593:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:11"},"nodeType":"YulFunctionCall","src":"15641:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:11"},"nodeType":"YulFunctionCall","src":"15634:28:11"},"nodeType":"YulExpressionStatement","src":"15634:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:11"},"nodeType":"YulFunctionCall","src":"15682:14:11"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:11"},"nodeType":"YulFunctionCall","src":"15675:25:11"},"nodeType":"YulExpressionStatement","src":"15675:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:11"},"nodeType":"YulFunctionCall","src":"15720:14:11"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:11"},"nodeType":"YulFunctionCall","src":"15713:25:11"},"nodeType":"YulExpressionStatement","src":"15713:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:11"},"nodeType":"YulFunctionCall","src":"15758:14:11"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:11"},"nodeType":"YulFunctionCall","src":"15751:25:11"},"nodeType":"YulExpressionStatement","src":"15751:25:11"},{"nodeType":"YulAssignment","src":"15938:57:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:11"},"nodeType":"YulFunctionCall","src":"15960:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:11","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:11","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:11","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:11"},"nodeType":"YulFunctionCall","src":"15949:46:11"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:11"}]},{"nodeType":"YulAssignment","src":"16008:21:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:11","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:11"},"nodeType":"YulFunctionCall","src":"16018:11:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3217,"isOffset":false,"isSlot":false,"src":"15698:1:11","valueSize":1},{"declaration":3219,"isOffset":false,"isSlot":false,"src":"15736:1:11","valueSize":1},{"declaration":3221,"isOffset":false,"isSlot":false,"src":"15774:1:11","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"16008:6:11","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"15938:7:11","valueSize":1}],"flags":["memory-safe"],"id":3236,"nodeType":"InlineAssembly","src":"14601:1438:11"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"13704:738:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:11","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"b","nameLocation":"14474:1:11","nodeType":"VariableDeclaration","scope":3238,"src":"14466:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"e","nameLocation":"14485:1:11","nodeType":"VariableDeclaration","scope":3238,"src":"14477:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"m","nameLocation":"14496:1:11","nodeType":"VariableDeclaration","scope":3238,"src":"14488:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:11"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"success","nameLocation":"14527:7:11","nodeType":"VariableDeclaration","scope":3238,"src":"14522:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3223,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"result","nameLocation":"14544:6:11","nodeType":"VariableDeclaration","scope":3238,"src":"14536:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:11"},"scope":4193,"src":"14447:1598:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3273,"nodeType":"Block","src":"16242:179:11","statements":[{"assignments":[3251,3253],"declarations":[{"constant":false,"id":3251,"mutability":"mutable","name":"success","nameLocation":"16258:7:11","nodeType":"VariableDeclaration","scope":3273,"src":"16253:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"result","nameLocation":"16280:6:11","nodeType":"VariableDeclaration","scope":3273,"src":"16267:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3259,"initialValue":{"arguments":[{"id":3255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"16300:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3256,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"16303:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3257,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"16306:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3254,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3238,3320],"referencedDeclaration":3320,"src":"16290:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:11"},{"condition":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:11","subExpression":{"id":3260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"16323:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"16318:74:11","trueBody":{"id":3269,"nodeType":"Block","src":"16332:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":3265,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"16358:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":364,"src":"16358:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3262,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"16346:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$397_$","typeString":"type(library Panic)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":396,"src":"16346:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"ExpressionStatement","src":"16346:35:11"}]}},{"expression":{"id":3271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16408:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3249,"id":3272,"nodeType":"Return","src":"16401:13:11"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"16051:85:11","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:11","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"b","nameLocation":"16170:1:11","nodeType":"VariableDeclaration","scope":3274,"src":"16157:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3240,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"e","nameLocation":"16186:1:11","nodeType":"VariableDeclaration","scope":3274,"src":"16173:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"m","nameLocation":"16202:1:11","nodeType":"VariableDeclaration","scope":3274,"src":"16189:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3244,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:11"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"16228:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:11"},"scope":4193,"src":"16141:280:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"16675:771:11","statements":[{"condition":{"arguments":[{"id":3289,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"16700:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3288,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"16689:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3298,"nodeType":"IfStatement","src":"16685:47:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3292,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3287,"id":3297,"nodeType":"Return","src":"16704:28:11"}},{"assignments":[3300],"declarations":[{"constant":false,"id":3300,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:11","nodeType":"VariableDeclaration","scope":3319,"src":"16743:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"expression":{"id":3301,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"16758:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:11","memberName":"length","nodeType":"MemberAccess","src":"16758:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:11"},{"expression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"16848:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"16874:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:11","memberName":"length","nodeType":"MemberAccess","src":"16874:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3309,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"16884:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:11","memberName":"length","nodeType":"MemberAccess","src":"16884:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3311,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"16894:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"16900:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3313,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"16903:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3314,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"16906:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3317,"nodeType":"ExpressionStatement","src":"16848:60:11"},{"AST":{"nodeType":"YulBlock","src":"16944:496:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:11","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:11"},"nodeType":"YulFunctionCall","src":"16973:17:11"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:11","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:11"},"nodeType":"YulFunctionCall","src":"17102:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:11","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:11"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:11"},"nodeType":"YulFunctionCall","src":"17124:13:11"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:11"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:11"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:11"},"nodeType":"YulFunctionCall","src":"17091:62:11"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:11"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:11"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:11"},"nodeType":"YulFunctionCall","src":"17302:20:11"},"nodeType":"YulExpressionStatement","src":"17302:20:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:11","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:11"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:11"},"nodeType":"YulFunctionCall","src":"17411:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:11"},"nodeType":"YulFunctionCall","src":"17398:32:11"},"nodeType":"YulExpressionStatement","src":"17398:32:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3300,"isOffset":false,"isSlot":false,"src":"17148:4:11","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"17317:4:11","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"17424:4:11","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"16977:6:11","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"17130:6:11","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"17309:6:11","valueSize":1},{"declaration":3284,"isOffset":false,"isSlot":false,"src":"17080:7:11","valueSize":1}],"flags":["memory-safe"],"id":3318,"nodeType":"InlineAssembly","src":"16919:521:11"}]},"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"16427:88:11","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:11","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"b","nameLocation":"16561:1:11","nodeType":"VariableDeclaration","scope":3320,"src":"16548:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3276,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"e","nameLocation":"16585:1:11","nodeType":"VariableDeclaration","scope":3320,"src":"16572:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"m","nameLocation":"16609:1:11","nodeType":"VariableDeclaration","scope":3320,"src":"16596:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3280,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:11"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"success","nameLocation":"16645:7:11","nodeType":"VariableDeclaration","scope":3320,"src":"16640:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3283,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"result","nameLocation":"16667:6:11","nodeType":"VariableDeclaration","scope":3320,"src":"16654:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3285,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:11"},"scope":4193,"src":"16520:926:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"17601:176:11","statements":[{"body":{"id":3348,"nodeType":"Block","src":"17658:92:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3339,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"17676:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3341,"indexExpression":{"id":3340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"17686:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3347,"nodeType":"IfStatement","src":"17672:68:11","trueBody":{"id":3346,"nodeType":"Block","src":"17695:45:11","statements":[{"expression":{"hexValue":"66616c7365","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3327,"id":3345,"nodeType":"Return","src":"17713:12:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"17631:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3333,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"17635:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:11","memberName":"length","nodeType":"MemberAccess","src":"17635:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"initializationExpression":{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"i","nameLocation":"17624:1:11","nodeType":"VariableDeclaration","scope":3349,"src":"17616:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"initialValue":{"hexValue":"30","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:11"},"loopExpression":{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:11","subExpression":{"id":3336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"17655:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"17653:3:11"},"nodeType":"ForStatement","src":"17611:139:11"},{"expression":{"hexValue":"74727565","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3327,"id":3351,"nodeType":"Return","src":"17759:11:11"}]},"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"17452:72:11","text":" @dev Returns whether the provided byte array is zero."},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:11","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:11","nodeType":"VariableDeclaration","scope":3353,"src":"17549:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:11"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3353,"src":"17595:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3325,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:11"},"scope":4193,"src":"17529:248:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3571,"nodeType":"Block","src":"18137:5124:11","statements":[{"id":3570,"nodeType":"UncheckedBlock","src":"18147:5108:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"18241:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"18237:53:11","trueBody":{"id":3366,"nodeType":"Block","src":"18249:41:11","statements":[{"expression":{"id":3364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"18274:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3360,"id":3365,"nodeType":"Return","src":"18267:8:11"}]}},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"aa","nameLocation":"19225:2:11","nodeType":"VariableDeclaration","scope":3570,"src":"19217:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"id":3370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"19230:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:11"},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"xn","nameLocation":"19253:2:11","nodeType":"VariableDeclaration","scope":3570,"src":"19245:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3375,"initialValue":{"hexValue":"31","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19278:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"nodeType":"IfStatement","src":"19274:92:11","trueBody":{"id":3390,"nodeType":"Block","src":"19296:70:11","statements":[{"expression":{"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3382,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19314:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3385,"nodeType":"ExpressionStatement","src":"19314:10:11"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19342:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"19342:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19383:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3407,"nodeType":"IfStatement","src":"19379:90:11","trueBody":{"id":3406,"nodeType":"Block","src":"19400:69:11","statements":[{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3398,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19418:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3401,"nodeType":"ExpressionStatement","src":"19418:9:11"},{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19445:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ExpressionStatement","src":"19445:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19486:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"19482:90:11","trueBody":{"id":3422,"nodeType":"Block","src":"19503:69:11","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19521:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"19521:9:11"},{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19548:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"19548:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19589:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"19585:89:11","trueBody":{"id":3438,"nodeType":"Block","src":"19606:68:11","statements":[{"expression":{"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3430,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19624:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ExpressionStatement","src":"19624:9:11"},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3434,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19651:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"19651:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19691:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"IfStatement","src":"19687:87:11","trueBody":{"id":3454,"nodeType":"Block","src":"19707:67:11","statements":[{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19725:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"19725:8:11"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19751:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"19751:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19791:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"19787:87:11","trueBody":{"id":3470,"nodeType":"Block","src":"19807:67:11","statements":[{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3462,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19825:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"nodeType":"ExpressionStatement","src":"19825:8:11"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19851:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"19851:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"19891:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"nodeType":"IfStatement","src":"19887:61:11","trueBody":{"id":3482,"nodeType":"Block","src":"19907:41:11","statements":[{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19925:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3481,"nodeType":"ExpressionStatement","src":"19925:8:11"}]}},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3484,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"20368:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3486,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"20378:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"nodeType":"ExpressionStatement","src":"20368:18:11"},{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22273:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22279:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22284:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22288:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ExpressionStatement","src":"22273:23:11"},{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22382:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22388:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22393:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3507,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22397:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3514,"nodeType":"ExpressionStatement","src":"22382:23:11"},{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22493:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22499:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22504:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3518,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22508:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ExpressionStatement","src":"22493:23:11"},{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22602:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22608:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22613:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3529,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22617:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3536,"nodeType":"ExpressionStatement","src":"22602:23:11"},{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22712:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3538,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22718:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22723:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3540,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22727:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3547,"nodeType":"ExpressionStatement","src":"22712:23:11"},{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22822:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3549,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22828:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"22833:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3551,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"22837:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"22822:23:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"23211:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"23232:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"23237:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3564,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"23241:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"23216:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"23216:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3360,"id":3569,"nodeType":"Return","src":"23204:40:11"}]}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"17783:292:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:11","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"a","nameLocation":"18102:1:11","nodeType":"VariableDeclaration","scope":3572,"src":"18094:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:11"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3572,"src":"18128:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:11"},"scope":4193,"src":"18080:5181:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"23434:171:11","statements":[{"id":3604,"nodeType":"UncheckedBlock","src":"23444:155:11","statements":[{"assignments":[3584],"declarations":[{"constant":false,"id":3584,"mutability":"mutable","name":"result","nameLocation":"23476:6:11","nodeType":"VariableDeclaration","scope":3604,"src":"23468:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3588,"initialValue":{"arguments":[{"id":3586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"23490:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3572,3606],"referencedDeclaration":3572,"src":"23485:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"23513:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3593,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"23555:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":3592,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"23538:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"23568:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"23577:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"23586:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"23522:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"23522:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3582,"id":3603,"nodeType":"Return","src":"23506:82:11"}]}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"23267:86:11","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:11","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"a","nameLocation":"23380:1:11","nodeType":"VariableDeclaration","scope":3606,"src":"23372:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:11","nodeType":"VariableDeclaration","scope":3606,"src":"23383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":3577,"nodeType":"UserDefinedTypeName","pathNode":{"id":3576,"name":"Rounding","nameLocations":["23383:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"23383:8:11"},"referencedDeclaration":2599,"src":"23383:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:11"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"23425:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:11"},"scope":4193,"src":"23358:247:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"23796:981:11","statements":[{"assignments":[3615],"declarations":[{"constant":false,"id":3615,"mutability":"mutable","name":"result","nameLocation":"23814:6:11","nodeType":"VariableDeclaration","scope":3801,"src":"23806:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3617,"initialValue":{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:11"},{"assignments":[3619],"declarations":[{"constant":false,"id":3619,"mutability":"mutable","name":"exp","nameLocation":"23842:3:11","nodeType":"VariableDeclaration","scope":3801,"src":"23834:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3620,"nodeType":"VariableDeclarationStatement","src":"23834:11:11"},{"id":3798,"nodeType":"UncheckedBlock","src":"23855:893:11","statements":[{"expression":{"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3621,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"23879:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"23907:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3623,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"23891:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"23891:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ExpressionStatement","src":"23879:51:11"},{"expression":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"23944:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3638,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"23954:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ExpressionStatement","src":"23944:13:11"},{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"23971:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3642,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"23981:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"nodeType":"ExpressionStatement","src":"23971:13:11"},{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"23999:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24026:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3647,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24010:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24010:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3660,"nodeType":"ExpressionStatement","src":"23999:49:11"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24062:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3662,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24072:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"24062:13:11"},{"expression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24089:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3666,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24099:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3668,"nodeType":"ExpressionStatement","src":"24089:13:11"},{"expression":{"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3669,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24117:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24144:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3671,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24128:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24128:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ExpressionStatement","src":"24117:49:11"},{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24180:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3686,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24190:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"24180:13:11"},{"expression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24207:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3690,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24217:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3692,"nodeType":"ExpressionStatement","src":"24207:13:11"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3693,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24235:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24262:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3695,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24246:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24246:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"24235:49:11"},{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24298:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3710,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24308:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ExpressionStatement","src":"24298:13:11"},{"expression":{"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24325:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3714,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24335:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3716,"nodeType":"ExpressionStatement","src":"24325:13:11"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24353:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3719,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24363:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24363:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"nodeType":"ExpressionStatement","src":"24353:47:11"},{"expression":{"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24414:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3734,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24424:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3736,"nodeType":"ExpressionStatement","src":"24414:13:11"},{"expression":{"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24441:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3738,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24451:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ExpressionStatement","src":"24441:13:11"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24469:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24495:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3743,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24479:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24479:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"24469:47:11"},{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24530:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3758,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24540:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ExpressionStatement","src":"24530:13:11"},{"expression":{"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24557:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3762,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24567:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"nodeType":"ExpressionStatement","src":"24557:13:11"},{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24585:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24611:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24595:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24595:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"24585:47:11"},{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24646:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3782,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24656:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"24646:13:11"},{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24673:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3786,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24683:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"24673:13:11"},{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24701:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"24727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"24711:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"24711:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"24701:36:11"}]},{"expression":{"id":3799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"24764:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3613,"id":3800,"nodeType":"Return","src":"24757:13:11"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"23611:119:11","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:11","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"value","nameLocation":"23757:5:11","nodeType":"VariableDeclaration","scope":3802,"src":"23749:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:11"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"23787:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:11"},"scope":4193,"src":"23735:1042:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"25010:175:11","statements":[{"id":3834,"nodeType":"UncheckedBlock","src":"25020:159:11","statements":[{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"result","nameLocation":"25052:6:11","nodeType":"VariableDeclaration","scope":3834,"src":"25044:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3818,"initialValue":{"arguments":[{"id":3816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"25066:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3802,3836],"referencedDeclaration":3802,"src":"25061:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"25093:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3823,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"25135:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":3822,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"25118:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"25153:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"25162:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"25102:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"25102:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3812,"id":3833,"nodeType":"Return","src":"25086:82:11"}]}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"24783:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:11","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"value","nameLocation":"24952:5:11","nodeType":"VariableDeclaration","scope":3836,"src":"24944:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:11","nodeType":"VariableDeclaration","scope":3836,"src":"24959:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":3807,"nodeType":"UserDefinedTypeName","pathNode":{"id":3806,"name":"Rounding","nameLocations":["24959:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"24959:8:11"},"referencedDeclaration":2599,"src":"24959:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:11"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3836,"src":"25001:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:11"},"scope":4193,"src":"24930:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"25378:854:11","statements":[{"assignments":[3845],"declarations":[{"constant":false,"id":3845,"mutability":"mutable","name":"result","nameLocation":"25396:6:11","nodeType":"VariableDeclaration","scope":3964,"src":"25388:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3847,"initialValue":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:11"},{"id":3961,"nodeType":"UncheckedBlock","src":"25416:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25444:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"IfStatement","src":"25440:103:11","trueBody":{"id":3863,"nodeType":"Block","src":"25463:80:11","statements":[{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3858,"nodeType":"ExpressionStatement","src":"25481:17:11"},{"expression":{"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"25516:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3862,"nodeType":"ExpressionStatement","src":"25516:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25560:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3881,"nodeType":"IfStatement","src":"25556:103:11","trueBody":{"id":3880,"nodeType":"Block","src":"25579:80:11","statements":[{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25597:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"25597:17:11"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"25632:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"25632:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25676:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"nodeType":"IfStatement","src":"25672:103:11","trueBody":{"id":3897,"nodeType":"Block","src":"25695:80:11","statements":[{"expression":{"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25713:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3892,"nodeType":"ExpressionStatement","src":"25713:17:11"},{"expression":{"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"25748:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3896,"nodeType":"ExpressionStatement","src":"25748:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25792:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"25788:100:11","trueBody":{"id":3914,"nodeType":"Block","src":"25810:78:11","statements":[{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25828:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"25828:16:11"},{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"25862:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3913,"nodeType":"ExpressionStatement","src":"25862:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25905:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3932,"nodeType":"IfStatement","src":"25901:100:11","trueBody":{"id":3931,"nodeType":"Block","src":"25923:78:11","statements":[{"expression":{"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"25941:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"nodeType":"ExpressionStatement","src":"25941:16:11"},{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"25975:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3930,"nodeType":"ExpressionStatement","src":"25975:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"26018:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3949,"nodeType":"IfStatement","src":"26014:100:11","trueBody":{"id":3948,"nodeType":"Block","src":"26036:78:11","statements":[{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"26054:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3943,"nodeType":"ExpressionStatement","src":"26054:16:11"},{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"26088:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ExpressionStatement","src":"26088:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"26131:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3960,"nodeType":"IfStatement","src":"26127:66:11","trueBody":{"id":3959,"nodeType":"Block","src":"26149:44:11","statements":[{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"26167:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"26167:11:11"}]}}]},{"expression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"26219:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3843,"id":3963,"nodeType":"Return","src":"26212:13:11"}]},"documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"25191:120:11","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:11","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"value","nameLocation":"25339:5:11","nodeType":"VariableDeclaration","scope":3965,"src":"25331:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:11"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"25369:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:11"},"scope":4193,"src":"25316:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"26467:177:11","statements":[{"id":3997,"nodeType":"UncheckedBlock","src":"26477:161:11","statements":[{"assignments":[3977],"declarations":[{"constant":false,"id":3977,"mutability":"mutable","name":"result","nameLocation":"26509:6:11","nodeType":"VariableDeclaration","scope":3997,"src":"26501:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3981,"initialValue":{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"26524:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3965,3999],"referencedDeclaration":3965,"src":"26518:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"26551:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3986,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26593:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":3985,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"26576:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"26612:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"26621:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3983,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"26560:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"26560:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3975,"id":3996,"nodeType":"Return","src":"26544:83:11"}]}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"26238:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:11","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"value","nameLocation":"26409:5:11","nodeType":"VariableDeclaration","scope":3999,"src":"26401:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:11","nodeType":"VariableDeclaration","scope":3999,"src":"26416:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":3970,"nodeType":"UserDefinedTypeName","pathNode":{"id":3969,"name":"Rounding","nameLocations":["26416:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"26416:8:11"},"referencedDeclaration":2599,"src":"26416:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:11"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"26458:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:11"},"scope":4193,"src":"26386:258:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"26964:674:11","statements":[{"assignments":[4008],"declarations":[{"constant":false,"id":4008,"mutability":"mutable","name":"result","nameLocation":"26982:6:11","nodeType":"VariableDeclaration","scope":4135,"src":"26974:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4010,"initialValue":{"hexValue":"30","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:11"},{"assignments":[4012],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:11","nodeType":"VariableDeclaration","scope":4135,"src":"27002:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4013,"nodeType":"VariableDeclarationStatement","src":"27002:12:11"},{"id":4132,"nodeType":"UncheckedBlock","src":"27024:585:11","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27048:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27071:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4015,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27055:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27055:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"27048:46:11"},{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27108:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27118:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"27108:20:11"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27142:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27152:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"nodeType":"ExpressionStatement","src":"27142:19:11"},{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27176:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4041,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27183:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27183:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"27176:45:11"},{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27235:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27245:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"nodeType":"ExpressionStatement","src":"27235:19:11"},{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27268:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27278:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4065,"nodeType":"ExpressionStatement","src":"27268:18:11"},{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27301:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27324:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4067,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27308:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27308:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4079,"nodeType":"ExpressionStatement","src":"27301:45:11"},{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27360:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27370:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"27360:19:11"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27393:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27403:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"27393:18:11"},{"expression":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27426:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27449:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27433:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27433:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"nodeType":"ExpressionStatement","src":"27426:45:11"},{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27485:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27495:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"27485:19:11"},{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27518:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"27528:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ExpressionStatement","src":"27518:18:11"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27577:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4119,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27561:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27561:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ExpressionStatement","src":"27551:47:11"}]},{"expression":{"id":4133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"27625:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4006,"id":4134,"nodeType":"Return","src":"27618:13:11"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"26650:246:11","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:11","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"value","nameLocation":"26925:5:11","nodeType":"VariableDeclaration","scope":4136,"src":"26917:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:11"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4136,"src":"26955:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:11"},"scope":4193,"src":"26901:737:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4172,"nodeType":"Block","src":"27875:184:11","statements":[{"id":4171,"nodeType":"UncheckedBlock","src":"27885:168:11","statements":[{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"result","nameLocation":"27917:6:11","nodeType":"VariableDeclaration","scope":4171,"src":"27909:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4152,"initialValue":{"arguments":[{"id":4150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"27933:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4149,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4136,4173],"referencedDeclaration":4136,"src":"27926:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"27960:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4157,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"28002:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":4156,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"27985:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"28021:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"28036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4154,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"27969:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"27969:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4146,"id":4170,"nodeType":"Return","src":"27953:89:11"}]}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"27644:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4173,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:11","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"value","nameLocation":"27817:5:11","nodeType":"VariableDeclaration","scope":4173,"src":"27809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:11","nodeType":"VariableDeclaration","scope":4173,"src":"27824:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":4141,"nodeType":"UserDefinedTypeName","pathNode":{"id":4140,"name":"Rounding","nameLocations":["27824:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"27824:8:11"},"referencedDeclaration":2599,"src":"27824:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:11"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4173,"src":"27866:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:11"},"scope":4193,"src":"27793:266:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"28257:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4184,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"28280:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}],"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4182,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:11","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4181,"id":4190,"nodeType":"Return","src":"28267:31:11"}]},"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"28065:113:11","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:11","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:11","nodeType":"VariableDeclaration","scope":4192,"src":"28209:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"},"typeName":{"id":4176,"nodeType":"UserDefinedTypeName","pathNode":{"id":4175,"name":"Rounding","nameLocations":["28209:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2599,"src":"28209:8:11"},"referencedDeclaration":2599,"src":"28209:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:11"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4192,"src":"28251:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4179,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:11"},"scope":4193,"src":"28183:122:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4194,"src":"281:28026:11","usedErrors":[],"usedEvents":[]}],"src":"103:28205:11"},"id":11},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5958]},"id":5959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4195,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"218:550:12","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5958,"linearizedBaseContracts":[5958],"name":"SafeCast","nameLocation":"777:8:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"792:68:12","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4203,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:12","nodeType":"ErrorDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"bits","nameLocation":"908:4:12","nodeType":"VariableDeclaration","scope":4203,"src":"902:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4198,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"value","nameLocation":"922:5:12","nodeType":"VariableDeclaration","scope":4203,"src":"914:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:12"},"src":"865:64:12"},{"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"935:75:12","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4208,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:12","nodeType":"ErrorDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"value","nameLocation":"1056:5:12","nodeType":"VariableDeclaration","scope":4208,"src":"1049:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4205,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:12"},"src":"1015:48:12"},{"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"1069:67:12","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4215,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:12","nodeType":"ErrorDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"bits","nameLocation":"1183:4:12","nodeType":"VariableDeclaration","scope":4215,"src":"1177:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4210,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"value","nameLocation":"1196:5:12","nodeType":"VariableDeclaration","scope":4215,"src":"1189:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4212,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:12"},"src":"1141:62:12"},{"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"1209:75:12","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4220,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:12","nodeType":"ErrorDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"value","nameLocation":"1331:5:12","nodeType":"VariableDeclaration","scope":4220,"src":"1323:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:12"},"src":"1289:49:12"},{"body":{"id":4247,"nodeType":"Block","src":"1695:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"1709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4230,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:12","memberName":"max","nodeType":"MemberAccess","src":"1717:17:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"1705:105:12","trueBody":{"id":4240,"nodeType":"Block","src":"1736:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"1793:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4235,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"1757:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4239,"nodeType":"RevertStatement","src":"1750:49:12"}]}},{"expression":{"arguments":[{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"1834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4242,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:12","typeDescriptions":{}}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4227,"id":4246,"nodeType":"Return","src":"1819:21:12"}]},"documentation":{"id":4221,"nodeType":"StructuredDocumentation","src":"1344:280:12","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:12","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"value","nameLocation":"1656:5:12","nodeType":"VariableDeclaration","scope":4248,"src":"1648:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:12"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"1686:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4225,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:12"},"scope":5958,"src":"1629:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4275,"nodeType":"Block","src":"2204:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2218:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4258,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4257,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:12","memberName":"max","nodeType":"MemberAccess","src":"2226:17:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4269,"nodeType":"IfStatement","src":"2214:105:12","trueBody":{"id":4268,"nodeType":"Block","src":"2245:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2302:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4263,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"2266:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4267,"nodeType":"RevertStatement","src":"2259:49:12"}]}},{"expression":{"arguments":[{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2343:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4270,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:12","typeDescriptions":{}}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4255,"id":4274,"nodeType":"Return","src":"2328:21:12"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"1853:280:12","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4276,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:12","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"value","nameLocation":"2165:5:12","nodeType":"VariableDeclaration","scope":4276,"src":"2157:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:12"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4276,"src":"2195:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4253,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:12"},"scope":5958,"src":"2138:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4303,"nodeType":"Block","src":"2713:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4286,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4285,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:12","memberName":"max","nodeType":"MemberAccess","src":"2735:17:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4297,"nodeType":"IfStatement","src":"2723:105:12","trueBody":{"id":4296,"nodeType":"Block","src":"2754:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2811:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4291,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"2775:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"RevertStatement","src":"2768:49:12"}]}},{"expression":{"arguments":[{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2852:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4298,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:12","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4283,"id":4302,"nodeType":"Return","src":"2837:21:12"}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"2362:280:12","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4304,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:12","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"value","nameLocation":"2674:5:12","nodeType":"VariableDeclaration","scope":4304,"src":"2666:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:12"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4304,"src":"2704:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4281,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:12"},"scope":5958,"src":"2647:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"3222:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"3236:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4314,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4313,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:12","memberName":"max","nodeType":"MemberAccess","src":"3244:17:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4325,"nodeType":"IfStatement","src":"3232:105:12","trueBody":{"id":4324,"nodeType":"Block","src":"3263:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"3320:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4319,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"3284:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4323,"nodeType":"RevertStatement","src":"3277:49:12"}]}},{"expression":{"arguments":[{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"3361:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4326,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:12","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4311,"id":4330,"nodeType":"Return","src":"3346:21:12"}]},"documentation":{"id":4305,"nodeType":"StructuredDocumentation","src":"2871:280:12","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:12","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"value","nameLocation":"3183:5:12","nodeType":"VariableDeclaration","scope":4332,"src":"3175:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:12"},"returnParameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"3213:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4309,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:12"},"scope":5958,"src":"3156:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4359,"nodeType":"Block","src":"3731:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"3745:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4342,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4341,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:12","memberName":"max","nodeType":"MemberAccess","src":"3753:17:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4353,"nodeType":"IfStatement","src":"3741:105:12","trueBody":{"id":4352,"nodeType":"Block","src":"3772:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"3829:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"3793:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4351,"nodeType":"RevertStatement","src":"3786:49:12"}]}},{"expression":{"arguments":[{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"3870:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4354,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:12","typeDescriptions":{}}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4339,"id":4358,"nodeType":"Return","src":"3855:21:12"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"3380:280:12","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4360,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:12","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"value","nameLocation":"3692:5:12","nodeType":"VariableDeclaration","scope":4360,"src":"3684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:12"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4360,"src":"3722:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4337,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:12"},"scope":5958,"src":"3665:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4387,"nodeType":"Block","src":"4240:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4254:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4370,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4369,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:12","memberName":"max","nodeType":"MemberAccess","src":"4262:17:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"IfStatement","src":"4250:105:12","trueBody":{"id":4380,"nodeType":"Block","src":"4281:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4338:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4375,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"4302:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4379,"nodeType":"RevertStatement","src":"4295:49:12"}]}},{"expression":{"arguments":[{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4382,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:12","typeDescriptions":{}}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4367,"id":4386,"nodeType":"Return","src":"4364:21:12"}]},"documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"3889:280:12","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:12","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"value","nameLocation":"4201:5:12","nodeType":"VariableDeclaration","scope":4388,"src":"4193:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:12"},"returnParameters":{"id":4367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4388,"src":"4231:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4365,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:12"},"scope":5958,"src":"4174:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4415,"nodeType":"Block","src":"4749:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4763:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4398,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:12","memberName":"max","nodeType":"MemberAccess","src":"4771:17:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4409,"nodeType":"IfStatement","src":"4759:105:12","trueBody":{"id":4408,"nodeType":"Block","src":"4790:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4847:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4403,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"4811:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4407,"nodeType":"RevertStatement","src":"4804:49:12"}]}},{"expression":{"arguments":[{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"4888:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4410,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:12","typeDescriptions":{}}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4395,"id":4414,"nodeType":"Return","src":"4873:21:12"}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"4398:280:12","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:12","nodeType":"FunctionDefinition","parameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"value","nameLocation":"4710:5:12","nodeType":"VariableDeclaration","scope":4416,"src":"4702:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:12"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4416,"src":"4740:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4393,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:12"},"scope":5958,"src":"4683:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"5258:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"5272:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4426,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4425,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:12","memberName":"max","nodeType":"MemberAccess","src":"5280:17:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4437,"nodeType":"IfStatement","src":"5268:105:12","trueBody":{"id":4436,"nodeType":"Block","src":"5299:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"5356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4431,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5320:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"RevertStatement","src":"5313:49:12"}]}},{"expression":{"arguments":[{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"5397:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4438,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:12","typeDescriptions":{}}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4423,"id":4442,"nodeType":"Return","src":"5382:21:12"}]},"documentation":{"id":4417,"nodeType":"StructuredDocumentation","src":"4907:280:12","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:12","nodeType":"FunctionDefinition","parameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"value","nameLocation":"5219:5:12","nodeType":"VariableDeclaration","scope":4444,"src":"5211:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:12"},"returnParameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4444,"src":"5249:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4421,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:12"},"scope":5958,"src":"5192:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4471,"nodeType":"Block","src":"5767:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5781:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4454,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4453,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:12","memberName":"max","nodeType":"MemberAccess","src":"5789:17:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4465,"nodeType":"IfStatement","src":"5777:105:12","trueBody":{"id":4464,"nodeType":"Block","src":"5808:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4459,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5829:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4463,"nodeType":"RevertStatement","src":"5822:49:12"}]}},{"expression":{"arguments":[{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"5906:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4466,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:12","typeDescriptions":{}}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4451,"id":4470,"nodeType":"Return","src":"5891:21:12"}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"5416:280:12","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:12","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"value","nameLocation":"5728:5:12","nodeType":"VariableDeclaration","scope":4472,"src":"5720:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:12"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4472,"src":"5758:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4449,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:12"},"scope":5958,"src":"5701:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"6276:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"6290:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4482,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:12","memberName":"max","nodeType":"MemberAccess","src":"6298:17:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4493,"nodeType":"IfStatement","src":"6286:105:12","trueBody":{"id":4492,"nodeType":"Block","src":"6317:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"6374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4487,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"6338:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4491,"nodeType":"RevertStatement","src":"6331:49:12"}]}},{"expression":{"arguments":[{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"6415:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4494,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:12","typeDescriptions":{}}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4479,"id":4498,"nodeType":"Return","src":"6400:21:12"}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"5925:280:12","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:12","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"value","nameLocation":"6237:5:12","nodeType":"VariableDeclaration","scope":4500,"src":"6229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:12"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"6267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4477,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:12"},"scope":5958,"src":"6210:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4527,"nodeType":"Block","src":"6785:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"6799:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4510,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:12","memberName":"max","nodeType":"MemberAccess","src":"6807:17:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4521,"nodeType":"IfStatement","src":"6795:105:12","trueBody":{"id":4520,"nodeType":"Block","src":"6826:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"6883:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4515,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"6847:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"RevertStatement","src":"6840:49:12"}]}},{"expression":{"arguments":[{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"6924:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4522,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:12","typeDescriptions":{}}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4507,"id":4526,"nodeType":"Return","src":"6909:21:12"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"6434:280:12","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:12","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"value","nameLocation":"6746:5:12","nodeType":"VariableDeclaration","scope":4528,"src":"6738:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:12"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"6776:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4505,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:12"},"scope":5958,"src":"6719:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"7294:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7308:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4538,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:12","memberName":"max","nodeType":"MemberAccess","src":"7316:17:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4549,"nodeType":"IfStatement","src":"7304:105:12","trueBody":{"id":4548,"nodeType":"Block","src":"7335:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7392:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4543,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"7356:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"RevertStatement","src":"7349:49:12"}]}},{"expression":{"arguments":[{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7433:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4550,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:12","typeDescriptions":{}}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4535,"id":4554,"nodeType":"Return","src":"7418:21:12"}]},"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"6943:280:12","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:12","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"value","nameLocation":"7255:5:12","nodeType":"VariableDeclaration","scope":4556,"src":"7247:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:12"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"7285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4533,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:12"},"scope":5958,"src":"7228:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4583,"nodeType":"Block","src":"7803:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"7817:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4566,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4565,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:12","memberName":"max","nodeType":"MemberAccess","src":"7825:17:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"7813:105:12","trueBody":{"id":4576,"nodeType":"Block","src":"7844:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"7901:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"7865:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4575,"nodeType":"RevertStatement","src":"7858:49:12"}]}},{"expression":{"arguments":[{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"7942:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4578,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:12","typeDescriptions":{}}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4563,"id":4582,"nodeType":"Return","src":"7927:21:12"}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"7452:280:12","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:12","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"value","nameLocation":"7764:5:12","nodeType":"VariableDeclaration","scope":4584,"src":"7756:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:12"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4584,"src":"7794:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4561,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:12"},"scope":5958,"src":"7737:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"8312:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8326:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4594,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4593,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:12","memberName":"max","nodeType":"MemberAccess","src":"8334:17:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4605,"nodeType":"IfStatement","src":"8322:105:12","trueBody":{"id":4604,"nodeType":"Block","src":"8353:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8410:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4599,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8374:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4603,"nodeType":"RevertStatement","src":"8367:49:12"}]}},{"expression":{"arguments":[{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8451:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4606,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:12","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4591,"id":4610,"nodeType":"Return","src":"8436:21:12"}]},"documentation":{"id":4585,"nodeType":"StructuredDocumentation","src":"7961:280:12","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:12","nodeType":"FunctionDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"value","nameLocation":"8273:5:12","nodeType":"VariableDeclaration","scope":4612,"src":"8265:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:12"},"returnParameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"8303:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4589,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:12"},"scope":5958,"src":"8246:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4639,"nodeType":"Block","src":"8821:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"8835:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4622,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:12","memberName":"max","nodeType":"MemberAccess","src":"8843:17:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4633,"nodeType":"IfStatement","src":"8831:105:12","trueBody":{"id":4632,"nodeType":"Block","src":"8862:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"8919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4627,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8883:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4631,"nodeType":"RevertStatement","src":"8876:49:12"}]}},{"expression":{"arguments":[{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"8960:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4634,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:12","typeDescriptions":{}}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4619,"id":4638,"nodeType":"Return","src":"8945:21:12"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"8470:280:12","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:12","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"value","nameLocation":"8782:5:12","nodeType":"VariableDeclaration","scope":4640,"src":"8774:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:12"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4640,"src":"8812:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4617,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:12"},"scope":5958,"src":"8755:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4667,"nodeType":"Block","src":"9330:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"9344:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4650,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4649,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:12","memberName":"max","nodeType":"MemberAccess","src":"9352:17:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4661,"nodeType":"IfStatement","src":"9340:105:12","trueBody":{"id":4660,"nodeType":"Block","src":"9371:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"9428:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4655,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9392:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4659,"nodeType":"RevertStatement","src":"9385:49:12"}]}},{"expression":{"arguments":[{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"9469:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4662,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:12","typeDescriptions":{}}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4647,"id":4666,"nodeType":"Return","src":"9454:21:12"}]},"documentation":{"id":4641,"nodeType":"StructuredDocumentation","src":"8979:280:12","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4668,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:12","nodeType":"FunctionDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"value","nameLocation":"9291:5:12","nodeType":"VariableDeclaration","scope":4668,"src":"9283:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:12"},"returnParameters":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4668,"src":"9321:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4645,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:12"},"scope":5958,"src":"9264:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4695,"nodeType":"Block","src":"9839:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"9853:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4678,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4677,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:12","memberName":"max","nodeType":"MemberAccess","src":"9861:17:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4689,"nodeType":"IfStatement","src":"9849:105:12","trueBody":{"id":4688,"nodeType":"Block","src":"9880:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"9937:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4683,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"9901:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4687,"nodeType":"RevertStatement","src":"9894:49:12"}]}},{"expression":{"arguments":[{"id":4692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"9978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4690,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:12","typeDescriptions":{}}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4675,"id":4694,"nodeType":"Return","src":"9963:21:12"}]},"documentation":{"id":4669,"nodeType":"StructuredDocumentation","src":"9488:280:12","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4696,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:12","nodeType":"FunctionDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"value","nameLocation":"9800:5:12","nodeType":"VariableDeclaration","scope":4696,"src":"9792:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:12"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4696,"src":"9830:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4673,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:12"},"scope":5958,"src":"9773:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4723,"nodeType":"Block","src":"10348:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"10362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4706,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:12","memberName":"max","nodeType":"MemberAccess","src":"10370:17:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4717,"nodeType":"IfStatement","src":"10358:105:12","trueBody":{"id":4716,"nodeType":"Block","src":"10389:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"10446:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4711,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"10410:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4715,"nodeType":"RevertStatement","src":"10403:49:12"}]}},{"expression":{"arguments":[{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"10487:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4718,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:12","typeDescriptions":{}}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4703,"id":4722,"nodeType":"Return","src":"10472:21:12"}]},"documentation":{"id":4697,"nodeType":"StructuredDocumentation","src":"9997:280:12","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:12","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"value","nameLocation":"10309:5:12","nodeType":"VariableDeclaration","scope":4724,"src":"10301:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:12"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4724,"src":"10339:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4701,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:12"},"scope":5958,"src":"10282:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4751,"nodeType":"Block","src":"10857:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"10871:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4734,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4733,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:12","memberName":"max","nodeType":"MemberAccess","src":"10879:17:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4745,"nodeType":"IfStatement","src":"10867:105:12","trueBody":{"id":4744,"nodeType":"Block","src":"10898:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"10955:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4739,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"10919:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4743,"nodeType":"RevertStatement","src":"10912:49:12"}]}},{"expression":{"arguments":[{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"10996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4746,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:12","typeDescriptions":{}}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4731,"id":4750,"nodeType":"Return","src":"10981:21:12"}]},"documentation":{"id":4725,"nodeType":"StructuredDocumentation","src":"10506:280:12","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4752,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:12","nodeType":"FunctionDefinition","parameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"value","nameLocation":"10818:5:12","nodeType":"VariableDeclaration","scope":4752,"src":"10810:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:12"},"returnParameters":{"id":4731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4752,"src":"10848:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4729,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:12"},"scope":5958,"src":"10791:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4779,"nodeType":"Block","src":"11360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"11374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4762,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:12","memberName":"max","nodeType":"MemberAccess","src":"11382:16:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4773,"nodeType":"IfStatement","src":"11370:103:12","trueBody":{"id":4772,"nodeType":"Block","src":"11400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"11456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4767,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"11421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4771,"nodeType":"RevertStatement","src":"11414:48:12"}]}},{"expression":{"arguments":[{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"11496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4774,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:12","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4759,"id":4778,"nodeType":"Return","src":"11482:20:12"}]},"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"11015:276:12","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4780,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:12","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"value","nameLocation":"11322:5:12","nodeType":"VariableDeclaration","scope":4780,"src":"11314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:12"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4780,"src":"11352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4757,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:12"},"scope":5958,"src":"11296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4807,"nodeType":"Block","src":"11860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4790,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4789,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:12","memberName":"max","nodeType":"MemberAccess","src":"11882:16:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4801,"nodeType":"IfStatement","src":"11870:103:12","trueBody":{"id":4800,"nodeType":"Block","src":"11900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"11921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4799,"nodeType":"RevertStatement","src":"11914:48:12"}]}},{"expression":{"arguments":[{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4802,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:12","typeDescriptions":{}}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4787,"id":4806,"nodeType":"Return","src":"11982:20:12"}]},"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"11515:276:12","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:12","nodeType":"FunctionDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"value","nameLocation":"11822:5:12","nodeType":"VariableDeclaration","scope":4808,"src":"11814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:12"},"returnParameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4808,"src":"11852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4785,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:12"},"scope":5958,"src":"11796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4835,"nodeType":"Block","src":"12360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"12374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4818,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4817,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:12","memberName":"max","nodeType":"MemberAccess","src":"12382:16:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4829,"nodeType":"IfStatement","src":"12370:103:12","trueBody":{"id":4828,"nodeType":"Block","src":"12400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"12456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4827,"nodeType":"RevertStatement","src":"12414:48:12"}]}},{"expression":{"arguments":[{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"12496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4830,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:12","typeDescriptions":{}}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4815,"id":4834,"nodeType":"Return","src":"12482:20:12"}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"12015:276:12","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4836,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:12","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"value","nameLocation":"12322:5:12","nodeType":"VariableDeclaration","scope":4836,"src":"12314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:12"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4836,"src":"12352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4813,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:12"},"scope":5958,"src":"12296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4863,"nodeType":"Block","src":"12860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"12874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4846,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4845,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:12","memberName":"max","nodeType":"MemberAccess","src":"12882:16:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4857,"nodeType":"IfStatement","src":"12870:103:12","trueBody":{"id":4856,"nodeType":"Block","src":"12900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"12956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4851,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4855,"nodeType":"RevertStatement","src":"12914:48:12"}]}},{"expression":{"arguments":[{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"12996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4858,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:12","typeDescriptions":{}}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4843,"id":4862,"nodeType":"Return","src":"12982:20:12"}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"12515:276:12","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:12","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"12822:5:12","nodeType":"VariableDeclaration","scope":4864,"src":"12814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:12"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4864,"src":"12852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4841,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:12"},"scope":5958,"src":"12796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4891,"nodeType":"Block","src":"13360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"13374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4874,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:12","memberName":"max","nodeType":"MemberAccess","src":"13382:16:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4885,"nodeType":"IfStatement","src":"13370:103:12","trueBody":{"id":4884,"nodeType":"Block","src":"13400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"13456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4879,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"13421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4883,"nodeType":"RevertStatement","src":"13414:48:12"}]}},{"expression":{"arguments":[{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"13496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4886,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:12","typeDescriptions":{}}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4871,"id":4890,"nodeType":"Return","src":"13482:20:12"}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"13015:276:12","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4892,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:12","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"value","nameLocation":"13322:5:12","nodeType":"VariableDeclaration","scope":4892,"src":"13314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:12"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4892,"src":"13352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4869,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:12"},"scope":5958,"src":"13296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4919,"nodeType":"Block","src":"13860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"13874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4902,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:12","memberName":"max","nodeType":"MemberAccess","src":"13882:16:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"nodeType":"IfStatement","src":"13870:103:12","trueBody":{"id":4912,"nodeType":"Block","src":"13900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"13956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4907,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"13921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"RevertStatement","src":"13914:48:12"}]}},{"expression":{"arguments":[{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"13996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4914,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:12","typeDescriptions":{}}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4899,"id":4918,"nodeType":"Return","src":"13982:20:12"}]},"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"13515:276:12","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:12","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"value","nameLocation":"13822:5:12","nodeType":"VariableDeclaration","scope":4920,"src":"13814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:12"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"13852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4897,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:12"},"scope":5958,"src":"13796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4947,"nodeType":"Block","src":"14360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4930,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4929,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:12","memberName":"max","nodeType":"MemberAccess","src":"14382:16:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4941,"nodeType":"IfStatement","src":"14370:103:12","trueBody":{"id":4940,"nodeType":"Block","src":"14400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4935,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"14421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4939,"nodeType":"RevertStatement","src":"14414:48:12"}]}},{"expression":{"arguments":[{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"14496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4942,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:12","typeDescriptions":{}}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4927,"id":4946,"nodeType":"Return","src":"14482:20:12"}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"14015:276:12","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4948,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:12","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"value","nameLocation":"14322:5:12","nodeType":"VariableDeclaration","scope":4948,"src":"14314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:12"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4948,"src":"14352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4925,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:12"},"scope":5958,"src":"14296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"14860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"14874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4958,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4957,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:12","memberName":"max","nodeType":"MemberAccess","src":"14882:16:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4969,"nodeType":"IfStatement","src":"14870:103:12","trueBody":{"id":4968,"nodeType":"Block","src":"14900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"14956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4963,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"14921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4967,"nodeType":"RevertStatement","src":"14914:48:12"}]}},{"expression":{"arguments":[{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"14996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4970,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:12","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4955,"id":4974,"nodeType":"Return","src":"14982:20:12"}]},"documentation":{"id":4949,"nodeType":"StructuredDocumentation","src":"14515:276:12","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:12","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"value","nameLocation":"14822:5:12","nodeType":"VariableDeclaration","scope":4976,"src":"14814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:12"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"14852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4953,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:12"},"scope":5958,"src":"14796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5003,"nodeType":"Block","src":"15360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4986,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:12","memberName":"max","nodeType":"MemberAccess","src":"15382:16:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4997,"nodeType":"IfStatement","src":"15370:103:12","trueBody":{"id":4996,"nodeType":"Block","src":"15400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4991,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4995,"nodeType":"RevertStatement","src":"15414:48:12"}]}},{"expression":{"arguments":[{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4998,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:12","typeDescriptions":{}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4983,"id":5002,"nodeType":"Return","src":"15482:20:12"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"15015:276:12","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5004,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:12","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"value","nameLocation":"15322:5:12","nodeType":"VariableDeclaration","scope":5004,"src":"15314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:12"},"returnParameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5004,"src":"15352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4981,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:12"},"scope":5958,"src":"15296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5031,"nodeType":"Block","src":"15860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"15874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5014,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5013,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:12","memberName":"max","nodeType":"MemberAccess","src":"15882:16:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5025,"nodeType":"IfStatement","src":"15870:103:12","trueBody":{"id":5024,"nodeType":"Block","src":"15900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"15956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5019,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"15921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"RevertStatement","src":"15914:48:12"}]}},{"expression":{"arguments":[{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"15996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5026,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:12","typeDescriptions":{}}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5011,"id":5030,"nodeType":"Return","src":"15982:20:12"}]},"documentation":{"id":5005,"nodeType":"StructuredDocumentation","src":"15515:276:12","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5032,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"value","nameLocation":"15822:5:12","nodeType":"VariableDeclaration","scope":5032,"src":"15814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:12"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5032,"src":"15852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5009,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:12"},"scope":5958,"src":"15796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5059,"nodeType":"Block","src":"16360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"16374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5042,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:12","memberName":"max","nodeType":"MemberAccess","src":"16382:16:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5053,"nodeType":"IfStatement","src":"16370:103:12","trueBody":{"id":5052,"nodeType":"Block","src":"16400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"16456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5047,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"16421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"RevertStatement","src":"16414:48:12"}]}},{"expression":{"arguments":[{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"16496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5054,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:12","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5039,"id":5058,"nodeType":"Return","src":"16482:20:12"}]},"documentation":{"id":5033,"nodeType":"StructuredDocumentation","src":"16015:276:12","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5035,"mutability":"mutable","name":"value","nameLocation":"16322:5:12","nodeType":"VariableDeclaration","scope":5060,"src":"16314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:12"},"returnParameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5060,"src":"16352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5037,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:12"},"scope":5958,"src":"16296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5087,"nodeType":"Block","src":"16854:146:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"16868:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5070,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5069,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:12","memberName":"max","nodeType":"MemberAccess","src":"16876:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5081,"nodeType":"IfStatement","src":"16864:101:12","trueBody":{"id":5080,"nodeType":"Block","src":"16893:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"16948:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"16914:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5079,"nodeType":"RevertStatement","src":"16907:47:12"}]}},{"expression":{"arguments":[{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"16987:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5082,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:12","typeDescriptions":{}}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5067,"id":5086,"nodeType":"Return","src":"16974:19:12"}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"16515:272:12","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5088,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:12","nodeType":"FunctionDefinition","parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"value","nameLocation":"16817:5:12","nodeType":"VariableDeclaration","scope":5088,"src":"16809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:12"},"returnParameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"16847:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5065,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:12"},"scope":5958,"src":"16792:208:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5110,"nodeType":"Block","src":"17236:128:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"17250:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5104,"nodeType":"IfStatement","src":"17246:81:12","trueBody":{"id":5103,"nodeType":"Block","src":"17261:66:12","statements":[{"errorCall":{"arguments":[{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"17310:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5099,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"17282:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5102,"nodeType":"RevertStatement","src":"17275:41:12"}]}},{"expression":{"arguments":[{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"17351:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:12","typeDescriptions":{}}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5095,"id":5109,"nodeType":"Return","src":"17336:21:12"}]},"documentation":{"id":5089,"nodeType":"StructuredDocumentation","src":"17006:160:12","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5111,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:12","nodeType":"FunctionDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"value","nameLocation":"17197:5:12","nodeType":"VariableDeclaration","scope":5111,"src":"17190:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5090,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:12"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5111,"src":"17227:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:12"},"scope":5958,"src":"17171:193:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5136,"nodeType":"Block","src":"17761:150:12","statements":[{"expression":{"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"17771:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"17791:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5120,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:12","typeDescriptions":{}}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5125,"nodeType":"ExpressionStatement","src":"17771:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"17811:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"17825:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5135,"nodeType":"IfStatement","src":"17807:98:12","trueBody":{"id":5134,"nodeType":"Block","src":"17832:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"17888:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5129,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"17853:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5133,"nodeType":"RevertStatement","src":"17846:48:12"}]}}]},"documentation":{"id":5112,"nodeType":"StructuredDocumentation","src":"17370:312:12","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:12","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"value","nameLocation":"17712:5:12","nodeType":"VariableDeclaration","scope":5137,"src":"17705:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5113,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:12"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:12","nodeType":"VariableDeclaration","scope":5137,"src":"17742:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5116,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:12"},"scope":5958,"src":"17687:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5162,"nodeType":"Block","src":"18308:150:12","statements":[{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"18318:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"18338:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5146,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:12","typeDescriptions":{}}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5151,"nodeType":"ExpressionStatement","src":"18318:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"18358:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"18372:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5161,"nodeType":"IfStatement","src":"18354:98:12","trueBody":{"id":5160,"nodeType":"Block","src":"18379:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"18435:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5155,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"18400:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5159,"nodeType":"RevertStatement","src":"18393:48:12"}]}}]},"documentation":{"id":5138,"nodeType":"StructuredDocumentation","src":"17917:312:12","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:12","nodeType":"FunctionDefinition","parameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"value","nameLocation":"18259:5:12","nodeType":"VariableDeclaration","scope":5163,"src":"18252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5139,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:12"},"returnParameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:12","nodeType":"VariableDeclaration","scope":5163,"src":"18289:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5142,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:12"},"scope":5958,"src":"18234:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"18855:150:12","statements":[{"expression":{"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"18865:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"18885:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5172,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:12","typeDescriptions":{}}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5177,"nodeType":"ExpressionStatement","src":"18865:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"18905:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"18919:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5187,"nodeType":"IfStatement","src":"18901:98:12","trueBody":{"id":5186,"nodeType":"Block","src":"18926:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"18982:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5181,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"18947:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"RevertStatement","src":"18940:48:12"}]}}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"18464:312:12","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:12","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"18806:5:12","nodeType":"VariableDeclaration","scope":5189,"src":"18799:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5165,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:12"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:12","nodeType":"VariableDeclaration","scope":5189,"src":"18836:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5168,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:12"},"scope":5958,"src":"18781:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5214,"nodeType":"Block","src":"19402:150:12","statements":[{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"19412:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"19432:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5198,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:12","typeDescriptions":{}}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5203,"nodeType":"ExpressionStatement","src":"19412:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"19452:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"19466:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5213,"nodeType":"IfStatement","src":"19448:98:12","trueBody":{"id":5212,"nodeType":"Block","src":"19473:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"19529:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5207,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"19494:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5211,"nodeType":"RevertStatement","src":"19487:48:12"}]}}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"19011:312:12","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5215,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:12","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"19353:5:12","nodeType":"VariableDeclaration","scope":5215,"src":"19346:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5191,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:12"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:12","nodeType":"VariableDeclaration","scope":5215,"src":"19383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5194,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:12"},"scope":5958,"src":"19328:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5240,"nodeType":"Block","src":"19949:150:12","statements":[{"expression":{"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19959:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"19979:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5224,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:12","typeDescriptions":{}}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5229,"nodeType":"ExpressionStatement","src":"19959:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19999:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"20013:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"19995:98:12","trueBody":{"id":5238,"nodeType":"Block","src":"20020:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"20076:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5233,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20041:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5237,"nodeType":"RevertStatement","src":"20034:48:12"}]}}]},"documentation":{"id":5216,"nodeType":"StructuredDocumentation","src":"19558:312:12","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:12","nodeType":"FunctionDefinition","parameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"value","nameLocation":"19900:5:12","nodeType":"VariableDeclaration","scope":5241,"src":"19893:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5217,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:12"},"returnParameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:12","nodeType":"VariableDeclaration","scope":5241,"src":"19930:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5220,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:12"},"scope":5958,"src":"19875:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5266,"nodeType":"Block","src":"20496:150:12","statements":[{"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"20506:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"20526:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5250,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:12","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5255,"nodeType":"ExpressionStatement","src":"20506:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"20546:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"20560:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"20542:98:12","trueBody":{"id":5264,"nodeType":"Block","src":"20567:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"20623:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5259,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20588:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"RevertStatement","src":"20581:48:12"}]}}]},"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"20105:312:12","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:12","nodeType":"FunctionDefinition","parameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"value","nameLocation":"20447:5:12","nodeType":"VariableDeclaration","scope":5267,"src":"20440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5243,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:12"},"returnParameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:12","nodeType":"VariableDeclaration","scope":5267,"src":"20477:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5246,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:12"},"scope":5958,"src":"20422:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"21043:150:12","statements":[{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"21053:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"21073:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5276,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:12","typeDescriptions":{}}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5281,"nodeType":"ExpressionStatement","src":"21053:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"21093:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"21107:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5291,"nodeType":"IfStatement","src":"21089:98:12","trueBody":{"id":5290,"nodeType":"Block","src":"21114:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"21170:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5285,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"21135:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5289,"nodeType":"RevertStatement","src":"21128:48:12"}]}}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"20652:312:12","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:12","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"value","nameLocation":"20994:5:12","nodeType":"VariableDeclaration","scope":5293,"src":"20987:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5269,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:12"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:12","nodeType":"VariableDeclaration","scope":5293,"src":"21024:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5272,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:12"},"scope":5958,"src":"20969:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5318,"nodeType":"Block","src":"21590:150:12","statements":[{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"21600:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"21620:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5302,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:12","typeDescriptions":{}}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5307,"nodeType":"ExpressionStatement","src":"21600:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"21640:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"21654:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5317,"nodeType":"IfStatement","src":"21636:98:12","trueBody":{"id":5316,"nodeType":"Block","src":"21661:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"21717:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5311,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"21682:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5315,"nodeType":"RevertStatement","src":"21675:48:12"}]}}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"21199:312:12","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5319,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:12","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"value","nameLocation":"21541:5:12","nodeType":"VariableDeclaration","scope":5319,"src":"21534:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5295,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:12"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:12","nodeType":"VariableDeclaration","scope":5319,"src":"21571:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5298,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:12"},"scope":5958,"src":"21516:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5344,"nodeType":"Block","src":"22137:150:12","statements":[{"expression":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"22147:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"22167:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5328,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:12","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5333,"nodeType":"ExpressionStatement","src":"22147:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"22187:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"22201:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5343,"nodeType":"IfStatement","src":"22183:98:12","trueBody":{"id":5342,"nodeType":"Block","src":"22208:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"22264:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5337,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"22229:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5341,"nodeType":"RevertStatement","src":"22222:48:12"}]}}]},"documentation":{"id":5320,"nodeType":"StructuredDocumentation","src":"21746:312:12","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5345,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:12","nodeType":"FunctionDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"value","nameLocation":"22088:5:12","nodeType":"VariableDeclaration","scope":5345,"src":"22081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5321,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:12"},"returnParameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:12","nodeType":"VariableDeclaration","scope":5345,"src":"22118:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5324,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:12"},"scope":5958,"src":"22063:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"22684:150:12","statements":[{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"22694:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"22714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5354,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:12","typeDescriptions":{}}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5359,"nodeType":"ExpressionStatement","src":"22694:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"22734:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"22748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5369,"nodeType":"IfStatement","src":"22730:98:12","trueBody":{"id":5368,"nodeType":"Block","src":"22755:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"22811:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5363,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"22776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"RevertStatement","src":"22769:48:12"}]}}]},"documentation":{"id":5346,"nodeType":"StructuredDocumentation","src":"22293:312:12","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:12","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"value","nameLocation":"22635:5:12","nodeType":"VariableDeclaration","scope":5371,"src":"22628:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5347,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:12"},"returnParameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:12","nodeType":"VariableDeclaration","scope":5371,"src":"22665:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5350,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:12"},"scope":5958,"src":"22610:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5396,"nodeType":"Block","src":"23231:150:12","statements":[{"expression":{"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"23241:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"23261:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5380,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:12","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5385,"nodeType":"ExpressionStatement","src":"23241:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"23281:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"23295:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5395,"nodeType":"IfStatement","src":"23277:98:12","trueBody":{"id":5394,"nodeType":"Block","src":"23302:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"23358:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5389,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"23323:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5393,"nodeType":"RevertStatement","src":"23316:48:12"}]}}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"22840:312:12","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5397,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:12","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"23182:5:12","nodeType":"VariableDeclaration","scope":5397,"src":"23175:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5373,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:12"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:12","nodeType":"VariableDeclaration","scope":5397,"src":"23212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5376,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:12"},"scope":5958,"src":"23157:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5422,"nodeType":"Block","src":"23778:150:12","statements":[{"expression":{"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"23788:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"23808:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5406,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:12","typeDescriptions":{}}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5411,"nodeType":"ExpressionStatement","src":"23788:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"23828:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"23842:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5421,"nodeType":"IfStatement","src":"23824:98:12","trueBody":{"id":5420,"nodeType":"Block","src":"23849:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"23905:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5415,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"23870:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5419,"nodeType":"RevertStatement","src":"23863:48:12"}]}}]},"documentation":{"id":5398,"nodeType":"StructuredDocumentation","src":"23387:312:12","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5423,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:12","nodeType":"FunctionDefinition","parameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"value","nameLocation":"23729:5:12","nodeType":"VariableDeclaration","scope":5423,"src":"23722:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5399,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:12"},"returnParameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:12","nodeType":"VariableDeclaration","scope":5423,"src":"23759:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5402,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:12"},"scope":5958,"src":"23704:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"24325:150:12","statements":[{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"24335:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"24355:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5432,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:12","typeDescriptions":{}}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5437,"nodeType":"ExpressionStatement","src":"24335:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5438,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"24375:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"24389:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"24371:98:12","trueBody":{"id":5446,"nodeType":"Block","src":"24396:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"24452:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5441,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"24417:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5445,"nodeType":"RevertStatement","src":"24410:48:12"}]}}]},"documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"23934:312:12","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:12","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"value","nameLocation":"24276:5:12","nodeType":"VariableDeclaration","scope":5449,"src":"24269:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5425,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:12"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:12","nodeType":"VariableDeclaration","scope":5449,"src":"24306:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5428,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:12"},"scope":5958,"src":"24251:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5474,"nodeType":"Block","src":"24872:150:12","statements":[{"expression":{"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"24882:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"24902:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5458,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:12","typeDescriptions":{}}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5463,"nodeType":"ExpressionStatement","src":"24882:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"24922:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"24936:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5473,"nodeType":"IfStatement","src":"24918:98:12","trueBody":{"id":5472,"nodeType":"Block","src":"24943:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"24999:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5467,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"24964:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"RevertStatement","src":"24957:48:12"}]}}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"24481:312:12","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:12","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"value","nameLocation":"24823:5:12","nodeType":"VariableDeclaration","scope":5475,"src":"24816:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5451,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:12"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:12","nodeType":"VariableDeclaration","scope":5475,"src":"24853:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5454,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:12"},"scope":5958,"src":"24798:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5500,"nodeType":"Block","src":"25419:150:12","statements":[{"expression":{"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"25429:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"25449:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5484,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:12","typeDescriptions":{}}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5489,"nodeType":"ExpressionStatement","src":"25429:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"25469:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"25483:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5499,"nodeType":"IfStatement","src":"25465:98:12","trueBody":{"id":5498,"nodeType":"Block","src":"25490:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"25546:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5493,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"25511:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5497,"nodeType":"RevertStatement","src":"25504:48:12"}]}}]},"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"25028:312:12","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5501,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:12","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"value","nameLocation":"25370:5:12","nodeType":"VariableDeclaration","scope":5501,"src":"25363:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5477,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:12"},"returnParameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:12","nodeType":"VariableDeclaration","scope":5501,"src":"25400:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5480,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:12"},"scope":5958,"src":"25345:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"25966:150:12","statements":[{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"25976:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"25996:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5510,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:12","typeDescriptions":{}}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5515,"nodeType":"ExpressionStatement","src":"25976:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"26016:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26030:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5525,"nodeType":"IfStatement","src":"26012:98:12","trueBody":{"id":5524,"nodeType":"Block","src":"26037:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26093:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5519,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"26058:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5523,"nodeType":"RevertStatement","src":"26051:48:12"}]}}]},"documentation":{"id":5502,"nodeType":"StructuredDocumentation","src":"25575:312:12","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:12","nodeType":"FunctionDefinition","parameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"value","nameLocation":"25917:5:12","nodeType":"VariableDeclaration","scope":5527,"src":"25910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5503,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:12"},"returnParameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:12","nodeType":"VariableDeclaration","scope":5527,"src":"25947:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5506,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:12"},"scope":5958,"src":"25892:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"26513:150:12","statements":[{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"26523:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"26543:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5536,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:12","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5541,"nodeType":"ExpressionStatement","src":"26523:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"26563:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"26577:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5551,"nodeType":"IfStatement","src":"26559:98:12","trueBody":{"id":5550,"nodeType":"Block","src":"26584:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"26640:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5545,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"26605:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5549,"nodeType":"RevertStatement","src":"26598:48:12"}]}}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"26122:312:12","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:12","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"26464:5:12","nodeType":"VariableDeclaration","scope":5553,"src":"26457:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5529,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:12"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:12","nodeType":"VariableDeclaration","scope":5553,"src":"26494:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5532,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:12"},"scope":5958,"src":"26439:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5578,"nodeType":"Block","src":"27060:150:12","statements":[{"expression":{"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"27070:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"27090:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5562,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:12","typeDescriptions":{}}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5567,"nodeType":"ExpressionStatement","src":"27070:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5568,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"27110:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"27124:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"27106:98:12","trueBody":{"id":5576,"nodeType":"Block","src":"27131:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"27187:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5571,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"27152:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5575,"nodeType":"RevertStatement","src":"27145:48:12"}]}}]},"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"26669:312:12","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:12","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"value","nameLocation":"27011:5:12","nodeType":"VariableDeclaration","scope":5579,"src":"27004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5555,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:12"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:12","nodeType":"VariableDeclaration","scope":5579,"src":"27041:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5558,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:12"},"scope":5958,"src":"26986:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5604,"nodeType":"Block","src":"27607:150:12","statements":[{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"27617:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"27637:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5588,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:12","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5593,"nodeType":"ExpressionStatement","src":"27617:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"27657:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"27671:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5603,"nodeType":"IfStatement","src":"27653:98:12","trueBody":{"id":5602,"nodeType":"Block","src":"27678:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"27734:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5597,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"27699:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5601,"nodeType":"RevertStatement","src":"27692:48:12"}]}}]},"documentation":{"id":5580,"nodeType":"StructuredDocumentation","src":"27216:312:12","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:12","nodeType":"FunctionDefinition","parameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"value","nameLocation":"27558:5:12","nodeType":"VariableDeclaration","scope":5605,"src":"27551:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5581,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:12"},"returnParameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:12","nodeType":"VariableDeclaration","scope":5605,"src":"27588:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5584,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:12"},"scope":5958,"src":"27533:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5630,"nodeType":"Block","src":"28147:148:12","statements":[{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"28157:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"28176:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5614,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:12","typeDescriptions":{}}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5619,"nodeType":"ExpressionStatement","src":"28157:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"28196:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"28210:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"28192:97:12","trueBody":{"id":5628,"nodeType":"Block","src":"28217:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"28272:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5623,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"28238:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5627,"nodeType":"RevertStatement","src":"28231:47:12"}]}}]},"documentation":{"id":5606,"nodeType":"StructuredDocumentation","src":"27763:307:12","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:12","nodeType":"FunctionDefinition","parameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"value","nameLocation":"28099:5:12","nodeType":"VariableDeclaration","scope":5631,"src":"28092:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5607,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:12"},"returnParameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:12","nodeType":"VariableDeclaration","scope":5631,"src":"28129:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5610,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:12"},"scope":5958,"src":"28075:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5656,"nodeType":"Block","src":"28685:148:12","statements":[{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"28695:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"28714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5640,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:12","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5645,"nodeType":"ExpressionStatement","src":"28695:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"28734:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"28748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5655,"nodeType":"IfStatement","src":"28730:97:12","trueBody":{"id":5654,"nodeType":"Block","src":"28755:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"28810:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5649,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"28776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5653,"nodeType":"RevertStatement","src":"28769:47:12"}]}}]},"documentation":{"id":5632,"nodeType":"StructuredDocumentation","src":"28301:307:12","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:12","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"value","nameLocation":"28637:5:12","nodeType":"VariableDeclaration","scope":5657,"src":"28630:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5633,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:12"},"returnParameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:12","nodeType":"VariableDeclaration","scope":5657,"src":"28667:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5636,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:12"},"scope":5958,"src":"28613:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5682,"nodeType":"Block","src":"29223:148:12","statements":[{"expression":{"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"29233:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"29252:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5666,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:12","typeDescriptions":{}}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5671,"nodeType":"ExpressionStatement","src":"29233:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"29272:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"29286:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5681,"nodeType":"IfStatement","src":"29268:97:12","trueBody":{"id":5680,"nodeType":"Block","src":"29293:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"29348:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5675,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"29314:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5679,"nodeType":"RevertStatement","src":"29307:47:12"}]}}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"28839:307:12","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5683,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:12","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"29175:5:12","nodeType":"VariableDeclaration","scope":5683,"src":"29168:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5659,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:12"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:12","nodeType":"VariableDeclaration","scope":5683,"src":"29205:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5662,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:12"},"scope":5958,"src":"29151:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5708,"nodeType":"Block","src":"29761:148:12","statements":[{"expression":{"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"29771:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"29790:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5692,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:12","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5697,"nodeType":"ExpressionStatement","src":"29771:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"29810:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"29824:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5707,"nodeType":"IfStatement","src":"29806:97:12","trueBody":{"id":5706,"nodeType":"Block","src":"29831:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"29886:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5701,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"29852:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5705,"nodeType":"RevertStatement","src":"29845:47:12"}]}}]},"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"29377:307:12","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5709,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:12","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"value","nameLocation":"29713:5:12","nodeType":"VariableDeclaration","scope":5709,"src":"29706:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5685,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:12"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:12","nodeType":"VariableDeclaration","scope":5709,"src":"29743:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5688,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:12"},"scope":5958,"src":"29689:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"30299:148:12","statements":[{"expression":{"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5717,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"30309:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"30328:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5718,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:12","typeDescriptions":{}}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5723,"nodeType":"ExpressionStatement","src":"30309:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"30348:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5733,"nodeType":"IfStatement","src":"30344:97:12","trueBody":{"id":5732,"nodeType":"Block","src":"30369:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"30424:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5727,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"30390:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5731,"nodeType":"RevertStatement","src":"30383:47:12"}]}}]},"documentation":{"id":5710,"nodeType":"StructuredDocumentation","src":"29915:307:12","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:12","nodeType":"FunctionDefinition","parameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"value","nameLocation":"30251:5:12","nodeType":"VariableDeclaration","scope":5735,"src":"30244:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5711,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:12"},"returnParameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:12","nodeType":"VariableDeclaration","scope":5735,"src":"30281:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5714,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:12"},"scope":5958,"src":"30227:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5760,"nodeType":"Block","src":"30837:148:12","statements":[{"expression":{"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"30847:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"30866:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5744,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:12","typeDescriptions":{}}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5749,"nodeType":"ExpressionStatement","src":"30847:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"30886:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"30900:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5759,"nodeType":"IfStatement","src":"30882:97:12","trueBody":{"id":5758,"nodeType":"Block","src":"30907:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"30962:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5753,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"30928:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5757,"nodeType":"RevertStatement","src":"30921:47:12"}]}}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"30453:307:12","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5761,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:12","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"30789:5:12","nodeType":"VariableDeclaration","scope":5761,"src":"30782:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5737,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:12"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:12","nodeType":"VariableDeclaration","scope":5761,"src":"30819:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5740,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:12"},"scope":5958,"src":"30765:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"31375:148:12","statements":[{"expression":{"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"31385:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"31404:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5770,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:12","typeDescriptions":{}}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5775,"nodeType":"ExpressionStatement","src":"31385:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"31424:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"31438:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"31420:97:12","trueBody":{"id":5784,"nodeType":"Block","src":"31445:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"31500:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5779,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"31466:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"RevertStatement","src":"31459:47:12"}]}}]},"documentation":{"id":5762,"nodeType":"StructuredDocumentation","src":"30991:307:12","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:12","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"value","nameLocation":"31327:5:12","nodeType":"VariableDeclaration","scope":5787,"src":"31320:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5763,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:12"},"returnParameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:12","nodeType":"VariableDeclaration","scope":5787,"src":"31357:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5766,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:12"},"scope":5958,"src":"31303:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"31913:148:12","statements":[{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5795,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"31923:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"31942:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5796,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:12","typeDescriptions":{}}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5801,"nodeType":"ExpressionStatement","src":"31923:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"31962:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"31976:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5811,"nodeType":"IfStatement","src":"31958:97:12","trueBody":{"id":5810,"nodeType":"Block","src":"31983:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"32038:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5805,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"32004:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5809,"nodeType":"RevertStatement","src":"31997:47:12"}]}}]},"documentation":{"id":5788,"nodeType":"StructuredDocumentation","src":"31529:307:12","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:12","nodeType":"FunctionDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"value","nameLocation":"31865:5:12","nodeType":"VariableDeclaration","scope":5813,"src":"31858:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5789,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:12"},"returnParameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:12","nodeType":"VariableDeclaration","scope":5813,"src":"31895:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5792,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:12"},"scope":5958,"src":"31841:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5838,"nodeType":"Block","src":"32451:148:12","statements":[{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5821,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"32461:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"32480:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5822,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:12","typeDescriptions":{}}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5827,"nodeType":"ExpressionStatement","src":"32461:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"32500:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"32514:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"32496:97:12","trueBody":{"id":5836,"nodeType":"Block","src":"32521:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"32576:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5831,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"32542:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"RevertStatement","src":"32535:47:12"}]}}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"32067:307:12","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5839,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:12","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"value","nameLocation":"32403:5:12","nodeType":"VariableDeclaration","scope":5839,"src":"32396:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5815,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:12"},"returnParameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:12","nodeType":"VariableDeclaration","scope":5839,"src":"32433:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5818,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:12"},"scope":5958,"src":"32379:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5864,"nodeType":"Block","src":"32989:148:12","statements":[{"expression":{"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5847,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"32999:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"33018:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5848,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:12","typeDescriptions":{}}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5853,"nodeType":"ExpressionStatement","src":"32999:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"33038:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"33052:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5863,"nodeType":"IfStatement","src":"33034:97:12","trueBody":{"id":5862,"nodeType":"Block","src":"33059:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"33114:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5857,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"33080:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5861,"nodeType":"RevertStatement","src":"33073:47:12"}]}}]},"documentation":{"id":5840,"nodeType":"StructuredDocumentation","src":"32605:307:12","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5865,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:12","nodeType":"FunctionDefinition","parameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"value","nameLocation":"32941:5:12","nodeType":"VariableDeclaration","scope":5865,"src":"32934:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5841,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:12"},"returnParameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:12","nodeType":"VariableDeclaration","scope":5865,"src":"32971:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5844,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:12"},"scope":5958,"src":"32917:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"33527:148:12","statements":[{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"33537:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"33556:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5874,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:12","typeDescriptions":{}}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5879,"nodeType":"ExpressionStatement","src":"33537:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"33576:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"33590:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5889,"nodeType":"IfStatement","src":"33572:97:12","trueBody":{"id":5888,"nodeType":"Block","src":"33597:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"33652:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5883,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"33618:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5887,"nodeType":"RevertStatement","src":"33611:47:12"}]}}]},"documentation":{"id":5866,"nodeType":"StructuredDocumentation","src":"33143:307:12","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:12","nodeType":"FunctionDefinition","parameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"value","nameLocation":"33479:5:12","nodeType":"VariableDeclaration","scope":5891,"src":"33472:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:12"},"returnParameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:12","nodeType":"VariableDeclaration","scope":5891,"src":"33509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5870,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:12"},"scope":5958,"src":"33455:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5916,"nodeType":"Block","src":"34058:146:12","statements":[{"expression":{"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5899,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"34068:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"34086:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5900,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:12","typeDescriptions":{}}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5905,"nodeType":"ExpressionStatement","src":"34068:24:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"34106:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"34120:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5915,"nodeType":"IfStatement","src":"34102:96:12","trueBody":{"id":5914,"nodeType":"Block","src":"34127:71:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"34181:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5909,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"34148:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5913,"nodeType":"RevertStatement","src":"34141:46:12"}]}}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"33681:302:12","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5917,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:12","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"34011:5:12","nodeType":"VariableDeclaration","scope":5917,"src":"34004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5893,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:12"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:12","nodeType":"VariableDeclaration","scope":5917,"src":"34041:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5896,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:12"},"scope":5958,"src":"33988:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"34444:250:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"34557:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5929,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:12","memberName":"max","nodeType":"MemberAccess","src":"34573:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:12","typeDescriptions":{}}},"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"34553:105:12","trueBody":{"id":5939,"nodeType":"Block","src":"34592:66:12","statements":[{"errorCall":{"arguments":[{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"34641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5935,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"34613:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"34606:41:12"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"34681:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5941,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:12","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5924,"id":5945,"nodeType":"Return","src":"34667:20:12"}]},"documentation":{"id":5918,"nodeType":"StructuredDocumentation","src":"34210:165:12","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:12","nodeType":"FunctionDefinition","parameters":{"id":5921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"value","nameLocation":"34406:5:12","nodeType":"VariableDeclaration","scope":5947,"src":"34398:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:12"},"returnParameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"34436:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5922,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:12"},"scope":5958,"src":"34380:314:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5956,"nodeType":"Block","src":"34853:87:12","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:12","statements":[{"nodeType":"YulAssignment","src":"34902:22:12","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:12"},"nodeType":"YulFunctionCall","src":"34914:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:12"},"nodeType":"YulFunctionCall","src":"34907:17:12"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5950,"isOffset":false,"isSlot":false,"src":"34921:1:12","valueSize":1},{"declaration":5953,"isOffset":false,"isSlot":false,"src":"34902:1:12","valueSize":1}],"flags":["memory-safe"],"id":5955,"nodeType":"InlineAssembly","src":"34863:71:12"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"34700:90:12","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:12","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"b","nameLocation":"34816:1:12","nodeType":"VariableDeclaration","scope":5957,"src":"34811:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5949,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:12"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"u","nameLocation":"34850:1:12","nodeType":"VariableDeclaration","scope":5957,"src":"34842:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:12"},"scope":5958,"src":"34795:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5959,"src":"769:34173:12","usedErrors":[4203,4208,4215,4220],"usedEvents":[]}],"src":"192:34751:12"},"id":12},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5958],"SignedMath":[6102]},"id":6103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5960,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5962,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6103,"sourceUnit":5959,"src":"135:40:13","symbolAliases":[{"foreign":{"id":5961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"143:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5963,"nodeType":"StructuredDocumentation","src":"177:80:13","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6102,"linearizedBaseContracts":[6102],"name":"SignedMath","nameLocation":"266:10:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":5992,"nodeType":"Block","src":"746:215:13","statements":[{"id":5991,"nodeType":"UncheckedBlock","src":"756:199:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"894:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"900:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"904:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5984,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"932:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5982,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"916:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5958_$","typeString":"type(library SafeCast)"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5957,"src":"916:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5980,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:13","typeDescriptions":{}}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5974,"id":5990,"nodeType":"Return","src":"887:57:13"}]}]},"documentation":{"id":5964,"nodeType":"StructuredDocumentation","src":"283:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:13","nodeType":"FunctionDefinition","parameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"condition","nameLocation":"684:9:13","nodeType":"VariableDeclaration","scope":5993,"src":"679:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5965,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5968,"mutability":"mutable","name":"a","nameLocation":"702:1:13","nodeType":"VariableDeclaration","scope":5993,"src":"695:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5967,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5970,"mutability":"mutable","name":"b","nameLocation":"712:1:13","nodeType":"VariableDeclaration","scope":5993,"src":"705:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5969,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:13"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5993,"src":"738:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5972,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:13"},"scope":6102,"src":"662:299:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6011,"nodeType":"Block","src":"1102:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"1127:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"1131:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"1134:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"1137:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6003,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"1119:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6002,"id":6010,"nodeType":"Return","src":"1112:27:13"}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"967:66:13","text":" @dev Returns the largest of two signed numbers."},"id":6012,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:13","nodeType":"FunctionDefinition","parameters":{"id":5999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"a","nameLocation":"1058:1:13","nodeType":"VariableDeclaration","scope":6012,"src":"1051:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5995,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5998,"mutability":"mutable","name":"b","nameLocation":"1068:1:13","nodeType":"VariableDeclaration","scope":6012,"src":"1061:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5997,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:13"},"returnParameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6012,"src":"1094:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6000,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:13"},"scope":6102,"src":"1038:108:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"1288:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"1313:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6024,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"1317:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"1320:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"1323:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6022,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"1305:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6021,"id":6029,"nodeType":"Return","src":"1298:27:13"}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"1152:67:13","text":" @dev Returns the smallest of two signed numbers."},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:13","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"a","nameLocation":"1244:1:13","nodeType":"VariableDeclaration","scope":6031,"src":"1237:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6014,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6017,"mutability":"mutable","name":"b","nameLocation":"1254:1:13","nodeType":"VariableDeclaration","scope":6031,"src":"1247:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6016,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:13"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"1280:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6019,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:13"},"scope":6102,"src":"1224:108:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6074,"nodeType":"Block","src":"1537:162:13","statements":[{"assignments":[6042],"declarations":[{"constant":false,"id":6042,"mutability":"mutable","name":"x","nameLocation":"1606:1:13","nodeType":"VariableDeclaration","scope":6074,"src":"1599:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6041,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6055,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1611:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"1615:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1622:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"1626:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:13"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6056,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"1651:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6061,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"1671:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:13","typeDescriptions":{}}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6057,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:13","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1685:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"1689:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6040,"id":6073,"nodeType":"Return","src":"1644:48:13"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"1338:126:13","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6075,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:13","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"a","nameLocation":"1493:1:13","nodeType":"VariableDeclaration","scope":6075,"src":"1486:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6033,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6036,"mutability":"mutable","name":"b","nameLocation":"1503:1:13","nodeType":"VariableDeclaration","scope":6075,"src":"1496:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6035,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:13"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6075,"src":"1529:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6038,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:13"},"scope":6102,"src":"1469:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6100,"nodeType":"Block","src":"1843:767:13","statements":[{"id":6099,"nodeType":"UncheckedBlock","src":"1853:751:13","statements":[{"assignments":[6084],"declarations":[{"constant":false,"id":6084,"mutability":"mutable","name":"mask","nameLocation":"2424:4:13","nodeType":"VariableDeclaration","scope":6099,"src":"2417:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6083,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6088,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"2431:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6091,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"2576:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6092,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"2580:4:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6095,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"2588:4:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:13","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6082,"id":6098,"nodeType":"Return","src":"2560:33:13"}]}]},"documentation":{"id":6076,"nodeType":"StructuredDocumentation","src":"1705:78:13","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6101,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:13","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"n","nameLocation":"1808:1:13","nodeType":"VariableDeclaration","scope":6101,"src":"1801:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6077,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:13"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6101,"src":"1834:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:13"},"scope":6102,"src":"1788:822:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6103,"src":"258:2354:13","usedErrors":[],"usedEvents":[]}],"src":"109:2504:13"},"id":13},"contracts/MinimalForwarder.sol":{"ast":{"absolutePath":"contracts/MinimalForwarder.sol","exportedSymbols":{"ECDSA":[2286],"EIP712":[2513],"IERC5267":[172],"MessageHashUtils":[2587],"MinimalForwarder":[6273],"ShortString":[403],"ShortStrings":[614]},"id":6274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6274,"sourceUnit":2287,"src":"141:62:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":6106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6274,"sourceUnit":2514,"src":"205:63:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6108,"name":"EIP712","nameLocations":["855:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"855:6:14"},"id":6109,"nodeType":"InheritanceSpecifier","src":"855:6:14"}],"canonicalName":"MinimalForwarder","contractDependencies":[],"contractKind":"contract","documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"272:552:14","text":" @dev Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}.\n MinimalForwarder is mainly meant for testing, as it is missing features to be a good production-ready forwarder. This\n contract does not intend to have all the properties that are needed for a sound forwarding system. A fully\n functioning forwarding system with good properties requires more complexity. We suggest you look at other projects\n such as the GSN which do have the goal of building a system like that."},"fullyImplemented":true,"id":6273,"linearizedBaseContracts":[6273,2513,172],"name":"MinimalForwarder","nameLocation":"835:16:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6112,"libraryName":{"id":6110,"name":"ECDSA","nameLocations":["875:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"875:5:14"},"nodeType":"UsingForDirective","src":"869:24:14","typeName":{"id":6111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"885:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"MinimalForwarder.ForwardRequest","id":6125,"members":[{"constant":false,"id":6114,"mutability":"mutable","name":"from","nameLocation":"942:4:14","nodeType":"VariableDeclaration","scope":6125,"src":"934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6113,"name":"address","nodeType":"ElementaryTypeName","src":"934:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6116,"mutability":"mutable","name":"to","nameLocation":"965:2:14","nodeType":"VariableDeclaration","scope":6125,"src":"957:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6115,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"986:5:14","nodeType":"VariableDeclaration","scope":6125,"src":"978:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6120,"mutability":"mutable","name":"gas","nameLocation":"1010:3:14","nodeType":"VariableDeclaration","scope":6125,"src":"1002:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6122,"mutability":"mutable","name":"nonce","nameLocation":"1032:5:14","nodeType":"VariableDeclaration","scope":6125,"src":"1024:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6124,"mutability":"mutable","name":"data","nameLocation":"1054:4:14","nodeType":"VariableDeclaration","scope":6125,"src":"1048:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6123,"name":"bytes","nodeType":"ElementaryTypeName","src":"1048:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ForwardRequest","nameLocation":"908:14:14","nodeType":"StructDefinition","scope":6273,"src":"901:165:14","visibility":"public"},{"constant":true,"id":6130,"mutability":"constant","name":"_TYPEHASH","nameLocation":"1099:9:14","nodeType":"VariableDeclaration","scope":6273,"src":"1074:149:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1074:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c6279746573206461746129","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1130:92:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""},"value":"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_dd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data)\""}],"id":6127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1120:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1120:103:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6134,"mutability":"mutable","name":"_nonces","nameLocation":"1268:7:14","nodeType":"VariableDeclaration","scope":6273,"src":"1232:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6133,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6131,"name":"address","nodeType":"ElementaryTypeName","src":"1240:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1232:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":6141,"nodeType":"Block","src":"1334:2:14","statements":[]},"id":6142,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d696e696d616c466f72776172646572","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0923a39f515e9a8cebc9fb694b9abf7e4b8c3f7ab6f81b56eabdac504b08dc","typeString":"literal_string \"MinimalForwarder\""},"value":"MinimalForwarder"},{"hexValue":"302e302e31","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1325:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885","typeString":"literal_string \"0.0.1\""},"value":"0.0.1"}],"id":6139,"kind":"baseConstructorSpecifier","modifierName":{"id":6136,"name":"EIP712","nameLocations":["1298:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"1298:6:14"},"nodeType":"ModifierInvocation","src":"1298:35:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[],"src":"1295:2:14"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[],"src":"1334:0:14"},"scope":6273,"src":"1284:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6153,"nodeType":"Block","src":"1406:39:14","statements":[{"expression":{"baseExpression":{"id":6149,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"1424:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6151,"indexExpression":{"id":6150,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"1432:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1424:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6148,"id":6152,"nodeType":"Return","src":"1417:20:14"}]},"functionSelector":"2d0335ab","id":6154,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"1353:8:14","nodeType":"FunctionDefinition","parameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"from","nameLocation":"1370:4:14","nodeType":"VariableDeclaration","scope":6154,"src":"1362:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6143,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1361:14:14"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6154,"src":"1397:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1396:9:14"},"scope":6273,"src":"1344:101:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6205,"nodeType":"Block","src":"1551:269:14","statements":[{"assignments":[6165],"declarations":[{"constant":false,"id":6165,"mutability":"mutable","name":"signer","nameLocation":"1570:6:14","nodeType":"VariableDeclaration","scope":6205,"src":"1562:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6164,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6191,"initialValue":{"arguments":[{"id":6189,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"1732:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6170,"name":"_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"1631:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6171,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1642:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":6114,"src":"1642:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6173,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1652:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1656:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"1652:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6175,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1660:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1664:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":6118,"src":"1660:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6177,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1671:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:3:14","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":6120,"src":"1671:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6179,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1680:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1684:5:14","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6122,"src":"1680:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":6182,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1701:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1705:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":6124,"src":"1701:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6181,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1691:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6168,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1620:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1624:6:14","memberName":"encode","nodeType":"MemberAccess","src":"1620:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1620:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6167,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1610:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:102:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6166,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1579:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:144:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1724:7:14","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2042,"src":"1579:152:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:163:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1562:180:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6192,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"1760:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6195,"indexExpression":{"expression":{"id":6193,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1768:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1772:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":6114,"src":"1768:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1760:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6196,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1781:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1785:5:14","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6122,"src":"1781:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1760:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"1794:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6200,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1804:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1808:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":6114,"src":"1804:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1794:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1760:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6163,"id":6204,"nodeType":"Return","src":"1753:59:14"}]},"functionSelector":"bf5d3bdb","id":6206,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1462:6:14","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"req","nameLocation":"1493:3:14","nodeType":"VariableDeclaration","scope":6206,"src":"1469:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest"},"typeName":{"id":6156,"nodeType":"UserDefinedTypeName","pathNode":{"id":6155,"name":"ForwardRequest","nameLocations":["1469:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":6125,"src":"1469:14:14"},"referencedDeclaration":6125,"src":"1469:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_storage_ptr","typeString":"struct MinimalForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":6159,"mutability":"mutable","name":"signature","nameLocation":"1513:9:14","nodeType":"VariableDeclaration","scope":6206,"src":"1498:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1498:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1468:55:14"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6206,"src":"1545:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6161,"name":"bool","nodeType":"ElementaryTypeName","src":"1545:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1544:6:14"},"scope":6273,"src":"1453:367:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6271,"nodeType":"Block","src":"1976:958:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":6220,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2002:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},{"id":6221,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"2007:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6219,"name":"verify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"1995:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequest_$6125_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (struct MinimalForwarder.ForwardRequest calldata,bytes calldata) view returns (bool)"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e696d616c466f727761726465723a207369676e617475726520646f6573206e6f74206d617463682072657175657374","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2019:52:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae","typeString":"literal_string \"MinimalForwarder: signature does not match request\""},"value":"MinimalForwarder: signature does not match request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae","typeString":"literal_string \"MinimalForwarder: signature does not match request\""}],"id":6218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1987:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6225,"nodeType":"ExpressionStatement","src":"1987:85:14"},{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6226,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"2083:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6229,"indexExpression":{"expression":{"id":6227,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2091:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2095:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":6114,"src":"2091:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2083:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6230,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2103:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2107:5:14","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6122,"src":"2103:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2103:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2083:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6235,"nodeType":"ExpressionStatement","src":"2083:33:14"},{"assignments":[6237,6239],"declarations":[{"constant":false,"id":6237,"mutability":"mutable","name":"success","nameLocation":"2135:7:14","nodeType":"VariableDeclaration","scope":6271,"src":"2130:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6236,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"returndata","nameLocation":"2157:10:14","nodeType":"VariableDeclaration","scope":6271,"src":"2144:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6238,"name":"bytes","nodeType":"ElementaryTypeName","src":"2144:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6256,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":6250,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2246:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2250:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":6124,"src":"2246:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":6252,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2256:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":6114,"src":"2256:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6248,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2229:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2233:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"2229:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2229:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":6240,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2171:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2175:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"2171:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:4:14","memberName":"call","nodeType":"MemberAccess","src":"2171:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas","value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6243,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2188:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:3:14","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":6120,"src":"2188:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6245,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2204:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2208:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":6118,"src":"2204:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2171:43:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:105:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2129:147:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6257,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2431:7:14","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6259,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2444:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest calldata"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2448:3:14","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":6120,"src":"2444:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3633","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2454:2:14","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"2444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2431:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6266,"nodeType":"IfStatement","src":"2427:459:14","trueBody":{"id":6265,"nodeType":"Block","src":"2458:428:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2832:43:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"2851:7:14"},"nodeType":"YulFunctionCall","src":"2851:9:14"},"nodeType":"YulExpressionStatement","src":"2851:9:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[],"id":6264,"nodeType":"InlineAssembly","src":"2823:52:14"}]}},{"expression":{"components":[{"id":6267,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"2906:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6268,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"2915:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2905:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6217,"id":6270,"nodeType":"Return","src":"2898:28:14"}]},"functionSelector":"47153f82","id":6272,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1837:7:14","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"req","nameLocation":"1869:3:14","nodeType":"VariableDeclaration","scope":6272,"src":"1845:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_calldata_ptr","typeString":"struct MinimalForwarder.ForwardRequest"},"typeName":{"id":6208,"nodeType":"UserDefinedTypeName","pathNode":{"id":6207,"name":"ForwardRequest","nameLocations":["1845:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":6125,"src":"1845:14:14"},"referencedDeclaration":6125,"src":"1845:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$6125_storage_ptr","typeString":"struct MinimalForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":6211,"mutability":"mutable","name":"signature","nameLocation":"1889:9:14","nodeType":"VariableDeclaration","scope":6272,"src":"1874:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6210,"name":"bytes","nodeType":"ElementaryTypeName","src":"1874:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1844:55:14"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"1951:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6213,"name":"bool","nodeType":"ElementaryTypeName","src":"1951:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"1957:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6215,"name":"bytes","nodeType":"ElementaryTypeName","src":"1957:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1950:20:14"},"scope":6273,"src":"1828:1106:14","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":6274,"src":"826:2111:14","usedErrors":[411,413,1949,1954,1959],"usedEvents":[152]}],"src":"114:2823:14"},"id":14},"contracts/Student.sol":{"ast":{"absolutePath":"contracts/Student.sol","exportedSymbols":{"Context":[345],"ERC2771Context":[315],"Ownable":[147],"StudentRegistry":[6467]},"id":6468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"@openzeppelin/contracts/metatx/ERC2771Context.sol","id":6276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6468,"sourceUnit":316,"src":"61:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6468,"sourceUnit":148,"src":"122:52:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6278,"name":"ERC2771Context","nameLocations":["206:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"206:14:15"},"id":6279,"nodeType":"InheritanceSpecifier","src":"206:14:15"},{"baseName":{"id":6280,"name":"Ownable","nameLocations":["222:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"222:7:15"},"id":6281,"nodeType":"InheritanceSpecifier","src":"222:7:15"}],"canonicalName":"StudentRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6467,"linearizedBaseContracts":[6467,147,315,345],"name":"StudentRegistry","nameLocation":"187:15:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StudentRegistry.Student","id":6286,"members":[{"constant":false,"id":6283,"mutability":"mutable","name":"studentID","nameLocation":"270:9:15","nodeType":"VariableDeclaration","scope":6286,"src":"263:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6282,"name":"string","nodeType":"ElementaryTypeName","src":"263:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6285,"mutability":"mutable","name":"registered","nameLocation":"295:10:15","nodeType":"VariableDeclaration","scope":6286,"src":"290:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6284,"name":"bool","nodeType":"ElementaryTypeName","src":"290:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Student","nameLocation":"244:7:15","nodeType":"StructDefinition","scope":6467,"src":"237:76:15","visibility":"public"},{"constant":false,"id":6291,"mutability":"mutable","name":"students","nameLocation":"357:8:15","nodeType":"VariableDeclaration","scope":6467,"src":"321:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student)"},"typeName":{"id":6290,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6287,"name":"address","nodeType":"ElementaryTypeName","src":"329:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"321:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6289,"nodeType":"UserDefinedTypeName","pathNode":{"id":6288,"name":"Student","nameLocations":["340:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6286,"src":"340:7:15"},"referencedDeclaration":6286,"src":"340:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage_ptr","typeString":"struct StudentRegistry.Student"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"c1b20826100814ba286ac576fe980df1dbbcef3d904bb81f3d69a0e8280dc114","id":6297,"name":"StudentRegistered","nameLocation":"380:17:15","nodeType":"EventDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"indexed":true,"mutability":"mutable","name":"student","nameLocation":"414:7:15","nodeType":"VariableDeclaration","scope":6297,"src":"398:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6292,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6295,"indexed":false,"mutability":"mutable","name":"studentID","nameLocation":"430:9:15","nodeType":"VariableDeclaration","scope":6297,"src":"423:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6294,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"397:43:15"},"src":"374:67:15"},{"anonymous":false,"eventSelector":"5d96587cd7638c0254288e0ebecb53200b69da0dd775bcc5be707492a811ed11","id":6303,"name":"StudentUpdated","nameLocation":"453:14:15","nodeType":"EventDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"indexed":true,"mutability":"mutable","name":"student","nameLocation":"484:7:15","nodeType":"VariableDeclaration","scope":6303,"src":"468:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6298,"name":"address","nodeType":"ElementaryTypeName","src":"468:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6301,"indexed":false,"mutability":"mutable","name":"newStudentID","nameLocation":"500:12:15","nodeType":"VariableDeclaration","scope":6303,"src":"493:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6300,"name":"string","nodeType":"ElementaryTypeName","src":"493:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"467:46:15"},"src":"447:67:15"},{"body":{"id":6315,"nodeType":"Block","src":"615:2:15","statements":[]},"id":6316,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6308,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"576:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6309,"kind":"baseConstructorSpecifier","modifierName":{"id":6307,"name":"ERC2771Context","nameLocations":["561:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"561:14:15"},"nodeType":"ModifierInvocation","src":"561:33:15"},{"arguments":[{"expression":{"id":6311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"603:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"607:6:15","memberName":"sender","nodeType":"MemberAccess","src":"603:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6313,"kind":"baseConstructorSpecifier","modifierName":{"id":6310,"name":"Ownable","nameLocations":["595:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"595:7:15"},"nodeType":"ModifierInvocation","src":"595:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"_trustedForwarder","nameLocation":"542:17:15","nodeType":"VariableDeclaration","scope":6316,"src":"534:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6304,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"533:27:15"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[],"src":"615:0:15"},"scope":6467,"src":"522:95:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6329,"nodeType":"Block","src":"650:96:15","statements":[{"expression":{"arguments":[{"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"669:34:15","subExpression":{"expression":{"baseExpression":{"id":6319,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"670:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6322,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6320,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[6440],"referencedDeclaration":6440,"src":"679:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"679:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"670:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"693:10:15","memberName":"registered","nodeType":"MemberAccess","referencedDeclaration":6285,"src":"670:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"705:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":6318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"661:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"ExpressionStatement","src":"661:65:15"},{"id":6328,"nodeType":"PlaceholderStatement","src":"737:1:15"}]},"id":6330,"name":"notRegistered","nameLocation":"634:13:15","nodeType":"ModifierDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[],"src":"647:2:15"},"src":"625:121:15","virtual":false,"visibility":"internal"},{"body":{"id":6364,"nodeType":"Block","src":"828:216:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6340,"name":"_studentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"853:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"847:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6338,"name":"bytes","nodeType":"ElementaryTypeName","src":"847:5:15","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"865:6:15","memberName":"length","nodeType":"MemberAccess","src":"847:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"847:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53747564656e742049442063616e6e6f7420626520656d707479","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"877:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf","typeString":"literal_string \"Student ID cannot be empty\""},"value":"Student ID cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf","typeString":"literal_string \"Student ID cannot be empty\""}],"id":6337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"839:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"839:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6347,"nodeType":"ExpressionStatement","src":"839:67:15"},{"expression":{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6348,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"927:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6351,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[6440],"referencedDeclaration":6440,"src":"936:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"927:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6353,"name":"_studentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"960:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"972:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6352,"name":"Student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Student_$6286_storage_ptr_$","typeString":"type(struct StudentRegistry.Student storage pointer)"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_memory_ptr","typeString":"struct StudentRegistry.Student memory"}},"src":"927:50:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6357,"nodeType":"ExpressionStatement","src":"927:50:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[6440],"referencedDeclaration":6440,"src":"1011:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1011:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6361,"name":"_studentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1025:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6358,"name":"StudentRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"993:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6363,"nodeType":"EmitStatement","src":"988:48:15"}]},"functionSelector":"71e17445","id":6365,"implemented":true,"kind":"function","modifiers":[{"id":6335,"kind":"modifierInvocation","modifierName":{"id":6334,"name":"notRegistered","nameLocations":["814:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":6330,"src":"814:13:15"},"nodeType":"ModifierInvocation","src":"814:13:15"}],"name":"registerStudent","nameLocation":"763:15:15","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"_studentID","nameLocation":"793:10:15","nodeType":"VariableDeclaration","scope":6365,"src":"779:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6331,"name":"string","nodeType":"ElementaryTypeName","src":"779:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"778:26:15"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[],"src":"828:0:15"},"scope":6467,"src":"754:290:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6405,"nodeType":"Block","src":"1148:296:15","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6375,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1167:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6377,"indexExpression":{"id":6376,"name":"_studentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"1176:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1167:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1193:10:15","memberName":"registered","nodeType":"MemberAccess","referencedDeclaration":6285,"src":"1167:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53747564656e74206e6f7420666f756e64","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1205:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","typeString":"literal_string \"Student not found\""},"value":"Student not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","typeString":"literal_string \"Student not found\""}],"id":6374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1159:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6381,"nodeType":"ExpressionStatement","src":"1159:66:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6385,"name":"_newStudentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"1250:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1244:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6383,"name":"bytes","nodeType":"ElementaryTypeName","src":"1244:5:15","typeDescriptions":{}}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1244:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1265:6:15","memberName":"length","nodeType":"MemberAccess","src":"1244:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1244:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e65772053747564656e742049442063616e6e6f7420626520656d707479","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1277:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef","typeString":"literal_string \"New Student ID cannot be empty\""},"value":"New Student ID cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef","typeString":"literal_string \"New Student ID cannot be empty\""}],"id":6382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1236:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:74:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"ExpressionStatement","src":"1236:74:15"},{"expression":{"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6393,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1323:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6395,"indexExpression":{"id":6394,"name":"_studentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"1332:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1323:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1349:9:15","memberName":"studentID","nodeType":"MemberAccess","referencedDeclaration":6283,"src":"1323:35:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6397,"name":"_newStudentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"1361:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1323:51:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6399,"nodeType":"ExpressionStatement","src":"1323:51:15"},{"eventCall":{"arguments":[{"id":6401,"name":"_studentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"1405:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6402,"name":"_newStudentID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"1422:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6400,"name":"StudentUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"1390:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1390:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6404,"nodeType":"EmitStatement","src":"1385:51:15"}]},"functionSelector":"30205624","id":6406,"implemented":true,"kind":"function","modifiers":[{"id":6372,"kind":"modifierInvocation","modifierName":{"id":6371,"name":"onlyOwner","nameLocations":["1138:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1138:9:15"},"nodeType":"ModifierInvocation","src":"1138:9:15"}],"name":"updateStudent","nameLocation":"1061:13:15","nodeType":"FunctionDefinition","parameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"_studentAddress","nameLocation":"1083:15:15","nodeType":"VariableDeclaration","scope":6406,"src":"1075:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6366,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6369,"mutability":"mutable","name":"_newStudentID","nameLocation":"1114:13:15","nodeType":"VariableDeclaration","scope":6406,"src":"1100:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6368,"name":"string","nodeType":"ElementaryTypeName","src":"1100:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1074:54:15"},"returnParameters":{"id":6373,"nodeType":"ParameterList","parameters":[],"src":"1148:0:15"},"scope":6467,"src":"1052:392:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6426,"nodeType":"Block","src":"1535:138:15","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6414,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1554:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6416,"indexExpression":{"id":6415,"name":"_studentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"1563:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1554:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1580:10:15","memberName":"registered","nodeType":"MemberAccess","referencedDeclaration":6285,"src":"1554:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53747564656e74206e6f7420666f756e64","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1592:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","typeString":"literal_string \"Student not found\""},"value":"Student not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","typeString":"literal_string \"Student not found\""}],"id":6413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1546:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6420,"nodeType":"ExpressionStatement","src":"1546:66:15"},{"expression":{"expression":{"baseExpression":{"id":6421,"name":"students","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1630:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Student_$6286_storage_$","typeString":"mapping(address => struct StudentRegistry.Student storage ref)"}},"id":6423,"indexExpression":{"id":6422,"name":"_studentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"1639:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1630:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Student_$6286_storage","typeString":"struct StudentRegistry.Student storage ref"}},"id":6424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1656:9:15","memberName":"studentID","nodeType":"MemberAccess","referencedDeclaration":6283,"src":"1630:35:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6412,"id":6425,"nodeType":"Return","src":"1623:42:15"}]},"functionSelector":"6b7b44d7","id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"getStudent","nameLocation":"1461:10:15","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"_studentAddress","nameLocation":"1480:15:15","nodeType":"VariableDeclaration","scope":6427,"src":"1472:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6407,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1471:25:15"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6427,"src":"1520:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6410,"name":"string","nodeType":"ElementaryTypeName","src":"1520:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1519:15:15"},"scope":6467,"src":"1452:221:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[263,327],"body":{"id":6439,"nodeType":"Block","src":"1776:53:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6435,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1794:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$315_$","typeString":"type(contract ERC2771Context)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1809:10:15","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":263,"src":"1794:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6434,"id":6438,"nodeType":"Return","src":"1787:34:15"}]},"id":6440,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1690:10:15","nodeType":"FunctionDefinition","overrides":{"id":6431,"nodeType":"OverrideSpecifier","overrides":[{"id":6429,"name":"Context","nameLocations":["1726:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":345,"src":"1726:7:15"},{"id":6430,"name":"ERC2771Context","nameLocations":["1735:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1735:14:15"}],"src":"1717:33:15"},"parameters":{"id":6428,"nodeType":"ParameterList","parameters":[],"src":"1700:2:15"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"sender","nameLocation":"1768:6:15","nodeType":"VariableDeclaration","scope":6440,"src":"1760:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6432,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1759:16:15"},"scope":6467,"src":"1681:148:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[304,336],"body":{"id":6452,"nodeType":"Block","src":"1930:51:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6448,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1948:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$315_$","typeString":"type(contract ERC2771Context)"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:8:15","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":304,"src":"1948:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6447,"id":6451,"nodeType":"Return","src":"1941:32:15"}]},"id":6453,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1846:8:15","nodeType":"FunctionDefinition","overrides":{"id":6444,"nodeType":"OverrideSpecifier","overrides":[{"id":6442,"name":"Context","nameLocations":["1880:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":345,"src":"1880:7:15"},{"id":6443,"name":"ERC2771Context","nameLocations":["1889:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1889:14:15"}],"src":"1871:33:15"},"parameters":{"id":6441,"nodeType":"ParameterList","parameters":[],"src":"1854:2:15"},"returnParameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6453,"src":"1914:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6445,"name":"bytes","nodeType":"ElementaryTypeName","src":"1914:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1913:16:15"},"scope":6467,"src":"1837:144:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[314,344],"body":{"id":6465,"nodeType":"Block","src":"2087:63:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6461,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2105:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$315_$","typeString":"type(contract ERC2771Context)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2120:20:15","memberName":"_contextSuffixLength","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2105:35:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6460,"id":6464,"nodeType":"Return","src":"2098:44:15"}]},"id":6466,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1998:20:15","nodeType":"FunctionDefinition","overrides":{"id":6457,"nodeType":"OverrideSpecifier","overrides":[{"id":6455,"name":"Context","nameLocations":["2044:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":345,"src":"2044:7:15"},{"id":6456,"name":"ERC2771Context","nameLocations":["2053:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"2053:14:15"}],"src":"2035:33:15"},"parameters":{"id":6454,"nodeType":"ParameterList","parameters":[],"src":"2018:2:15"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6466,"src":"2078:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2077:9:15"},"scope":6467,"src":"1989:161:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6468,"src":"178:1977:15","usedErrors":[13,18],"usedEvents":[24,6297,6303]}],"src":"33:2124:15"},"id":15}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ERC2771Context":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229dad1c21e0c8510b1531cf54c3713bb7b4a8f5f9dc4cd339a76e8551dbcc8864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP14 0xAD SHR 0x21 0xE0 0xC8 MLOAD SIGNEXTEND ISZERO BALANCE 0xCF SLOAD 0xC3 PUSH18 0x3BB7B4A8F5F9DC4CD339A76E8551DBCC8864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"521:3181:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229dad1c21e0c8510b1531cf54c3713bb7b4a8f5f9dc4cd339a76e8551dbcc8864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP14 0xAD SHR 0x21 0xE0 0xC8 MLOAD SIGNEXTEND ISZERO BALANCE 0xCF SLOAD 0xC3 PUSH18 0x3BB7B4A8F5F9DC4CD339A76E8551DBCC8864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"521:3181:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MinimalForwarder.sol":{"MinimalForwarder":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct MinimalForwarder.ForwardRequest","name":"req","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct MinimalForwarder.ForwardRequest","name":"req","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2383":{"entryPoint":null,"id":2383,"parameterSlots":2,"returnSlots":0},"@_6142":{"entryPoint":null,"id":6142,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_2430":{"entryPoint":397,"id":2430,"parameterSlots":0,"returnSlots":1},"@getStringSlot_715":{"entryPoint":599,"id":715,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_555":{"entryPoint":309,"id":555,"parameterSlots":2,"returnSlots":1},"@toShortString_457":{"entryPoint":490,"id":457,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1570,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1484,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1587,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1823,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":1870,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1859,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1680,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1088,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1550,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1474,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1518,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1049,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1909,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":923,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1243,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1697,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":788,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":714,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1181,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":667,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":620,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":963,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":1886,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":1741,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":804,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1021,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":817,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":973,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1016,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8813:16","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:16","statements":[{"nodeType":"YulAssignment","src":"77:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:16"},"nodeType":"YulFunctionCall","src":"87:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:16","type":""}],"src":"7:99:16"},{"body":{"nodeType":"YulBlock","src":"140:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:16"},"nodeType":"YulFunctionCall","src":"150:88:16"},"nodeType":"YulExpressionStatement","src":"150:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:16"},"nodeType":"YulFunctionCall","src":"247:15:16"},"nodeType":"YulExpressionStatement","src":"247:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:16"},"nodeType":"YulFunctionCall","src":"271:15:16"},"nodeType":"YulExpressionStatement","src":"271:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:16"},{"body":{"nodeType":"YulBlock","src":"326:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:16"},"nodeType":"YulFunctionCall","src":"336:88:16"},"nodeType":"YulExpressionStatement","src":"336:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:15:16"},"nodeType":"YulExpressionStatement","src":"433:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:16"},"nodeType":"YulFunctionCall","src":"457:15:16"},"nodeType":"YulExpressionStatement","src":"457:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:16"},{"body":{"nodeType":"YulBlock","src":"535:269:16","statements":[{"nodeType":"YulAssignment","src":"545:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:16"},"nodeType":"YulFunctionCall","src":"555:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:16"},"nodeType":"YulFunctionCall","src":"602:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:16","statements":[{"nodeType":"YulAssignment","src":"667:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:16"},"nodeType":"YulFunctionCall","src":"677:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:16"},"nodeType":"YulFunctionCall","src":"626:26:16"},"nodeType":"YulIf","src":"623:81:16"},{"body":{"nodeType":"YulBlock","src":"756:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:16"},"nodeType":"YulFunctionCall","src":"770:18:16"},"nodeType":"YulExpressionStatement","src":"770:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:16"},"nodeType":"YulFunctionCall","src":"740:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:16"},"nodeType":"YulFunctionCall","src":"717:38:16"},"nodeType":"YulIf","src":"714:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:16","type":""}],"src":"484:320:16"},{"body":{"nodeType":"YulBlock","src":"864:87:16","statements":[{"nodeType":"YulAssignment","src":"874:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:16"},"nodeType":"YulFunctionCall","src":"895:14:16"},"nodeType":"YulExpressionStatement","src":"895:14:16"},{"nodeType":"YulAssignment","src":"918:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:16"},"nodeType":"YulFunctionCall","src":"926:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:16","type":""}],"src":"810:141:16"},{"body":{"nodeType":"YulBlock","src":"1001:49:16","statements":[{"nodeType":"YulAssignment","src":"1011:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:16"},"nodeType":"YulFunctionCall","src":"1025:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:16"},"nodeType":"YulFunctionCall","src":"1021:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:16","type":""}],"src":"957:93:16"},{"body":{"nodeType":"YulBlock","src":"1109:54:16","statements":[{"nodeType":"YulAssignment","src":"1119:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:16"},"nodeType":"YulFunctionCall","src":"1140:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:16","type":""}],"src":"1056:107:16"},{"body":{"nodeType":"YulBlock","src":"1245:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:16"},"nodeType":"YulFunctionCall","src":"1272:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:16"},"nodeType":"YulFunctionCall","src":"1311:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:16","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:16"},"nodeType":"YulFunctionCall","src":"1429:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:16"}]},{"nodeType":"YulAssignment","src":"1477:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:16"},"nodeType":"YulFunctionCall","src":"1497:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:16"},"nodeType":"YulFunctionCall","src":"1486:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:16"}]},{"nodeType":"YulAssignment","src":"1516:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:16"},"nodeType":"YulFunctionCall","src":"1536:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:16"},"nodeType":"YulFunctionCall","src":"1526:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:16","type":""}],"src":"1169:393:16"},{"body":{"nodeType":"YulBlock","src":"1613:32:16","statements":[{"nodeType":"YulAssignment","src":"1623:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:16","type":""}],"src":"1568:77:16"},{"body":{"nodeType":"YulBlock","src":"1683:28:16","statements":[{"nodeType":"YulAssignment","src":"1693:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:16","type":""}],"src":"1651:60:16"},{"body":{"nodeType":"YulBlock","src":"1777:82:16","statements":[{"nodeType":"YulAssignment","src":"1787:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:16"},"nodeType":"YulFunctionCall","src":"1827:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:16"},"nodeType":"YulFunctionCall","src":"1818:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:16"},"nodeType":"YulFunctionCall","src":"1800:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:16","type":""}],"src":"1717:142:16"},{"body":{"nodeType":"YulBlock","src":"1912:28:16","statements":[{"nodeType":"YulAssignment","src":"1922:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:16","type":""}],"src":"1865:75:16"},{"body":{"nodeType":"YulBlock","src":"2022:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:16"},"nodeType":"YulFunctionCall","src":"2056:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:16"},"nodeType":"YulFunctionCall","src":"2145:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:16"},"nodeType":"YulFunctionCall","src":"2166:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:16"},"nodeType":"YulFunctionCall","src":"2117:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:16"},"nodeType":"YulFunctionCall","src":"2104:105:16"},"nodeType":"YulExpressionStatement","src":"2104:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:16","type":""}],"src":"1946:269:16"},{"body":{"nodeType":"YulBlock","src":"2270:24:16","statements":[{"nodeType":"YulAssignment","src":"2280:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:16","type":""}],"src":"2221:73:16"},{"body":{"nodeType":"YulBlock","src":"2353:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:16"},"nodeType":"YulFunctionCall","src":"2377:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:16"},"nodeType":"YulFunctionCall","src":"2418:65:16"},"nodeType":"YulExpressionStatement","src":"2418:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:16","type":""}],"src":"2300:189:16"},{"body":{"nodeType":"YulBlock","src":"2545:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:16"},"nodeType":"YulFunctionCall","src":"2626:39:16"},"nodeType":"YulExpressionStatement","src":"2626:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:16"},"nodeType":"YulFunctionCall","src":"2562:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:16","statements":[{"nodeType":"YulAssignment","src":"2579:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:16"},"nodeType":"YulFunctionCall","src":"2588:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:16","statements":[]},"src":"2555:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:16","type":""}],"src":"2495:186:16"},{"body":{"nodeType":"YulBlock","src":"2766:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:16"},"nodeType":"YulFunctionCall","src":"2822:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:16"},"nodeType":"YulFunctionCall","src":"2906:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:16"},"nodeType":"YulFunctionCall","src":"2892:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:16","statements":[{"nodeType":"YulAssignment","src":"3095:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:16"},"nodeType":"YulFunctionCall","src":"3074:18:16"},"nodeType":"YulIf","src":"3071:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:16"},"nodeType":"YulFunctionCall","src":"3189:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:16"},"nodeType":"YulFunctionCall","src":"3175:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:16"},"nodeType":"YulFunctionCall","src":"3133:80:16"},"nodeType":"YulExpressionStatement","src":"3133:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:16"},"nodeType":"YulFunctionCall","src":"2780:11:16"},"nodeType":"YulIf","src":"2777:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:16","type":""}],"src":"2687:543:16"},{"body":{"nodeType":"YulBlock","src":"3299:54:16","statements":[{"nodeType":"YulAssignment","src":"3309:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:16"},"nodeType":"YulFunctionCall","src":"3330:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:16","type":""}],"src":"3236:117:16"},{"body":{"nodeType":"YulBlock","src":"3410:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:16"},"nodeType":"YulFunctionCall","src":"3465:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:16"},"nodeType":"YulFunctionCall","src":"3480:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:16"},"nodeType":"YulFunctionCall","src":"3436:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:16"},"nodeType":"YulFunctionCall","src":"3432:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:16","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:16"},"nodeType":"YulFunctionCall","src":"3507:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:16","type":""}],"src":"3359:169:16"},{"body":{"nodeType":"YulBlock","src":"3614:214:16","statements":[{"nodeType":"YulAssignment","src":"3747:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:16"},"nodeType":"YulFunctionCall","src":"3755:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:16"}]},{"nodeType":"YulAssignment","src":"3793:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:16"},"nodeType":"YulFunctionCall","src":"3810:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:16"},"nodeType":"YulFunctionCall","src":"3801:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:16","type":""}],"src":"3533:295:16"},{"body":{"nodeType":"YulBlock","src":"3925:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:16"},"nodeType":"YulFunctionCall","src":"3950:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:16"},"nodeType":"YulFunctionCall","src":"4074:18:16"},"nodeType":"YulExpressionStatement","src":"4074:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:16"},"nodeType":"YulFunctionCall","src":"4041:30:16"},"nodeType":"YulIf","src":"4038:56:16"},{"nodeType":"YulVariableDeclaration","src":"4104:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:16"},"nodeType":"YulFunctionCall","src":"4144:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:16"},"nodeType":"YulFunctionCall","src":"4118:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:16"},"nodeType":"YulFunctionCall","src":"4203:67:16"},"nodeType":"YulExpressionStatement","src":"4203:67:16"},{"nodeType":"YulVariableDeclaration","src":"4280:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:16","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:16"},"nodeType":"YulFunctionCall","src":"4413:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:16"},"nodeType":"YulFunctionCall","src":"4401:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:16"},"nodeType":"YulFunctionCall","src":"4451:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:16"},"nodeType":"YulFunctionCall","src":"4608:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:16"},"nodeType":"YulFunctionCall","src":"4602:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:16"},"nodeType":"YulFunctionCall","src":"4587:42:16"},"nodeType":"YulExpressionStatement","src":"4587:42:16"},{"nodeType":"YulAssignment","src":"4646:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:16"},"nodeType":"YulFunctionCall","src":"4656:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:16"}]},{"nodeType":"YulAssignment","src":"4687:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:16"},"nodeType":"YulFunctionCall","src":"4700:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:16"},"nodeType":"YulFunctionCall","src":"4532:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:16","statements":[{"nodeType":"YulAssignment","src":"4549:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:16"},"nodeType":"YulFunctionCall","src":"4554:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:16","statements":[]},"src":"4524:208:16"},{"body":{"nodeType":"YulBlock","src":"4768:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:16"},"nodeType":"YulFunctionCall","src":"4809:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:16"},"nodeType":"YulFunctionCall","src":"4803:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:16"},"nodeType":"YulFunctionCall","src":"4891:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:16"},"nodeType":"YulFunctionCall","src":"4861:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:16"},"nodeType":"YulFunctionCall","src":"4846:64:16"},"nodeType":"YulExpressionStatement","src":"4846:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:16"},"nodeType":"YulFunctionCall","src":"4748:19:16"},"nodeType":"YulIf","src":"4745:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:16"},"nodeType":"YulFunctionCall","src":"4954:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:16"},"nodeType":"YulFunctionCall","src":"4950:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:16"},"nodeType":"YulFunctionCall","src":"4937:36:16"},"nodeType":"YulExpressionStatement","src":"4937:36:16"}]},"nodeType":"YulCase","src":"4365:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:16","statements":[{"nodeType":"YulAssignment","src":"5069:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:16"},"nodeType":"YulFunctionCall","src":"5084:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:16"},"nodeType":"YulFunctionCall","src":"5078:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:16"},"nodeType":"YulIf","src":"5041:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:16"},"nodeType":"YulFunctionCall","src":"5144:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:16"},"nodeType":"YulFunctionCall","src":"5131:81:16"},"nodeType":"YulExpressionStatement","src":"5131:81:16"}]},"nodeType":"YulCase","src":"4992:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:16"},"nodeType":"YulFunctionCall","src":"4342:14:16"},"nodeType":"YulSwitch","src":"4335:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:16","type":""}],"src":"3833:1395:16"},{"body":{"nodeType":"YulBlock","src":"5279:32:16","statements":[{"nodeType":"YulAssignment","src":"5289:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5300:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:16","type":""}],"src":"5234:77:16"},{"body":{"nodeType":"YulBlock","src":"5382:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5399:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5422:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5404:17:16"},"nodeType":"YulFunctionCall","src":"5404:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:16"},"nodeType":"YulFunctionCall","src":"5392:37:16"},"nodeType":"YulExpressionStatement","src":"5392:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5377:3:16","type":""}],"src":"5317:118:16"},{"body":{"nodeType":"YulBlock","src":"5506:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5523:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5528:17:16"},"nodeType":"YulFunctionCall","src":"5528:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5516:6:16"},"nodeType":"YulFunctionCall","src":"5516:37:16"},"nodeType":"YulExpressionStatement","src":"5516:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5494:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5501:3:16","type":""}],"src":"5441:118:16"},{"body":{"nodeType":"YulBlock","src":"5610:81:16","statements":[{"nodeType":"YulAssignment","src":"5620:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5642:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:16"},"nodeType":"YulFunctionCall","src":"5631:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5620:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5592:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5602:7:16","type":""}],"src":"5565:126:16"},{"body":{"nodeType":"YulBlock","src":"5742:51:16","statements":[{"nodeType":"YulAssignment","src":"5752:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5781:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5763:17:16"},"nodeType":"YulFunctionCall","src":"5763:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5752:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5734:7:16","type":""}],"src":"5697:96:16"},{"body":{"nodeType":"YulBlock","src":"5864:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5886:17:16"},"nodeType":"YulFunctionCall","src":"5886:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:16"},"nodeType":"YulFunctionCall","src":"5874:37:16"},"nodeType":"YulExpressionStatement","src":"5874:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5852:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5859:3:16","type":""}],"src":"5799:118:16"},{"body":{"nodeType":"YulBlock","src":"6133:454:16","statements":[{"nodeType":"YulAssignment","src":"6143:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6166:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6151:3:16"},"nodeType":"YulFunctionCall","src":"6151:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6143:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6248:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:16"},"nodeType":"YulFunctionCall","src":"6233:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6180:43:16"},"nodeType":"YulFunctionCall","src":"6180:71:16"},"nodeType":"YulExpressionStatement","src":"6180:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6305:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6329:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:16"},"nodeType":"YulFunctionCall","src":"6314:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6261:43:16"},"nodeType":"YulFunctionCall","src":"6261:72:16"},"nodeType":"YulExpressionStatement","src":"6261:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6387:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:16"},"nodeType":"YulFunctionCall","src":"6396:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6343:43:16"},"nodeType":"YulFunctionCall","src":"6343:72:16"},"nodeType":"YulExpressionStatement","src":"6343:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6469:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:16"},"nodeType":"YulFunctionCall","src":"6478:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:16"},"nodeType":"YulFunctionCall","src":"6425:72:16"},"nodeType":"YulExpressionStatement","src":"6425:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6551:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6575:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:16"},"nodeType":"YulFunctionCall","src":"6560:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6507:43:16"},"nodeType":"YulFunctionCall","src":"6507:73:16"},"nodeType":"YulExpressionStatement","src":"6507:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6085:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6093:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6117:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6128:4:16","type":""}],"src":"5923:664:16"},{"body":{"nodeType":"YulBlock","src":"6689:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6706:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6711:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:16"},"nodeType":"YulFunctionCall","src":"6699:19:16"},"nodeType":"YulExpressionStatement","src":"6699:19:16"},{"nodeType":"YulAssignment","src":"6727:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6746:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:16"},"nodeType":"YulFunctionCall","src":"6742:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6727:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6661:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6666:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6677:11:16","type":""}],"src":"6593:169:16"},{"body":{"nodeType":"YulBlock","src":"6830:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6840:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6844:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6909:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6934:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"6939:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:16"},"nodeType":"YulFunctionCall","src":"6930:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6953:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"6958:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:16"},"nodeType":"YulFunctionCall","src":"6949:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6943:5:16"},"nodeType":"YulFunctionCall","src":"6943:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:16"},"nodeType":"YulFunctionCall","src":"6923:39:16"},"nodeType":"YulExpressionStatement","src":"6923:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6870:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6867:2:16"},"nodeType":"YulFunctionCall","src":"6867:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6881:19:16","statements":[{"nodeType":"YulAssignment","src":"6883:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6892:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"6895:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:16"},"nodeType":"YulFunctionCall","src":"6888:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6883:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6863:3:16","statements":[]},"src":"6859:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6992:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6997:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:16"},"nodeType":"YulFunctionCall","src":"6988:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:16"},"nodeType":"YulFunctionCall","src":"6981:27:16"},"nodeType":"YulExpressionStatement","src":"6981:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6812:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6817:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6822:6:16","type":""}],"src":"6768:246:16"},{"body":{"nodeType":"YulBlock","src":"7068:54:16","statements":[{"nodeType":"YulAssignment","src":"7078:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:16"},"nodeType":"YulFunctionCall","src":"7092:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7108:3:16"},"nodeType":"YulFunctionCall","src":"7108:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7088:3:16"},"nodeType":"YulFunctionCall","src":"7088:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7078:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7061:6:16","type":""}],"src":"7020:102:16"},{"body":{"nodeType":"YulBlock","src":"7220:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7230:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7244:32:16"},"nodeType":"YulFunctionCall","src":"7244:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7234:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7292:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7363:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7299:58:16"},"nodeType":"YulFunctionCall","src":"7299:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:16"},"nodeType":"YulFunctionCall","src":"7414:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"7432:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7379:34:16"},"nodeType":"YulFunctionCall","src":"7379:65:16"},"nodeType":"YulExpressionStatement","src":"7379:65:16"},{"nodeType":"YulAssignment","src":"7453:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7464:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7491:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7469:21:16"},"nodeType":"YulFunctionCall","src":"7469:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7460:3:16"},"nodeType":"YulFunctionCall","src":"7460:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7453:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7201:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7208:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7216:3:16","type":""}],"src":"7128:377:16"},{"body":{"nodeType":"YulBlock","src":"7629:195:16","statements":[{"nodeType":"YulAssignment","src":"7639:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7651:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7662:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:16"},"nodeType":"YulFunctionCall","src":"7647:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7639:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7697:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:16"},"nodeType":"YulFunctionCall","src":"7682:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7705:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7711:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7701:3:16"},"nodeType":"YulFunctionCall","src":"7701:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7675:6:16"},"nodeType":"YulFunctionCall","src":"7675:47:16"},"nodeType":"YulExpressionStatement","src":"7675:47:16"},{"nodeType":"YulAssignment","src":"7731:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"7812:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7739:63:16"},"nodeType":"YulFunctionCall","src":"7739:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7731:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7613:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7624:4:16","type":""}],"src":"7511:313:16"},{"body":{"nodeType":"YulBlock","src":"7888:40:16","statements":[{"nodeType":"YulAssignment","src":"7899:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7909:5:16"},"nodeType":"YulFunctionCall","src":"7909:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7899:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7871:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7881:6:16","type":""}],"src":"7830:98:16"},{"body":{"nodeType":"YulBlock","src":"7990:60:16","statements":[{"nodeType":"YulAssignment","src":"8000:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8008:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8000:4:16"}]},{"nodeType":"YulAssignment","src":"8021:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8033:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8038:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:16"},"nodeType":"YulFunctionCall","src":"8029:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8021:4:16"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7977:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7985:4:16","type":""}],"src":"7934:116:16"},{"body":{"nodeType":"YulBlock","src":"8111:99:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:42:16","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8159:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8153:5:16"},"nodeType":"YulFunctionCall","src":"8153:10:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8135:17:16"},"nodeType":"YulFunctionCall","src":"8135:29:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8126:5:16","type":""}]},{"nodeType":"YulAssignment","src":"8174:29:16","value":{"name":"value","nodeType":"YulIdentifier","src":"8198:5:16"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8174:11:16"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8091:3:16","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"8099:11:16","type":""}],"src":"8056:154:16"},{"body":{"nodeType":"YulBlock","src":"8306:504:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8317:52:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8363:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8331:31:16"},"nodeType":"YulFunctionCall","src":"8331:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8378:21:16","value":{"name":"array","nodeType":"YulIdentifier","src":"8394:5:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8382:8:16","type":""}]},{"nodeType":"YulAssignment","src":"8409:52:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8455:5:16"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8421:33:16"},"nodeType":"YulFunctionCall","src":"8421:40:16"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8409:8:16"}]},{"nodeType":"YulAssignment","src":"8471:44:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8506:8:16"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"8480:25:16"},"nodeType":"YulFunctionCall","src":"8480:35:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8471:5:16"}]},{"body":{"nodeType":"YulBlock","src":"8543:260:16","statements":[{"nodeType":"YulAssignment","src":"8557:236:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8654:1:16","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"8665:6:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8657:3:16"},"nodeType":"YulFunctionCall","src":"8657:15:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8650:3:16"},"nodeType":"YulFunctionCall","src":"8650:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8695:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8610:18:16"},"nodeType":"YulFunctionCall","src":"8610:169:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8566:3:16"},"nodeType":"YulFunctionCall","src":"8566:227:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8557:5:16"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8531:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8528:2:16"},"nodeType":"YulFunctionCall","src":"8528:14:16"},"nodeType":"YulIf","src":"8525:278:16"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8290:5:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8300:5:16","type":""}],"src":"8216:594:16"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b506040518060400160405280601081526020017f4d696e696d616c466f72776172646572000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e31000000000000000000000000000000000000000000000000000000815250620000956000836200013560201b90919060201c565b6101208181525050620000b36001826200013560201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000f26200018d60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050620007e5565b60006020835110156200015b576200015383620001ea60201b60201c565b905062000187565b826200016d836200025760201b60201c565b60000190816200017e9190620004db565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620001cf95949392919062000633565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200023a57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200023191906200071f565b60405180910390fd5b805181620002489062000775565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e357607f821691505b602082108103620002f957620002f86200029b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000324565b6200036f868362000324565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003bc620003b6620003b08462000387565b62000391565b62000387565b9050919050565b6000819050919050565b620003d8836200039b565b620003f0620003e782620003c3565b84845462000331565b825550505050565b600090565b62000407620003f8565b62000414818484620003cd565b505050565b5b818110156200043c5762000430600082620003fd565b6001810190506200041a565b5050565b601f8211156200048b576200045581620002ff565b620004608462000314565b8101602085101562000470578190505b620004886200047f8562000314565b83018262000419565b50505b505050565b600082821c905092915050565b6000620004b06000198460080262000490565b1980831691505092915050565b6000620004cb83836200049d565b9150826002028217905092915050565b620004e68262000261565b67ffffffffffffffff8111156200050257620005016200026c565b5b6200050e8254620002ca565b6200051b82828562000440565b600060209050601f8311600181146200055357600084156200053e578287015190505b6200054a8582620004bd565b865550620005ba565b601f1984166200056386620002ff565b60005b828110156200058d5784890151825560018201915060208501945060208101905062000566565b86831015620005ad5784890151620005a9601f8916826200049d565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620005d781620005c2565b82525050565b620005e88162000387565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200061b82620005ee565b9050919050565b6200062d816200060e565b82525050565b600060a0820190506200064a6000830188620005cc565b620006596020830187620005cc565b620006686040830186620005cc565b620006776060830185620005dd565b62000686608083018462000622565b9695505050505050565b600082825260208201905092915050565b60005b83811015620006c1578082015181840152602081019050620006a4565b60008484015250505050565b6000601f19601f8301169050919050565b6000620006eb8262000261565b620006f7818562000690565b935062000709818560208601620006a1565b6200071481620006cd565b840191505092915050565b600060208201905081810360008301526200073b8184620006de565b905092915050565b600081519050919050565b6000819050602082019050919050565b60006200076c8251620005c2565b80915050919050565b6000620007828262000743565b826200078e846200074e565b90506200079b816200075e565b92506020821015620007de57620007d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000324565b831692505b5050919050565b60805160a05160c05160e0516101005161012051610140516115b06200084060003960006105b90152600061057e01526000610a5301526000610a32015260006106e50152600061073b0152600061076401526115b06000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008157806384b0196e146100b2578063bf5d3bdb146100e3575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610c4f565b610120565b6040516100789190610c95565b60405180910390f35b61009b60048036038101906100969190610d39565b610169565b6040516100a9929190610e60565b60405180910390f35b3480156100be57600080fd5b506100c7610315565b6040516100da9796959493929190611006565b60405180910390f35b3480156100ef57600080fd5b5061010a60048036038101906101059190610d39565b6103bf565b604051610117919061108a565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060606101788585856103bf565b6101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90611117565b60405180910390fd5b600185608001356101c89190611166565b600260008760000160208101906101df9190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906102339190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a0019061026391906111a9565b8b60000160208101906102769190610c4f565b60405160200161028893929190611293565b6040516020818303038152906040526040516102a491906112ee565b600060405180830381858888f193505050503d80600081146102e2576040519150601f19603f3d011682016040523d82523d6000602084013e6102e7565b606091505b5091509150603f87606001356102fd9190611334565b5a1161030557fe5b8181935093505050935093915050565b600060608060008060006060610329610575565b6103316105b0565b46306000801b600067ffffffffffffffff81111561035257610351611365565b5b6040519080825280602002602001820160405280156103805781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000806104c884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506104ba7fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906104419190610c4f565b8960200160208101906104549190610c4f565b8a604001358b606001358c608001358d8060a0019061047391906111a9565b604051610481929190611394565b604051809103902060405160200161049f97969594939291906113ad565b604051602081830303815290604052805190602001206105eb565b61060590919063ffffffff16565b90508460800135600260008760000160208101906104e69190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561056b575084600001602081019061053c9190610c4f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60606105ab60007f000000000000000000000000000000000000000000000000000000000000000061063190919063ffffffff16565b905090565b60606105e660017f000000000000000000000000000000000000000000000000000000000000000061063190919063ffffffff16565b905090565b60006105fe6105f86106e1565b83610798565b9050919050565b60008060008061061586866107d9565b9250925092506106258282610835565b82935050505092915050565b606060ff60001b831461064e5761064783610999565b90506106db565b81805461065a9061144b565b80601f01602080910402602001604051908101604052809291908181526020018280546106869061144b565b80156106d35780601f106106a8576101008083540402835291602001916106d3565b820191906000526020600020905b8154815290600101906020018083116106b657829003601f168201915b505050505090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561075d57507f000000000000000000000000000000000000000000000000000000000000000046145b1561078a577f00000000000000000000000000000000000000000000000000000000000000009050610795565b610792610a0d565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000806000604184510361081e5760008060006020870151925060408701519150606087015160001a905061081088828585610aa3565b95509550955050505061082e565b60006002855160001b9250925092505b9250925092565b600060038111156108495761084861147c565b5b82600381111561085c5761085b61147c565b5b031561099557600160038111156108765761087561147c565b5b8260038111156108895761088861147c565b5b036108c0576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156108d4576108d361147c565b5b8260038111156108e7576108e661147c565b5b0361092c578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016109239190610c95565b60405180910390fd5b60038081111561093f5761093e61147c565b5b8260038111156109525761095161147c565b5b0361099457806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161098b91906114ab565b60405180910390fd5b5b5050565b606060006109a683610b97565b90506000602067ffffffffffffffff8111156109c5576109c4611365565b5b6040519080825280601f01601f1916602001820160405280156109f75781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610a889594939291906114c6565b60405160208183030381529060405280519060200120905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610ae3576000600385925092509250610b8d565b600060018888888860405160008152602001604052604051610b089493929190611535565b6020604051602081039080840390855afa158015610b2a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b7e57600060016000801b93509350935050610b8d565b8060008060001b935093509350505b9450945094915050565b60008060ff8360001c169050601f811115610bde576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c1c82610bf1565b9050919050565b610c2c81610c11565b8114610c3757600080fd5b50565b600081359050610c4981610c23565b92915050565b600060208284031215610c6557610c64610be7565b5b6000610c7384828501610c3a565b91505092915050565b6000819050919050565b610c8f81610c7c565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b600080fd5b600060c08284031215610ccb57610cca610cb0565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cf957610cf8610cd4565b5b8235905067ffffffffffffffff811115610d1657610d15610cd9565b5b602083019150836001820283011115610d3257610d31610cde565b5b9250929050565b600080600060408486031215610d5257610d51610be7565b5b600084013567ffffffffffffffff811115610d7057610d6f610bec565b5b610d7c86828701610cb5565b935050602084013567ffffffffffffffff811115610d9d57610d9c610bec565b5b610da986828701610ce3565b92509250509250925092565b60008115159050919050565b610dca81610db5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0a578082015181840152602081019050610def565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e3282610dd0565b610e3c8185610ddb565b9350610e4c818560208601610dec565b610e5581610e16565b840191505092915050565b6000604082019050610e756000830185610dc1565b8181036020830152610e878184610e27565b90509392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610ec581610e90565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610ef282610ecb565b610efc8185610ed6565b9350610f0c818560208601610dec565b610f1581610e16565b840191505092915050565b610f2981610c11565b82525050565b6000819050919050565b610f4281610f2f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f7d81610c7c565b82525050565b6000610f8f8383610f74565b60208301905092915050565b6000602082019050919050565b6000610fb382610f48565b610fbd8185610f53565b9350610fc883610f64565b8060005b83811015610ff9578151610fe08882610f83565b9750610feb83610f9b565b925050600181019050610fcc565b5085935050505092915050565b600060e08201905061101b600083018a610ebc565b818103602083015261102d8189610ee7565b905081810360408301526110418188610ee7565b90506110506060830187610c86565b61105d6080830186610f20565b61106a60a0830185610f39565b81810360c083015261107c8184610fa8565b905098975050505050505050565b600060208201905061109f6000830184610dc1565b92915050565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b6000611101603283610ed6565b915061110c826110a5565b604082019050919050565b60006020820190508181036000830152611130816110f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117182610c7c565b915061117c83610c7c565b925082820190508082111561119457611193611137565b5b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126111c6576111c561119a565b5b80840192508235915067ffffffffffffffff8211156111e8576111e761119f565b5b602083019250600182023603831315611204576112036111a4565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000611232838561120c565b935061123f838584611217565b82840190509392505050565b60008160601b9050919050565b60006112638261124b565b9050919050565b600061127582611258565b9050919050565b61128d61128882610c11565b61126a565b82525050565b60006112a0828587611226565b91506112ac828461127c565b601482019150819050949350505050565b60006112c882610dd0565b6112d2818561120c565b93506112e2818560208601610dec565b80840191505092915050565b60006112fa82846112bd565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061133f82610c7c565b915061134a83610c7c565b92508261135a57611359611305565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006113a1828486611226565b91508190509392505050565b600060e0820190506113c2600083018a610f39565b6113cf6020830189610f20565b6113dc6040830188610f20565b6113e96060830187610c86565b6113f66080830186610c86565b61140360a0830185610c86565b61141060c0830184610f39565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146357607f821691505b6020821081036114765761147561141c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020820190506114c06000830184610f39565b92915050565b600060a0820190506114db6000830188610f39565b6114e86020830187610f39565b6114f56040830186610f39565b6115026060830185610c86565b61150f6080830184610f20565b9695505050505050565b600060ff82169050919050565b61152f81611519565b82525050565b600060808201905061154a6000830187610f39565b6115576020830186611526565b6115646040830185610f39565b6115716060830184610f39565b9594505050505056fea26469706673582212206ae0c16489215d643fc4adbcbf88a4cfcd1387b7aaa03bd22837ed92fc52df6d64736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D696E696D616C466F7277617264657200000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x302E302E31000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x95 PUSH1 0x0 DUP4 PUSH3 0x135 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xB3 PUSH1 0x1 DUP3 PUSH3 0x135 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xF2 PUSH3 0x18D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x7E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x15B JUMPI PUSH3 0x153 DUP4 PUSH3 0x1EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x187 JUMP JUMPDEST DUP3 PUSH3 0x16D DUP4 PUSH3 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x17E SWAP2 SWAP1 PUSH3 0x4DB JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1CF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x23A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x231 SWAP2 SWAP1 PUSH3 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x248 SWAP1 PUSH3 0x775 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x29B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x363 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x324 JUMP JUMPDEST PUSH3 0x36F DUP7 DUP4 PUSH3 0x324 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BC PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x387 JUMP JUMPDEST PUSH3 0x391 JUMP JUMPDEST PUSH3 0x387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D8 DUP4 PUSH3 0x39B JUMP JUMPDEST PUSH3 0x3F0 PUSH3 0x3E7 DUP3 PUSH3 0x3C3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x331 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x407 PUSH3 0x3F8 JUMP JUMPDEST PUSH3 0x414 DUP2 DUP5 DUP5 PUSH3 0x3CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x43C JUMPI PUSH3 0x430 PUSH1 0x0 DUP3 PUSH3 0x3FD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x41A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x48B JUMPI PUSH3 0x455 DUP2 PUSH3 0x2FF JUMP JUMPDEST PUSH3 0x460 DUP5 PUSH3 0x314 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x470 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x488 PUSH3 0x47F DUP6 PUSH3 0x314 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x419 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B0 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x490 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CB DUP4 DUP4 PUSH3 0x49D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4E6 DUP3 PUSH3 0x261 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x502 JUMPI PUSH3 0x501 PUSH3 0x26C JUMP JUMPDEST JUMPDEST PUSH3 0x50E DUP3 SLOAD PUSH3 0x2CA JUMP JUMPDEST PUSH3 0x51B DUP3 DUP3 DUP6 PUSH3 0x440 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x553 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x53E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x54A DUP6 DUP3 PUSH3 0x4BD JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5BA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x563 DUP7 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x58D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x566 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5AD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5A9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x49D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5D7 DUP2 PUSH3 0x5C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5E8 DUP2 PUSH3 0x387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61B DUP3 PUSH3 0x5EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62D DUP2 PUSH3 0x60E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x64A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x5CC JUMP JUMPDEST PUSH3 0x659 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x5CC JUMP JUMPDEST PUSH3 0x668 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x5CC JUMP JUMPDEST PUSH3 0x677 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x5DD JUMP JUMPDEST PUSH3 0x686 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x622 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6EB DUP3 PUSH3 0x261 JUMP JUMPDEST PUSH3 0x6F7 DUP2 DUP6 PUSH3 0x690 JUMP JUMPDEST SWAP4 POP PUSH3 0x709 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x6A1 JUMP JUMPDEST PUSH3 0x714 DUP2 PUSH3 0x6CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x73B DUP2 DUP5 PUSH3 0x6DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76C DUP3 MLOAD PUSH3 0x5C2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x782 DUP3 PUSH3 0x743 JUMP JUMPDEST DUP3 PUSH3 0x78E DUP5 PUSH3 0x74E JUMP JUMPDEST SWAP1 POP PUSH3 0x79B DUP2 PUSH3 0x75E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x7DE JUMPI PUSH3 0x7D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x324 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x15B0 PUSH3 0x840 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x5B9 ADD MSTORE PUSH1 0x0 PUSH2 0x57E ADD MSTORE PUSH1 0x0 PUSH2 0xA53 ADD MSTORE PUSH1 0x0 PUSH2 0xA32 ADD MSTORE PUSH1 0x0 PUSH2 0x6E5 ADD MSTORE PUSH1 0x0 PUSH2 0x73B ADD MSTORE PUSH1 0x0 PUSH2 0x764 ADD MSTORE PUSH2 0x15B0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x47153F82 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xBF5D3BDB EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x178 DUP6 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x60 ADD CALLDATALOAD DUP9 PUSH1 0x40 ADD CALLDATALOAD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST DUP12 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x3F DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST GAS GT PUSH2 0x305 JUMPI INVALID JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x329 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x5B0 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x380 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C8 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x4BA PUSH32 0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP12 PUSH1 0x60 ADD CALLDATALOAD DUP13 PUSH1 0x80 ADD CALLDATALOAD DUP14 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x49F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x605 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x56B JUMPI POP DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5AB PUSH1 0x0 PUSH32 0x0 PUSH2 0x631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E6 PUSH1 0x1 PUSH32 0x0 PUSH2 0x631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0x6E1 JUMP JUMPDEST DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x615 DUP7 DUP7 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x625 DUP3 DUP3 PUSH2 0x835 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x64E JUMPI PUSH2 0x647 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x65A SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x686 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x75D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x78A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x792 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x810 DUP9 DUP3 DUP6 DUP6 PUSH2 0xAA3 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x995 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x92C JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x994 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9A6 DUP4 PUSH2 0xB97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA88 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xB08 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xB8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP3 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC49 DUP2 PUSH2 0xC23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC73 DUP5 DUP3 DUP6 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8F DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCB JUMPI PUSH2 0xCCA PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0xCD9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD31 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0xBEC JUMP JUMPDEST JUMPDEST PUSH2 0xD7C DUP7 DUP3 DUP8 ADD PUSH2 0xCB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0xBEC JUMP JUMPDEST JUMPDEST PUSH2 0xDA9 DUP7 DUP3 DUP8 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP3 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xE3C DUP2 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP4 POP PUSH2 0xE4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xE87 DUP2 DUP5 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC5 DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF2 DUP3 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xEFC DUP2 DUP6 PUSH2 0xED6 JUMP JUMPDEST SWAP4 POP PUSH2 0xF0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xF15 DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF42 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0xFBD DUP2 DUP6 PUSH2 0xF53 JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 DUP4 PUSH2 0xF64 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF9 JUMPI DUP2 MLOAD PUSH2 0xFE0 DUP9 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP8 POP PUSH2 0xFEB DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFCC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xEBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x102D DUP2 DUP10 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1041 DUP2 DUP9 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1050 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x105D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x106A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xF39 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x107C DUP2 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206E6F74206D6174636820726571756573740000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1101 PUSH1 0x32 DUP4 PUSH2 0xED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x110C DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1130 DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1171 DUP3 PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x1137 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x11C6 JUMPI PUSH2 0x11C5 PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x119F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x11A4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1232 DUP4 DUP6 PUSH2 0x120C JUMP JUMPDEST SWAP4 POP PUSH2 0x123F DUP4 DUP6 DUP5 PUSH2 0x1217 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D PUSH2 0x1288 DUP3 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A0 DUP3 DUP6 DUP8 PUSH2 0x1226 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 DUP5 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP3 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x12D2 DUP2 DUP6 PUSH2 0x120C JUMP JUMPDEST SWAP4 POP PUSH2 0x12E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FA DUP3 DUP5 PUSH2 0x12BD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x133F DUP3 PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP PUSH2 0x134A DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13A1 DUP3 DUP5 DUP7 PUSH2 0x1226 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x13CF PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x13DC PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x13E9 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x13F6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1403 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1410 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1463 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x141C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x14E8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x14F5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1502 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x150F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152F DUP2 PUSH2 0x1519 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x154A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1557 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1564 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1571 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE0C16489215D643FC4ADBC 0xBF DUP9 LOG4 0xCF 0xCD SGT DUP8 0xB7 0xAA LOG0 EXTCODESIZE 0xD2 0x28 CALLDATACOPY 0xED SWAP3 0xFC MSTORE 0xDF PUSH14 0x64736F6C63430008140033000000 ","sourceMap":"826:2111:14:-:0;;;1284:52;;;;;;;;;;3328:431:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:45;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;826:2111:14;;2887:340:5;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:9:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:5:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:6:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;826:2111:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_2500":{"entryPoint":1397,"id":2500,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2512":{"entryPoint":1456,"id":2512,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_2430":{"entryPoint":2573,"id":2430,"parameterSlots":0,"returnSlots":1},"@_domainSeparatorV4_2409":{"entryPoint":1761,"id":2409,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2446":{"entryPoint":1515,"id":2446,"parameterSlots":1,"returnSlots":1},"@_throwError_2285":{"entryPoint":2101,"id":2285,"parameterSlots":2,"returnSlots":0},"@byteLength_515":{"entryPoint":2967,"id":515,"parameterSlots":1,"returnSlots":1},"@eip712Domain_2488":{"entryPoint":789,"id":2488,"parameterSlots":0,"returnSlots":7},"@execute_6272":{"entryPoint":361,"id":6272,"parameterSlots":3,"returnSlots":2},"@getNonce_6154":{"entryPoint":288,"id":6154,"parameterSlots":1,"returnSlots":1},"@recover_2042":{"entryPoint":1541,"id":2042,"parameterSlots":2,"returnSlots":1},"@toStringWithFallback_582":{"entryPoint":1585,"id":582,"parameterSlots":2,"returnSlots":1},"@toString_483":{"entryPoint":2457,"id":483,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2586":{"entryPoint":1944,"id":2586,"parameterSlots":2,"returnSlots":1},"@tryRecover_2012":{"entryPoint":2009,"id":2012,"parameterSlots":2,"returnSlots":3},"@tryRecover_2200":{"entryPoint":2723,"id":2200,"parameterSlots":4,"returnSlots":3},"@verify_6206":{"entryPoint":959,"id":6206,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_ForwardRequest_$6125_calldata_ptr":{"entryPoint":3253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ForwardRequest_$6125_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":3385,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":3971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":4732,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3521,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":3772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4646,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae_to_t_string_memory_ptr_fromStack":{"entryPoint":4340,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":3956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5414,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5012,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":4755,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3680,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4102,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":5037,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5318,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":5429,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3221,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":4521,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3940,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3912,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3536,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3787,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3995,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":3923,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3547,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4620,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3798,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4454,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4916,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3089,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":3728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3887,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3057,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3196,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5401,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4631,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3564,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5195,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":4714,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":4696,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4407,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4869,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5244,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5148,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4965,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3284,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":4511,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":3248,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":4506,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3294,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":4516,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3052,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3047,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3606,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":4683,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae":{"entryPoint":4261,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3107,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18717:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"748:87:16","statements":[{"nodeType":"YulAssignment","src":"758:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:16"},"nodeType":"YulFunctionCall","src":"767:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:16"},"nodeType":"YulFunctionCall","src":"796:33:16"},"nodeType":"YulExpressionStatement","src":"796:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:16","type":""}],"src":"696:139:16"},{"body":{"nodeType":"YulBlock","src":"907:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:16"},"nodeType":"YulFunctionCall","src":"955:79:16"},"nodeType":"YulExpressionStatement","src":"955:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:16"},"nodeType":"YulFunctionCall","src":"924:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:16"},"nodeType":"YulFunctionCall","src":"920:32:16"},"nodeType":"YulIf","src":"917:119:16"},{"nodeType":"YulBlock","src":"1046:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:16"},"nodeType":"YulFunctionCall","src":"1121:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:16"},"nodeType":"YulFunctionCall","src":"1100:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:16","type":""}],"src":"841:329:16"},{"body":{"nodeType":"YulBlock","src":"1221:32:16","statements":[{"nodeType":"YulAssignment","src":"1231:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:16","type":""}],"src":"1176:77:16"},{"body":{"nodeType":"YulBlock","src":"1324:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:16"},"nodeType":"YulFunctionCall","src":"1346:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:16"},"nodeType":"YulFunctionCall","src":"1334:37:16"},"nodeType":"YulExpressionStatement","src":"1334:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:16","type":""}],"src":"1259:118:16"},{"body":{"nodeType":"YulBlock","src":"1481:124:16","statements":[{"nodeType":"YulAssignment","src":"1491:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:16"},"nodeType":"YulFunctionCall","src":"1580:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:16"},"nodeType":"YulFunctionCall","src":"1527:71:16"},"nodeType":"YulExpressionStatement","src":"1527:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:16","type":""}],"src":"1383:222:16"},{"body":{"nodeType":"YulBlock","src":"1700:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1720:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1710:6:16"},"nodeType":"YulFunctionCall","src":"1710:12:16"},"nodeType":"YulExpressionStatement","src":"1710:12:16"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"1611:117:16"},{"body":{"nodeType":"YulBlock","src":"1866:153:16","statements":[{"body":{"nodeType":"YulBlock","src":"1906:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"1908:77:16"},"nodeType":"YulFunctionCall","src":"1908:79:16"},"nodeType":"YulExpressionStatement","src":"1908:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1887:3:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1892:6:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1883:3:16"},"nodeType":"YulFunctionCall","src":"1883:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1901:3:16","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1879:3:16"},"nodeType":"YulFunctionCall","src":"1879:26:16"},"nodeType":"YulIf","src":"1876:113:16"},{"nodeType":"YulAssignment","src":"1998:15:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"2007:6:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1998:5:16"}]}]},"name":"abi_decode_t_struct$_ForwardRequest_$6125_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1844:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1852:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1860:5:16","type":""}],"src":"1780:239:16"},{"body":{"nodeType":"YulBlock","src":"2114:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2124:6:16"},"nodeType":"YulFunctionCall","src":"2124:12:16"},"nodeType":"YulExpressionStatement","src":"2124:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2025:117:16"},{"body":{"nodeType":"YulBlock","src":"2237:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2254:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2247:6:16"},"nodeType":"YulFunctionCall","src":"2247:12:16"},"nodeType":"YulExpressionStatement","src":"2247:12:16"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2148:117:16"},{"body":{"nodeType":"YulBlock","src":"2360:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2377:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2380:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2370:6:16"},"nodeType":"YulFunctionCall","src":"2370:12:16"},"nodeType":"YulExpressionStatement","src":"2370:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2271:117:16"},{"body":{"nodeType":"YulBlock","src":"2481:478:16","statements":[{"body":{"nodeType":"YulBlock","src":"2530:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2532:77:16"},"nodeType":"YulFunctionCall","src":"2532:79:16"},"nodeType":"YulExpressionStatement","src":"2532:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2509:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2517:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2505:3:16"},"nodeType":"YulFunctionCall","src":"2505:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2524:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2501:3:16"},"nodeType":"YulFunctionCall","src":"2501:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2494:6:16"},"nodeType":"YulFunctionCall","src":"2494:35:16"},"nodeType":"YulIf","src":"2491:122:16"},{"nodeType":"YulAssignment","src":"2622:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2645:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2632:12:16"},"nodeType":"YulFunctionCall","src":"2632:20:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2622:6:16"}]},{"body":{"nodeType":"YulBlock","src":"2695:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2697:77:16"},"nodeType":"YulFunctionCall","src":"2697:79:16"},"nodeType":"YulExpressionStatement","src":"2697:79:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2667:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2675:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:16"},"nodeType":"YulFunctionCall","src":"2664:30:16"},"nodeType":"YulIf","src":"2661:117:16"},{"nodeType":"YulAssignment","src":"2787:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2803:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2811:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:16"},"nodeType":"YulFunctionCall","src":"2799:17:16"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2787:8:16"}]},{"body":{"nodeType":"YulBlock","src":"2870:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2872:77:16"},"nodeType":"YulFunctionCall","src":"2872:79:16"},"nodeType":"YulExpressionStatement","src":"2872:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2835:8:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2849:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2857:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2845:3:16"},"nodeType":"YulFunctionCall","src":"2845:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2831:3:16"},"nodeType":"YulFunctionCall","src":"2831:32:16"},{"name":"end","nodeType":"YulIdentifier","src":"2865:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2828:2:16"},"nodeType":"YulFunctionCall","src":"2828:41:16"},"nodeType":"YulIf","src":"2825:128:16"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2448:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2456:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2464:8:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"2474:6:16","type":""}],"src":"2407:552:16"},{"body":{"nodeType":"YulBlock","src":"3101:764:16","statements":[{"body":{"nodeType":"YulBlock","src":"3147:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3149:77:16"},"nodeType":"YulFunctionCall","src":"3149:79:16"},"nodeType":"YulExpressionStatement","src":"3149:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3122:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3118:3:16"},"nodeType":"YulFunctionCall","src":"3118:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3143:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3114:3:16"},"nodeType":"YulFunctionCall","src":"3114:32:16"},"nodeType":"YulIf","src":"3111:119:16"},{"nodeType":"YulBlock","src":"3240:311:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3286:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3297:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3282:3:16"},"nodeType":"YulFunctionCall","src":"3282:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3269:12:16"},"nodeType":"YulFunctionCall","src":"3269:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3347:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3349:77:16"},"nodeType":"YulFunctionCall","src":"3349:79:16"},"nodeType":"YulExpressionStatement","src":"3349:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3319:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3327:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3316:2:16"},"nodeType":"YulFunctionCall","src":"3316:30:16"},"nodeType":"YulIf","src":"3313:117:16"},{"nodeType":"YulAssignment","src":"3444:97:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3513:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3524:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3509:3:16"},"nodeType":"YulFunctionCall","src":"3509:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3533:7:16"}],"functionName":{"name":"abi_decode_t_struct$_ForwardRequest_$6125_calldata_ptr","nodeType":"YulIdentifier","src":"3454:54:16"},"nodeType":"YulFunctionCall","src":"3454:87:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3444:6:16"}]}]},{"nodeType":"YulBlock","src":"3561:297:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3576:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3607:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3618:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3603:3:16"},"nodeType":"YulFunctionCall","src":"3603:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3590:12:16"},"nodeType":"YulFunctionCall","src":"3590:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3580:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3669:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3671:77:16"},"nodeType":"YulFunctionCall","src":"3671:79:16"},"nodeType":"YulExpressionStatement","src":"3671:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3641:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3649:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3638:2:16"},"nodeType":"YulFunctionCall","src":"3638:30:16"},"nodeType":"YulIf","src":"3635:117:16"},{"nodeType":"YulAssignment","src":"3766:82:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3820:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3831:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3816:3:16"},"nodeType":"YulFunctionCall","src":"3816:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3840:7:16"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3784:31:16"},"nodeType":"YulFunctionCall","src":"3784:64:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3766:6:16"},{"name":"value2","nodeType":"YulIdentifier","src":"3774:6:16"}]}]}]},"name":"abi_decode_tuple_t_struct$_ForwardRequest_$6125_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3055:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3066:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3078:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3086:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3094:6:16","type":""}],"src":"2965:900:16"},{"body":{"nodeType":"YulBlock","src":"3913:48:16","statements":[{"nodeType":"YulAssignment","src":"3923:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3948:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3941:6:16"},"nodeType":"YulFunctionCall","src":"3941:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3934:6:16"},"nodeType":"YulFunctionCall","src":"3934:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3923:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3895:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3905:7:16","type":""}],"src":"3871:90:16"},{"body":{"nodeType":"YulBlock","src":"4026:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4043:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4063:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4048:14:16"},"nodeType":"YulFunctionCall","src":"4048:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4036:6:16"},"nodeType":"YulFunctionCall","src":"4036:34:16"},"nodeType":"YulExpressionStatement","src":"4036:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4014:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4021:3:16","type":""}],"src":"3967:109:16"},{"body":{"nodeType":"YulBlock","src":"4140:40:16","statements":[{"nodeType":"YulAssignment","src":"4151:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4167:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4161:5:16"},"nodeType":"YulFunctionCall","src":"4161:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4151:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4123:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4133:6:16","type":""}],"src":"4082:98:16"},{"body":{"nodeType":"YulBlock","src":"4281:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4298:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4303:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4291:6:16"},"nodeType":"YulFunctionCall","src":"4291:19:16"},"nodeType":"YulExpressionStatement","src":"4291:19:16"},{"nodeType":"YulAssignment","src":"4319:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4338:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4343:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:16"},"nodeType":"YulFunctionCall","src":"4334:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4319:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4253:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4258:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4269:11:16","type":""}],"src":"4186:168:16"},{"body":{"nodeType":"YulBlock","src":"4422:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4432:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4441:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4436:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4501:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4526:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"4531:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4522:3:16"},"nodeType":"YulFunctionCall","src":"4522:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4545:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"4550:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4541:3:16"},"nodeType":"YulFunctionCall","src":"4541:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4535:5:16"},"nodeType":"YulFunctionCall","src":"4535:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4515:6:16"},"nodeType":"YulFunctionCall","src":"4515:39:16"},"nodeType":"YulExpressionStatement","src":"4515:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4462:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"4465:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4459:2:16"},"nodeType":"YulFunctionCall","src":"4459:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4473:19:16","statements":[{"nodeType":"YulAssignment","src":"4475:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4484:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4480:3:16"},"nodeType":"YulFunctionCall","src":"4480:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4475:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4455:3:16","statements":[]},"src":"4451:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4584:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4589:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4580:3:16"},"nodeType":"YulFunctionCall","src":"4580:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4598:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4573:6:16"},"nodeType":"YulFunctionCall","src":"4573:27:16"},"nodeType":"YulExpressionStatement","src":"4573:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4404:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4409:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4414:6:16","type":""}],"src":"4360:246:16"},{"body":{"nodeType":"YulBlock","src":"4660:54:16","statements":[{"nodeType":"YulAssignment","src":"4670:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4688:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4684:3:16"},"nodeType":"YulFunctionCall","src":"4684:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4704:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4700:3:16"},"nodeType":"YulFunctionCall","src":"4700:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4680:3:16"},"nodeType":"YulFunctionCall","src":"4680:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4670:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4643:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4653:6:16","type":""}],"src":"4612:102:16"},{"body":{"nodeType":"YulBlock","src":"4810:283:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4820:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4866:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4834:31:16"},"nodeType":"YulFunctionCall","src":"4834:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4824:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4881:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4946:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4951:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4888:57:16"},"nodeType":"YulFunctionCall","src":"4888:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4881:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5006:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5013:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5002:3:16"},"nodeType":"YulFunctionCall","src":"5002:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"5020:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5025:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4967:34:16"},"nodeType":"YulFunctionCall","src":"4967:65:16"},"nodeType":"YulExpressionStatement","src":"4967:65:16"},{"nodeType":"YulAssignment","src":"5041:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5052:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5079:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5057:21:16"},"nodeType":"YulFunctionCall","src":"5057:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5048:3:16"},"nodeType":"YulFunctionCall","src":"5048:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5041:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4791:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4798:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4806:3:16","type":""}],"src":"4720:373:16"},{"body":{"nodeType":"YulBlock","src":"5237:269:16","statements":[{"nodeType":"YulAssignment","src":"5247:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5259:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5270:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:16"},"nodeType":"YulFunctionCall","src":"5255:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5247:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5321:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5334:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5345:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5330:3:16"},"nodeType":"YulFunctionCall","src":"5330:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5283:37:16"},"nodeType":"YulFunctionCall","src":"5283:65:16"},"nodeType":"YulExpressionStatement","src":"5283:65:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5380:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:16"},"nodeType":"YulFunctionCall","src":"5365:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5389:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5395:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5385:3:16"},"nodeType":"YulFunctionCall","src":"5385:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5358:6:16"},"nodeType":"YulFunctionCall","src":"5358:48:16"},"nodeType":"YulExpressionStatement","src":"5358:48:16"},{"nodeType":"YulAssignment","src":"5415:84:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5485:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"5494:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5423:61:16"},"nodeType":"YulFunctionCall","src":"5423:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5415:4:16"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5201:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5213:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5221:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5232:4:16","type":""}],"src":"5099:407:16"},{"body":{"nodeType":"YulBlock","src":"5556:105:16","statements":[{"nodeType":"YulAssignment","src":"5566:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5581:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5588:66:16","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5577:3:16"},"nodeType":"YulFunctionCall","src":"5577:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5566:7:16"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5538:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5548:7:16","type":""}],"src":"5512:149:16"},{"body":{"nodeType":"YulBlock","src":"5730:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5747:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5769:5:16"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"5752:16:16"},"nodeType":"YulFunctionCall","src":"5752:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5740:6:16"},"nodeType":"YulFunctionCall","src":"5740:36:16"},"nodeType":"YulExpressionStatement","src":"5740:36:16"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5718:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5725:3:16","type":""}],"src":"5667:115:16"},{"body":{"nodeType":"YulBlock","src":"5847:40:16","statements":[{"nodeType":"YulAssignment","src":"5858:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5874:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5868:5:16"},"nodeType":"YulFunctionCall","src":"5868:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5858:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5830:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5840:6:16","type":""}],"src":"5788:99:16"},{"body":{"nodeType":"YulBlock","src":"5989:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6006:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6011:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5999:6:16"},"nodeType":"YulFunctionCall","src":"5999:19:16"},"nodeType":"YulExpressionStatement","src":"5999:19:16"},{"nodeType":"YulAssignment","src":"6027:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6046:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6051:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6042:3:16"},"nodeType":"YulFunctionCall","src":"6042:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6027:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5961:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"5966:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5977:11:16","type":""}],"src":"5893:169:16"},{"body":{"nodeType":"YulBlock","src":"6160:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6170:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6217:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6184:32:16"},"nodeType":"YulFunctionCall","src":"6184:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6174:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6232:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6298:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6303:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6239:58:16"},"nodeType":"YulFunctionCall","src":"6239:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6232:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6358:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6365:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:16"},"nodeType":"YulFunctionCall","src":"6354:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"6372:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6377:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6319:34:16"},"nodeType":"YulFunctionCall","src":"6319:65:16"},"nodeType":"YulExpressionStatement","src":"6319:65:16"},{"nodeType":"YulAssignment","src":"6393:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6404:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6431:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6409:21:16"},"nodeType":"YulFunctionCall","src":"6409:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6400:3:16"},"nodeType":"YulFunctionCall","src":"6400:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6393:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6141:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6148:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6156:3:16","type":""}],"src":"6068:377:16"},{"body":{"nodeType":"YulBlock","src":"6516:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6533:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6556:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6538:17:16"},"nodeType":"YulFunctionCall","src":"6538:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6526:6:16"},"nodeType":"YulFunctionCall","src":"6526:37:16"},"nodeType":"YulExpressionStatement","src":"6526:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6504:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6511:3:16","type":""}],"src":"6451:118:16"},{"body":{"nodeType":"YulBlock","src":"6620:32:16","statements":[{"nodeType":"YulAssignment","src":"6630:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"6641:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6630:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6602:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6612:7:16","type":""}],"src":"6575:77:16"},{"body":{"nodeType":"YulBlock","src":"6723:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6740:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6763:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6745:17:16"},"nodeType":"YulFunctionCall","src":"6745:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6733:6:16"},"nodeType":"YulFunctionCall","src":"6733:37:16"},"nodeType":"YulExpressionStatement","src":"6733:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6711:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6718:3:16","type":""}],"src":"6658:118:16"},{"body":{"nodeType":"YulBlock","src":"6856:40:16","statements":[{"nodeType":"YulAssignment","src":"6867:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6883:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6877:5:16"},"nodeType":"YulFunctionCall","src":"6877:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6867:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6839:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6849:6:16","type":""}],"src":"6782:114:16"},{"body":{"nodeType":"YulBlock","src":"7013:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7030:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7035:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7023:6:16"},"nodeType":"YulFunctionCall","src":"7023:19:16"},"nodeType":"YulExpressionStatement","src":"7023:19:16"},{"nodeType":"YulAssignment","src":"7051:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7070:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7075:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7066:3:16"},"nodeType":"YulFunctionCall","src":"7066:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7051:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6985:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6990:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7001:11:16","type":""}],"src":"6902:184:16"},{"body":{"nodeType":"YulBlock","src":"7164:60:16","statements":[{"nodeType":"YulAssignment","src":"7174:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7182:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7174:4:16"}]},{"nodeType":"YulAssignment","src":"7195:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7207:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7212:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7203:3:16"},"nodeType":"YulFunctionCall","src":"7203:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7195:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7151:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7159:4:16","type":""}],"src":"7092:132:16"},{"body":{"nodeType":"YulBlock","src":"7285:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7302:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7325:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7307:17:16"},"nodeType":"YulFunctionCall","src":"7307:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7295:6:16"},"nodeType":"YulFunctionCall","src":"7295:37:16"},"nodeType":"YulExpressionStatement","src":"7295:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7273:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7280:3:16","type":""}],"src":"7230:108:16"},{"body":{"nodeType":"YulBlock","src":"7424:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7468:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"7476:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7434:33:16"},"nodeType":"YulFunctionCall","src":"7434:46:16"},"nodeType":"YulExpressionStatement","src":"7434:46:16"},{"nodeType":"YulAssignment","src":"7489:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7507:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7512:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:16"},"nodeType":"YulFunctionCall","src":"7503:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7489:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7397:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7405:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7413:10:16","type":""}],"src":"7344:179:16"},{"body":{"nodeType":"YulBlock","src":"7604:38:16","statements":[{"nodeType":"YulAssignment","src":"7614:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7626:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7631:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:16"},"nodeType":"YulFunctionCall","src":"7622:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7614:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7591:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7599:4:16","type":""}],"src":"7529:113:16"},{"body":{"nodeType":"YulBlock","src":"7802:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7812:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7874:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7826:47:16"},"nodeType":"YulFunctionCall","src":"7826:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7816:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7889:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7970:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7975:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7896:73:16"},"nodeType":"YulFunctionCall","src":"7896:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7889:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"7991:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8056:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8006:49:16"},"nodeType":"YulFunctionCall","src":"8006:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7995:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8071:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8085:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8075:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8161:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8175:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8202:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8196:5:16"},"nodeType":"YulFunctionCall","src":"8196:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8179:13:16","type":""}]},{"nodeType":"YulAssignment","src":"8222:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8273:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"8288:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8229:43:16"},"nodeType":"YulFunctionCall","src":"8229:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8222:3:16"}]},{"nodeType":"YulAssignment","src":"8305:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8368:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8315:52:16"},"nodeType":"YulFunctionCall","src":"8315:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8305:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8123:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"8126:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8120:2:16"},"nodeType":"YulFunctionCall","src":"8120:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8134:18:16","statements":[{"nodeType":"YulAssignment","src":"8136:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8145:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"8148:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8141:3:16"},"nodeType":"YulFunctionCall","src":"8141:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8136:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"8105:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8107:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8116:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8111:1:16","type":""}]}]},"src":"8101:284:16"},{"nodeType":"YulAssignment","src":"8394:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"8401:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8394:3:16"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7781:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7788:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7797:3:16","type":""}],"src":"7678:732:16"},{"body":{"nodeType":"YulBlock","src":"8770:861:16","statements":[{"nodeType":"YulAssignment","src":"8780:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8803:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:16"},"nodeType":"YulFunctionCall","src":"8788:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8780:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8859:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8883:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:16"},"nodeType":"YulFunctionCall","src":"8868:17:16"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8817:41:16"},"nodeType":"YulFunctionCall","src":"8817:69:16"},"nodeType":"YulExpressionStatement","src":"8817:69:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8907:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8918:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8903:3:16"},"nodeType":"YulFunctionCall","src":"8903:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8927:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8933:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8923:3:16"},"nodeType":"YulFunctionCall","src":"8923:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8896:6:16"},"nodeType":"YulFunctionCall","src":"8896:48:16"},"nodeType":"YulExpressionStatement","src":"8896:48:16"},{"nodeType":"YulAssignment","src":"8953:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9025:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"9034:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8961:63:16"},"nodeType":"YulFunctionCall","src":"8961:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8953:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9060:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9071:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9056:3:16"},"nodeType":"YulFunctionCall","src":"9056:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9080:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9086:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9076:3:16"},"nodeType":"YulFunctionCall","src":"9076:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9049:6:16"},"nodeType":"YulFunctionCall","src":"9049:48:16"},"nodeType":"YulExpressionStatement","src":"9049:48:16"},{"nodeType":"YulAssignment","src":"9106:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9178:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"9187:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9114:63:16"},"nodeType":"YulFunctionCall","src":"9114:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9106:4:16"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9246:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9270:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:16"},"nodeType":"YulFunctionCall","src":"9255:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9202:43:16"},"nodeType":"YulFunctionCall","src":"9202:72:16"},"nodeType":"YulExpressionStatement","src":"9202:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9328:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9341:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9352:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9337:3:16"},"nodeType":"YulFunctionCall","src":"9337:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9284:43:16"},"nodeType":"YulFunctionCall","src":"9284:73:16"},"nodeType":"YulExpressionStatement","src":"9284:73:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9411:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9424:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9435:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:16"},"nodeType":"YulFunctionCall","src":"9420:19:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9367:43:16"},"nodeType":"YulFunctionCall","src":"9367:73:16"},"nodeType":"YulExpressionStatement","src":"9367:73:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9461:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9472:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9457:3:16"},"nodeType":"YulFunctionCall","src":"9457:19:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9482:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9488:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9478:3:16"},"nodeType":"YulFunctionCall","src":"9478:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9450:6:16"},"nodeType":"YulFunctionCall","src":"9450:49:16"},"nodeType":"YulExpressionStatement","src":"9450:49:16"},{"nodeType":"YulAssignment","src":"9508:116:16","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9610:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"9619:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9516:93:16"},"nodeType":"YulFunctionCall","src":"9516:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9508:4:16"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8694:9:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8706:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8714:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8722:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8730:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8738:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8746:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8754:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8765:4:16","type":""}],"src":"8416:1215:16"},{"body":{"nodeType":"YulBlock","src":"9729:118:16","statements":[{"nodeType":"YulAssignment","src":"9739:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9751:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9762:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9747:3:16"},"nodeType":"YulFunctionCall","src":"9747:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9739:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9813:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9837:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:16"},"nodeType":"YulFunctionCall","src":"9822:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9775:37:16"},"nodeType":"YulFunctionCall","src":"9775:65:16"},"nodeType":"YulExpressionStatement","src":"9775:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9701:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9713:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9724:4:16","type":""}],"src":"9637:210:16"},{"body":{"nodeType":"YulBlock","src":"9959:131:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9981:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9989:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9977:3:16"},"nodeType":"YulFunctionCall","src":"9977:14:16"},{"hexValue":"4d696e696d616c466f727761726465723a207369676e617475726520646f6573","kind":"string","nodeType":"YulLiteral","src":"9993:34:16","type":"","value":"MinimalForwarder: signature does"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9970:6:16"},"nodeType":"YulFunctionCall","src":"9970:58:16"},"nodeType":"YulExpressionStatement","src":"9970:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10049:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10045:3:16"},"nodeType":"YulFunctionCall","src":"10045:15:16"},{"hexValue":"206e6f74206d617463682072657175657374","kind":"string","nodeType":"YulLiteral","src":"10062:20:16","type":"","value":" not match request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10038:6:16"},"nodeType":"YulFunctionCall","src":"10038:45:16"},"nodeType":"YulExpressionStatement","src":"10038:45:16"}]},"name":"store_literal_in_memory_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9951:6:16","type":""}],"src":"9853:237:16"},{"body":{"nodeType":"YulBlock","src":"10242:220:16","statements":[{"nodeType":"YulAssignment","src":"10252:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10318:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10323:2:16","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10259:58:16"},"nodeType":"YulFunctionCall","src":"10259:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10252:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10424:3:16"}],"functionName":{"name":"store_literal_in_memory_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae","nodeType":"YulIdentifier","src":"10335:88:16"},"nodeType":"YulFunctionCall","src":"10335:93:16"},"nodeType":"YulExpressionStatement","src":"10335:93:16"},{"nodeType":"YulAssignment","src":"10437:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10448:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10453:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:16"},"nodeType":"YulFunctionCall","src":"10444:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10437:3:16"}]}]},"name":"abi_encode_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10230:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10238:3:16","type":""}],"src":"10096:366:16"},{"body":{"nodeType":"YulBlock","src":"10639:248:16","statements":[{"nodeType":"YulAssignment","src":"10649:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10661:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10672:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10657:3:16"},"nodeType":"YulFunctionCall","src":"10657:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10649:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10696:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10707:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10692:3:16"},"nodeType":"YulFunctionCall","src":"10692:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10715:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10721:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10711:3:16"},"nodeType":"YulFunctionCall","src":"10711:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10685:6:16"},"nodeType":"YulFunctionCall","src":"10685:47:16"},"nodeType":"YulExpressionStatement","src":"10685:47:16"},{"nodeType":"YulAssignment","src":"10741:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10875:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10749:124:16"},"nodeType":"YulFunctionCall","src":"10749:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10741:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10619:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10634:4:16","type":""}],"src":"10468:419:16"},{"body":{"nodeType":"YulBlock","src":"10921:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10938:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10941:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10931:6:16"},"nodeType":"YulFunctionCall","src":"10931:88:16"},"nodeType":"YulExpressionStatement","src":"10931:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11035:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11038:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11028:6:16"},"nodeType":"YulFunctionCall","src":"11028:15:16"},"nodeType":"YulExpressionStatement","src":"11028:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11059:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11062:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11052:6:16"},"nodeType":"YulFunctionCall","src":"11052:15:16"},"nodeType":"YulExpressionStatement","src":"11052:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10893:180:16"},{"body":{"nodeType":"YulBlock","src":"11123:147:16","statements":[{"nodeType":"YulAssignment","src":"11133:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11156:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11138:17:16"},"nodeType":"YulFunctionCall","src":"11138:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11133:1:16"}]},{"nodeType":"YulAssignment","src":"11167:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11190:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11172:17:16"},"nodeType":"YulFunctionCall","src":"11172:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11167:1:16"}]},{"nodeType":"YulAssignment","src":"11201:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11212:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"11215:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11208:3:16"},"nodeType":"YulFunctionCall","src":"11208:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11201:3:16"}]},{"body":{"nodeType":"YulBlock","src":"11241:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11243:16:16"},"nodeType":"YulFunctionCall","src":"11243:18:16"},"nodeType":"YulExpressionStatement","src":"11243:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11233:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"11236:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11230:2:16"},"nodeType":"YulFunctionCall","src":"11230:10:16"},"nodeType":"YulIf","src":"11227:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11110:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"11113:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11119:3:16","type":""}],"src":"11079:191:16"},{"body":{"nodeType":"YulBlock","src":"11365:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11382:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11385:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11375:6:16"},"nodeType":"YulFunctionCall","src":"11375:12:16"},"nodeType":"YulExpressionStatement","src":"11375:12:16"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"11276:117:16"},{"body":{"nodeType":"YulBlock","src":"11488:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11505:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11508:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11498:6:16"},"nodeType":"YulFunctionCall","src":"11498:12:16"},"nodeType":"YulExpressionStatement","src":"11498:12:16"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"11399:117:16"},{"body":{"nodeType":"YulBlock","src":"11611:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11628:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11631:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11621:6:16"},"nodeType":"YulFunctionCall","src":"11621:12:16"},"nodeType":"YulExpressionStatement","src":"11621:12:16"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"11522:117:16"},{"body":{"nodeType":"YulBlock","src":"11735:634:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11745:51:16","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"11784:11:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11771:12:16"},"nodeType":"YulFunctionCall","src":"11771:25:16"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"11749:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11890:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"11892:77:16"},"nodeType":"YulFunctionCall","src":"11892:79:16"},"nodeType":"YulExpressionStatement","src":"11892:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11819:18:16"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"11847:12:16"},"nodeType":"YulFunctionCall","src":"11847:14:16"},{"name":"base_ref","nodeType":"YulIdentifier","src":"11863:8:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11843:3:16"},"nodeType":"YulFunctionCall","src":"11843:29:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11878:4:16","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"11884:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11874:3:16"},"nodeType":"YulFunctionCall","src":"11874:12:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11839:3:16"},"nodeType":"YulFunctionCall","src":"11839:48:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11815:3:16"},"nodeType":"YulFunctionCall","src":"11815:73:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11808:6:16"},"nodeType":"YulFunctionCall","src":"11808:81:16"},"nodeType":"YulIf","src":"11805:168:16"},{"nodeType":"YulAssignment","src":"11982:41:16","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"11994:8:16"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"12004:18:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11990:3:16"},"nodeType":"YulFunctionCall","src":"11990:33:16"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"11982:4:16"}]},{"nodeType":"YulAssignment","src":"12033:28:16","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"12056:4:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12043:12:16"},"nodeType":"YulFunctionCall","src":"12043:18:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12033:6:16"}]},{"body":{"nodeType":"YulBlock","src":"12104:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"12106:77:16"},"nodeType":"YulFunctionCall","src":"12106:79:16"},"nodeType":"YulExpressionStatement","src":"12106:79:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12076:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12084:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12073:2:16"},"nodeType":"YulFunctionCall","src":"12073:30:16"},"nodeType":"YulIf","src":"12070:117:16"},{"nodeType":"YulAssignment","src":"12196:21:16","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"12208:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"12214:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12204:3:16"},"nodeType":"YulFunctionCall","src":"12204:13:16"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"12196:4:16"}]},{"body":{"nodeType":"YulBlock","src":"12279:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"12281:77:16"},"nodeType":"YulFunctionCall","src":"12281:79:16"},"nodeType":"YulExpressionStatement","src":"12281:79:16"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"12233:4:16"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"12243:12:16"},"nodeType":"YulFunctionCall","src":"12243:14:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12263:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12271:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12259:3:16"},"nodeType":"YulFunctionCall","src":"12259:17:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12239:3:16"},"nodeType":"YulFunctionCall","src":"12239:38:16"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"12229:3:16"},"nodeType":"YulFunctionCall","src":"12229:49:16"},"nodeType":"YulIf","src":"12226:136:16"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"11696:8:16","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"11706:11:16","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"11722:4:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"11728:6:16","type":""}],"src":"11645:724:16"},{"body":{"nodeType":"YulBlock","src":"12488:34:16","statements":[{"nodeType":"YulAssignment","src":"12498:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"12513:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12498:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12460:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"12465:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12476:11:16","type":""}],"src":"12375:147:16"},{"body":{"nodeType":"YulBlock","src":"12592:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12615:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"12620:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12625:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12602:12:16"},"nodeType":"YulFunctionCall","src":"12602:30:16"},"nodeType":"YulExpressionStatement","src":"12602:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12652:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12657:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:16"},"nodeType":"YulFunctionCall","src":"12648:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"12666:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12641:6:16"},"nodeType":"YulFunctionCall","src":"12641:27:16"},"nodeType":"YulExpressionStatement","src":"12641:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12574:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12579:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"12584:6:16","type":""}],"src":"12528:146:16"},{"body":{"nodeType":"YulBlock","src":"12820:209:16","statements":[{"nodeType":"YulAssignment","src":"12830:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12913:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12918:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12837:75:16"},"nodeType":"YulFunctionCall","src":"12837:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12830:3:16"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12972:5:16"},{"name":"pos","nodeType":"YulIdentifier","src":"12979:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12984:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12935:36:16"},"nodeType":"YulFunctionCall","src":"12935:56:16"},"nodeType":"YulExpressionStatement","src":"12935:56:16"},{"nodeType":"YulAssignment","src":"13000:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13011:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13016:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13007:3:16"},"nodeType":"YulFunctionCall","src":"13007:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13000:3:16"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12793:5:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"12800:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12808:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12816:3:16","type":""}],"src":"12702:327:16"},{"body":{"nodeType":"YulBlock","src":"13077:52:16","statements":[{"nodeType":"YulAssignment","src":"13087:35:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13112:2:16","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"13116:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13108:3:16"},"nodeType":"YulFunctionCall","src":"13108:14:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13087:8:16"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13058:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13068:8:16","type":""}],"src":"13035:94:16"},{"body":{"nodeType":"YulBlock","src":"13182:47:16","statements":[{"nodeType":"YulAssignment","src":"13192:31:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13217:5:16"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"13203:13:16"},"nodeType":"YulFunctionCall","src":"13203:20:16"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"13192:7:16"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13164:5:16","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"13174:7:16","type":""}],"src":"13135:94:16"},{"body":{"nodeType":"YulBlock","src":"13282:53:16","statements":[{"nodeType":"YulAssignment","src":"13292:37:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13323:5:16"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"13303:19:16"},"nodeType":"YulFunctionCall","src":"13303:26:16"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"13292:7:16"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13264:5:16","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"13274:7:16","type":""}],"src":"13235:100:16"},{"body":{"nodeType":"YulBlock","src":"13424:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13441:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13484:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13466:17:16"},"nodeType":"YulFunctionCall","src":"13466:24:16"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"13446:19:16"},"nodeType":"YulFunctionCall","src":"13446:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13434:6:16"},"nodeType":"YulFunctionCall","src":"13434:58:16"},"nodeType":"YulExpressionStatement","src":"13434:58:16"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13412:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13419:3:16","type":""}],"src":"13341:157:16"},{"body":{"nodeType":"YulBlock","src":"13676:260:16","statements":[{"nodeType":"YulAssignment","src":"13687:110:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13776:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"13784:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"13793:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13694:81:16"},"nodeType":"YulFunctionCall","src":"13694:103:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13687:3:16"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13869:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"13878:3:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13807:61:16"},"nodeType":"YulFunctionCall","src":"13807:75:16"},"nodeType":"YulExpressionStatement","src":"13807:75:16"},{"nodeType":"YulAssignment","src":"13891:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13902:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13907:2:16","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13898:3:16"},"nodeType":"YulFunctionCall","src":"13898:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13891:3:16"}]},{"nodeType":"YulAssignment","src":"13920:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"13927:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13920:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13639:3:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13645:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13653:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13661:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13672:3:16","type":""}],"src":"13504:432:16"},{"body":{"nodeType":"YulBlock","src":"14050:278:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14060:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14106:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14074:31:16"},"nodeType":"YulFunctionCall","src":"14074:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14064:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14121:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14204:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14209:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14128:75:16"},"nodeType":"YulFunctionCall","src":"14128:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14121:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14264:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"14271:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14260:3:16"},"nodeType":"YulFunctionCall","src":"14260:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14225:34:16"},"nodeType":"YulFunctionCall","src":"14225:65:16"},"nodeType":"YulExpressionStatement","src":"14225:65:16"},{"nodeType":"YulAssignment","src":"14299:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14310:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14315:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14306:3:16"},"nodeType":"YulFunctionCall","src":"14306:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14299:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14031:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14038:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14046:3:16","type":""}],"src":"13942:386:16"},{"body":{"nodeType":"YulBlock","src":"14468:137:16","statements":[{"nodeType":"YulAssignment","src":"14479:100:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14566:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14575:3:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14486:79:16"},"nodeType":"YulFunctionCall","src":"14486:93:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14479:3:16"}]},{"nodeType":"YulAssignment","src":"14589:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"14596:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14589:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14447:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14453:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14464:3:16","type":""}],"src":"14334:271:16"},{"body":{"nodeType":"YulBlock","src":"14639:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14656:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14659:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14649:6:16"},"nodeType":"YulFunctionCall","src":"14649:88:16"},"nodeType":"YulExpressionStatement","src":"14649:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14753:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14756:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14746:6:16"},"nodeType":"YulFunctionCall","src":"14746:15:16"},"nodeType":"YulExpressionStatement","src":"14746:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14777:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14780:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14770:6:16"},"nodeType":"YulFunctionCall","src":"14770:15:16"},"nodeType":"YulExpressionStatement","src":"14770:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14611:180:16"},{"body":{"nodeType":"YulBlock","src":"14839:143:16","statements":[{"nodeType":"YulAssignment","src":"14849:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14872:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14854:17:16"},"nodeType":"YulFunctionCall","src":"14854:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14849:1:16"}]},{"nodeType":"YulAssignment","src":"14883:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14906:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14888:17:16"},"nodeType":"YulFunctionCall","src":"14888:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14883:1:16"}]},{"body":{"nodeType":"YulBlock","src":"14930:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14932:16:16"},"nodeType":"YulFunctionCall","src":"14932:18:16"},"nodeType":"YulExpressionStatement","src":"14932:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14927:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14920:6:16"},"nodeType":"YulFunctionCall","src":"14920:9:16"},"nodeType":"YulIf","src":"14917:35:16"},{"nodeType":"YulAssignment","src":"14962:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14971:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"14974:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14967:3:16"},"nodeType":"YulFunctionCall","src":"14967:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14962:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14828:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"14831:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14837:1:16","type":""}],"src":"14797:185:16"},{"body":{"nodeType":"YulBlock","src":"15016:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15033:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15036:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15026:6:16"},"nodeType":"YulFunctionCall","src":"15026:88:16"},"nodeType":"YulExpressionStatement","src":"15026:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15130:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15133:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15123:6:16"},"nodeType":"YulFunctionCall","src":"15123:15:16"},"nodeType":"YulExpressionStatement","src":"15123:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15154:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15157:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15147:6:16"},"nodeType":"YulFunctionCall","src":"15147:15:16"},"nodeType":"YulExpressionStatement","src":"15147:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14988:180:16"},{"body":{"nodeType":"YulBlock","src":"15318:147:16","statements":[{"nodeType":"YulAssignment","src":"15329:110:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15418:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"15426:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"15435:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15336:81:16"},"nodeType":"YulFunctionCall","src":"15336:103:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15329:3:16"}]},{"nodeType":"YulAssignment","src":"15449:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"15456:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15449:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15289:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15295:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15303:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15314:3:16","type":""}],"src":"15174:291:16"},{"body":{"nodeType":"YulBlock","src":"15737:620:16","statements":[{"nodeType":"YulAssignment","src":"15747:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15759:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15770:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15755:3:16"},"nodeType":"YulFunctionCall","src":"15755:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15747:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15828:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15841:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15852:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15837:3:16"},"nodeType":"YulFunctionCall","src":"15837:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15784:43:16"},"nodeType":"YulFunctionCall","src":"15784:71:16"},"nodeType":"YulExpressionStatement","src":"15784:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15909:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15922:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15933:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15918:3:16"},"nodeType":"YulFunctionCall","src":"15918:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15865:43:16"},"nodeType":"YulFunctionCall","src":"15865:72:16"},"nodeType":"YulExpressionStatement","src":"15865:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15991:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16004:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16015:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16000:3:16"},"nodeType":"YulFunctionCall","src":"16000:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15947:43:16"},"nodeType":"YulFunctionCall","src":"15947:72:16"},"nodeType":"YulExpressionStatement","src":"15947:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16073:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16086:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16097:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16082:3:16"},"nodeType":"YulFunctionCall","src":"16082:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16029:43:16"},"nodeType":"YulFunctionCall","src":"16029:72:16"},"nodeType":"YulExpressionStatement","src":"16029:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16155:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16168:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16179:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16164:3:16"},"nodeType":"YulFunctionCall","src":"16164:19:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16111:43:16"},"nodeType":"YulFunctionCall","src":"16111:73:16"},"nodeType":"YulExpressionStatement","src":"16111:73:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"16238:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16251:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16262:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16247:3:16"},"nodeType":"YulFunctionCall","src":"16247:19:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16194:43:16"},"nodeType":"YulFunctionCall","src":"16194:73:16"},"nodeType":"YulExpressionStatement","src":"16194:73:16"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"16321:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16334:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16345:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16330:3:16"},"nodeType":"YulFunctionCall","src":"16330:19:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16277:43:16"},"nodeType":"YulFunctionCall","src":"16277:73:16"},"nodeType":"YulExpressionStatement","src":"16277:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15661:9:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"15673:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15681:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15689:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15697:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15705:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15713:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15721:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15732:4:16","type":""}],"src":"15471:886:16"},{"body":{"nodeType":"YulBlock","src":"16391:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16408:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16411:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16401:6:16"},"nodeType":"YulFunctionCall","src":"16401:88:16"},"nodeType":"YulExpressionStatement","src":"16401:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16505:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16508:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16498:6:16"},"nodeType":"YulFunctionCall","src":"16498:15:16"},"nodeType":"YulExpressionStatement","src":"16498:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16529:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16532:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16522:6:16"},"nodeType":"YulFunctionCall","src":"16522:15:16"},"nodeType":"YulExpressionStatement","src":"16522:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16363:180:16"},{"body":{"nodeType":"YulBlock","src":"16600:269:16","statements":[{"nodeType":"YulAssignment","src":"16610:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16624:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"16630:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16620:3:16"},"nodeType":"YulFunctionCall","src":"16620:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16610:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"16641:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16671:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"16677:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16667:3:16"},"nodeType":"YulFunctionCall","src":"16667:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16645:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"16718:51:16","statements":[{"nodeType":"YulAssignment","src":"16732:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16746:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16754:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16742:3:16"},"nodeType":"YulFunctionCall","src":"16742:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16732:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16698:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16691:6:16"},"nodeType":"YulFunctionCall","src":"16691:26:16"},"nodeType":"YulIf","src":"16688:81:16"},{"body":{"nodeType":"YulBlock","src":"16821:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16835:16:16"},"nodeType":"YulFunctionCall","src":"16835:18:16"},"nodeType":"YulExpressionStatement","src":"16835:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16785:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16808:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16816:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16805:2:16"},"nodeType":"YulFunctionCall","src":"16805:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16782:2:16"},"nodeType":"YulFunctionCall","src":"16782:38:16"},"nodeType":"YulIf","src":"16779:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16584:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16593:6:16","type":""}],"src":"16549:320:16"},{"body":{"nodeType":"YulBlock","src":"16903:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16920:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16923:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16913:6:16"},"nodeType":"YulFunctionCall","src":"16913:88:16"},"nodeType":"YulExpressionStatement","src":"16913:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17017:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17020:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17010:6:16"},"nodeType":"YulFunctionCall","src":"17010:15:16"},"nodeType":"YulExpressionStatement","src":"17010:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17041:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17044:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17034:6:16"},"nodeType":"YulFunctionCall","src":"17034:15:16"},"nodeType":"YulExpressionStatement","src":"17034:15:16"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"16875:180:16"},{"body":{"nodeType":"YulBlock","src":"17159:124:16","statements":[{"nodeType":"YulAssignment","src":"17169:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17181:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17192:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17177:3:16"},"nodeType":"YulFunctionCall","src":"17177:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17169:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17249:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17262:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17273:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17258:3:16"},"nodeType":"YulFunctionCall","src":"17258:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17205:43:16"},"nodeType":"YulFunctionCall","src":"17205:71:16"},"nodeType":"YulExpressionStatement","src":"17205:71:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17131:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17143:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17154:4:16","type":""}],"src":"17061:222:16"},{"body":{"nodeType":"YulBlock","src":"17499:454:16","statements":[{"nodeType":"YulAssignment","src":"17509:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17521:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17532:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17517:3:16"},"nodeType":"YulFunctionCall","src":"17517:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17509:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17590:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17603:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17614:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:16"},"nodeType":"YulFunctionCall","src":"17599:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17546:43:16"},"nodeType":"YulFunctionCall","src":"17546:71:16"},"nodeType":"YulExpressionStatement","src":"17546:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17671:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17684:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17695:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17680:3:16"},"nodeType":"YulFunctionCall","src":"17680:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17627:43:16"},"nodeType":"YulFunctionCall","src":"17627:72:16"},"nodeType":"YulExpressionStatement","src":"17627:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17753:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17766:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17777:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17762:3:16"},"nodeType":"YulFunctionCall","src":"17762:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17709:43:16"},"nodeType":"YulFunctionCall","src":"17709:72:16"},"nodeType":"YulExpressionStatement","src":"17709:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17835:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17848:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17859:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17844:3:16"},"nodeType":"YulFunctionCall","src":"17844:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17791:43:16"},"nodeType":"YulFunctionCall","src":"17791:72:16"},"nodeType":"YulExpressionStatement","src":"17791:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17917:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17930:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17941:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17926:3:16"},"nodeType":"YulFunctionCall","src":"17926:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17873:43:16"},"nodeType":"YulFunctionCall","src":"17873:73:16"},"nodeType":"YulExpressionStatement","src":"17873:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17439:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17451:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17459:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17467:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17475:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17483:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17494:4:16","type":""}],"src":"17289:664:16"},{"body":{"nodeType":"YulBlock","src":"18002:43:16","statements":[{"nodeType":"YulAssignment","src":"18012:27:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18027:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"18034:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18023:3:16"},"nodeType":"YulFunctionCall","src":"18023:16:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18012:7:16"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17984:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17994:7:16","type":""}],"src":"17959:86:16"},{"body":{"nodeType":"YulBlock","src":"18112:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18129:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18150:5:16"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"18134:15:16"},"nodeType":"YulFunctionCall","src":"18134:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18122:6:16"},"nodeType":"YulFunctionCall","src":"18122:35:16"},"nodeType":"YulExpressionStatement","src":"18122:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18100:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18107:3:16","type":""}],"src":"18051:112:16"},{"body":{"nodeType":"YulBlock","src":"18347:367:16","statements":[{"nodeType":"YulAssignment","src":"18357:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18369:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18380:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18365:3:16"},"nodeType":"YulFunctionCall","src":"18365:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18357:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18438:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18451:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18462:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18447:3:16"},"nodeType":"YulFunctionCall","src":"18447:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18394:43:16"},"nodeType":"YulFunctionCall","src":"18394:71:16"},"nodeType":"YulExpressionStatement","src":"18394:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18515:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18528:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18539:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18524:3:16"},"nodeType":"YulFunctionCall","src":"18524:18:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"18475:39:16"},"nodeType":"YulFunctionCall","src":"18475:68:16"},"nodeType":"YulExpressionStatement","src":"18475:68:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18597:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18610:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18621:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18606:3:16"},"nodeType":"YulFunctionCall","src":"18606:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18553:43:16"},"nodeType":"YulFunctionCall","src":"18553:72:16"},"nodeType":"YulExpressionStatement","src":"18553:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18679:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18692:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18703:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18688:3:16"},"nodeType":"YulFunctionCall","src":"18688:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18635:43:16"},"nodeType":"YulFunctionCall","src":"18635:72:16"},"nodeType":"YulExpressionStatement","src":"18635:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18295:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18307:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18315:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18323:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18331:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18342:4:16","type":""}],"src":"18169:545:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct MinimalForwarder.ForwardRequest\n    function abi_decode_t_struct$_ForwardRequest_$6125_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 192) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_struct$_ForwardRequest_$6125_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_ForwardRequest_$6125_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"MinimalForwarder: signature does\")\n\n        mstore(add(memPtr, 32), \" not match request\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a1000a56588b05caffad06969cd7617cd0867f6c7d159cd7e5aa9b3c93b18ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2307":[{"length":32,"start":1892}],"2309":[{"length":32,"start":1851}],"2311":[{"length":32,"start":1765}],"2313":[{"length":32,"start":2610}],"2315":[{"length":32,"start":2643}],"2318":[{"length":32,"start":1406}],"2321":[{"length":32,"start":1465}]},"linkReferences":{},"object":"60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008157806384b0196e146100b2578063bf5d3bdb146100e3575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610c4f565b610120565b6040516100789190610c95565b60405180910390f35b61009b60048036038101906100969190610d39565b610169565b6040516100a9929190610e60565b60405180910390f35b3480156100be57600080fd5b506100c7610315565b6040516100da9796959493929190611006565b60405180910390f35b3480156100ef57600080fd5b5061010a60048036038101906101059190610d39565b6103bf565b604051610117919061108a565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060606101788585856103bf565b6101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90611117565b60405180910390fd5b600185608001356101c89190611166565b600260008760000160208101906101df9190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906102339190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a0019061026391906111a9565b8b60000160208101906102769190610c4f565b60405160200161028893929190611293565b6040516020818303038152906040526040516102a491906112ee565b600060405180830381858888f193505050503d80600081146102e2576040519150601f19603f3d011682016040523d82523d6000602084013e6102e7565b606091505b5091509150603f87606001356102fd9190611334565b5a1161030557fe5b8181935093505050935093915050565b600060608060008060006060610329610575565b6103316105b0565b46306000801b600067ffffffffffffffff81111561035257610351611365565b5b6040519080825280602002602001820160405280156103805781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000806104c884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506104ba7fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906104419190610c4f565b8960200160208101906104549190610c4f565b8a604001358b606001358c608001358d8060a0019061047391906111a9565b604051610481929190611394565b604051809103902060405160200161049f97969594939291906113ad565b604051602081830303815290604052805190602001206105eb565b61060590919063ffffffff16565b90508460800135600260008760000160208101906104e69190610c4f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561056b575084600001602081019061053c9190610c4f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60606105ab60007f000000000000000000000000000000000000000000000000000000000000000061063190919063ffffffff16565b905090565b60606105e660017f000000000000000000000000000000000000000000000000000000000000000061063190919063ffffffff16565b905090565b60006105fe6105f86106e1565b83610798565b9050919050565b60008060008061061586866107d9565b9250925092506106258282610835565b82935050505092915050565b606060ff60001b831461064e5761064783610999565b90506106db565b81805461065a9061144b565b80601f01602080910402602001604051908101604052809291908181526020018280546106869061144b565b80156106d35780601f106106a8576101008083540402835291602001916106d3565b820191906000526020600020905b8154815290600101906020018083116106b657829003601f168201915b505050505090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561075d57507f000000000000000000000000000000000000000000000000000000000000000046145b1561078a577f00000000000000000000000000000000000000000000000000000000000000009050610795565b610792610a0d565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000806000604184510361081e5760008060006020870151925060408701519150606087015160001a905061081088828585610aa3565b95509550955050505061082e565b60006002855160001b9250925092505b9250925092565b600060038111156108495761084861147c565b5b82600381111561085c5761085b61147c565b5b031561099557600160038111156108765761087561147c565b5b8260038111156108895761088861147c565b5b036108c0576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156108d4576108d361147c565b5b8260038111156108e7576108e661147c565b5b0361092c578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016109239190610c95565b60405180910390fd5b60038081111561093f5761093e61147c565b5b8260038111156109525761095161147c565b5b0361099457806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161098b91906114ab565b60405180910390fd5b5b5050565b606060006109a683610b97565b90506000602067ffffffffffffffff8111156109c5576109c4611365565b5b6040519080825280601f01601f1916602001820160405280156109f75781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610a889594939291906114c6565b60405160208183030381529060405280519060200120905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610ae3576000600385925092509250610b8d565b600060018888888860405160008152602001604052604051610b089493929190611535565b6020604051602081039080840390855afa158015610b2a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b7e57600060016000801b93509350935050610b8d565b8060008060001b935093509350505b9450945094915050565b60008060ff8360001c169050601f811115610bde576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c1c82610bf1565b9050919050565b610c2c81610c11565b8114610c3757600080fd5b50565b600081359050610c4981610c23565b92915050565b600060208284031215610c6557610c64610be7565b5b6000610c7384828501610c3a565b91505092915050565b6000819050919050565b610c8f81610c7c565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b600080fd5b600060c08284031215610ccb57610cca610cb0565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cf957610cf8610cd4565b5b8235905067ffffffffffffffff811115610d1657610d15610cd9565b5b602083019150836001820283011115610d3257610d31610cde565b5b9250929050565b600080600060408486031215610d5257610d51610be7565b5b600084013567ffffffffffffffff811115610d7057610d6f610bec565b5b610d7c86828701610cb5565b935050602084013567ffffffffffffffff811115610d9d57610d9c610bec565b5b610da986828701610ce3565b92509250509250925092565b60008115159050919050565b610dca81610db5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0a578082015181840152602081019050610def565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e3282610dd0565b610e3c8185610ddb565b9350610e4c818560208601610dec565b610e5581610e16565b840191505092915050565b6000604082019050610e756000830185610dc1565b8181036020830152610e878184610e27565b90509392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610ec581610e90565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610ef282610ecb565b610efc8185610ed6565b9350610f0c818560208601610dec565b610f1581610e16565b840191505092915050565b610f2981610c11565b82525050565b6000819050919050565b610f4281610f2f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f7d81610c7c565b82525050565b6000610f8f8383610f74565b60208301905092915050565b6000602082019050919050565b6000610fb382610f48565b610fbd8185610f53565b9350610fc883610f64565b8060005b83811015610ff9578151610fe08882610f83565b9750610feb83610f9b565b925050600181019050610fcc565b5085935050505092915050565b600060e08201905061101b600083018a610ebc565b818103602083015261102d8189610ee7565b905081810360408301526110418188610ee7565b90506110506060830187610c86565b61105d6080830186610f20565b61106a60a0830185610f39565b81810360c083015261107c8184610fa8565b905098975050505050505050565b600060208201905061109f6000830184610dc1565b92915050565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b6000611101603283610ed6565b915061110c826110a5565b604082019050919050565b60006020820190508181036000830152611130816110f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117182610c7c565b915061117c83610c7c565b925082820190508082111561119457611193611137565b5b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126111c6576111c561119a565b5b80840192508235915067ffffffffffffffff8211156111e8576111e761119f565b5b602083019250600182023603831315611204576112036111a4565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000611232838561120c565b935061123f838584611217565b82840190509392505050565b60008160601b9050919050565b60006112638261124b565b9050919050565b600061127582611258565b9050919050565b61128d61128882610c11565b61126a565b82525050565b60006112a0828587611226565b91506112ac828461127c565b601482019150819050949350505050565b60006112c882610dd0565b6112d2818561120c565b93506112e2818560208601610dec565b80840191505092915050565b60006112fa82846112bd565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061133f82610c7c565b915061134a83610c7c565b92508261135a57611359611305565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006113a1828486611226565b91508190509392505050565b600060e0820190506113c2600083018a610f39565b6113cf6020830189610f20565b6113dc6040830188610f20565b6113e96060830187610c86565b6113f66080830186610c86565b61140360a0830185610c86565b61141060c0830184610f39565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146357607f821691505b6020821081036114765761147561141c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020820190506114c06000830184610f39565b92915050565b600060a0820190506114db6000830188610f39565b6114e86020830187610f39565b6114f56040830186610f39565b6115026060830185610c86565b61150f6080830184610f20565b9695505050505050565b600060ff82169050919050565b61152f81611519565b82525050565b600060808201905061154a6000830187610f39565b6115576020830186611526565b6115646040830185610f39565b6115716060830184610f39565b9594505050505056fea26469706673582212206ae0c16489215d643fc4adbcbf88a4cfcd1387b7aaa03bd22837ed92fc52df6d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x47153F82 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xBF5D3BDB EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x178 DUP6 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x60 ADD CALLDATALOAD DUP9 PUSH1 0x40 ADD CALLDATALOAD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST DUP12 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x3F DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1334 JUMP JUMPDEST GAS GT PUSH2 0x305 JUMPI INVALID JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x329 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x5B0 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x380 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C8 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x4BA PUSH32 0xDD8F4B70B0F4393E889BD39128A30628A78B61816A9EB8199759E7A349657E48 DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP12 PUSH1 0x60 ADD CALLDATALOAD DUP13 PUSH1 0x80 ADD CALLDATALOAD DUP14 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x49F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x605 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x56B JUMPI POP DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5AB PUSH1 0x0 PUSH32 0x0 PUSH2 0x631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E6 PUSH1 0x1 PUSH32 0x0 PUSH2 0x631 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0x6E1 JUMP JUMPDEST DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x615 DUP7 DUP7 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x625 DUP3 DUP3 PUSH2 0x835 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x64E JUMPI PUSH2 0x647 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x65A SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x686 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x75D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x78A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x792 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x810 DUP9 DUP3 DUP6 DUP6 PUSH2 0xAA3 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x995 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x92C JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x147C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x147C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x994 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9A6 DUP4 PUSH2 0xB97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA88 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xB08 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xB8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1C DUP3 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC49 DUP2 PUSH2 0xC23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC73 DUP5 DUP3 DUP6 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8F DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCB JUMPI PUSH2 0xCCA PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0xCD4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0xCD9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xD31 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0xBE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0xBEC JUMP JUMPDEST JUMPDEST PUSH2 0xD7C DUP7 DUP3 DUP8 ADD PUSH2 0xCB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0xBEC JUMP JUMPDEST JUMPDEST PUSH2 0xDA9 DUP7 DUP3 DUP8 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP3 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xE3C DUP2 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP4 POP PUSH2 0xE4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xE87 DUP2 DUP5 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC5 DUP2 PUSH2 0xE90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF2 DUP3 PUSH2 0xECB JUMP JUMPDEST PUSH2 0xEFC DUP2 DUP6 PUSH2 0xED6 JUMP JUMPDEST SWAP4 POP PUSH2 0xF0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xF15 DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF42 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F DUP4 DUP4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0xFBD DUP2 DUP6 PUSH2 0xF53 JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 DUP4 PUSH2 0xF64 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF9 JUMPI DUP2 MLOAD PUSH2 0xFE0 DUP9 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP8 POP PUSH2 0xFEB DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFCC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xEBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x102D DUP2 DUP10 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1041 DUP2 DUP9 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1050 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x105D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x106A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xF39 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x107C DUP2 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D616C466F727761726465723A207369676E617475726520646F6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206E6F74206D6174636820726571756573740000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1101 PUSH1 0x32 DUP4 PUSH2 0xED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x110C DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1130 DUP2 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1171 DUP3 PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x1137 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x11C6 JUMPI PUSH2 0x11C5 PUSH2 0x119A JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x119F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x11A4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1232 DUP4 DUP6 PUSH2 0x120C JUMP JUMPDEST SWAP4 POP PUSH2 0x123F DUP4 DUP6 DUP5 PUSH2 0x1217 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D PUSH2 0x1288 DUP3 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A0 DUP3 DUP6 DUP8 PUSH2 0x1226 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 DUP5 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP3 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x12D2 DUP2 DUP6 PUSH2 0x120C JUMP JUMPDEST SWAP4 POP PUSH2 0x12E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FA DUP3 DUP5 PUSH2 0x12BD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x133F DUP3 PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP PUSH2 0x134A DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13A1 DUP3 DUP5 DUP7 PUSH2 0x1226 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x13CF PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x13DC PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x13E9 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x13F6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1403 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1410 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1463 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x141C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x14DB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x14E8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x14F5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1502 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x150F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152F DUP2 PUSH2 0x1519 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x154A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1557 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1564 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1571 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF39 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE0C16489215D643FC4ADBC 0xBF DUP9 LOG4 0xCF 0xCD SGT DUP8 0xB7 0xAA LOG0 EXTCODESIZE 0xD2 0x28 CALLDATACOPY 0xED SWAP3 0xFC MSTORE 0xDF PUSH14 0x64736F6C63430008140033000000 ","sourceMap":"826:2111:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:1106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;5144:557:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1453:367:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1344:101;1397:7;1424;:13;1432:4;1424:13;;;;;;;;;;;;;;;;1417:20;;1344:101;;;:::o;1828:1106::-;1951:4;1957:12;1995:22;2002:3;2007:9;;1995:6;:22::i;:::-;1987:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2115:1;2103:3;:9;;;:13;;;;:::i;:::-;2083:7;:17;2091:3;:8;;;;;;;;;;:::i;:::-;2083:17;;;;;;;;;;;;;;;:33;;;;2130:12;2144:23;2171:3;:6;;;;;;;;;;:::i;:::-;:11;;2188:3;:7;;;2204:3;:9;;;2246:3;:8;;;;;;;;:::i;:::-;2256:3;:8;;;;;;;;;;:::i;:::-;2229:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2171:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:147;;;;2454:2;2444:3;:7;;;:12;;;;:::i;:::-;2431:9;:25;2427:459;;2851:9;2427:459;2906:7;2915:10;2898:28;;;;;;1828:1106;;;;;;:::o;5144:557:9:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1453:367:14:-;1545:4;1562:14;1579:163;1732:9;;1579:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:144;1120:103;1642:3;:8;;;;;;;;;;:::i;:::-;1652:3;:6;;;;;;;;;;:::i;:::-;1660:3;:9;;;1671:3;:7;;;1680:3;:9;;;1701:3;:8;;;;;;;;:::i;:::-;1691:19;;;;;;;:::i;:::-;;;;;;;;1620:91;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1610:102;;;;;;1579:16;:144::i;:::-;:152;;:163;;;;:::i;:::-;1562:180;;1781:3;:9;;;1760:7;:17;1768:3;:8;;;;;;;;;;:::i;:::-;1760:17;;;;;;;;;;;;;;;;:30;:52;;;;;1804:3;:8;;;;;;;;;;:::i;:::-;1794:18;;:6;:18;;;1760:52;1753:59;;;1453:367;;;;;:::o;6021:126:9:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;3714:255:8:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;3358:267:5:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3845:262:9:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;3326:374:10:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;2129:778:8:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:5:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;4113:179:9:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;5203:1551:8:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;2528:245:5:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;88:117:16:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:117::-;1720:1;1717;1710:12;1780:239;1860:5;1901:3;1892:6;1887:3;1883:16;1879:26;1876:113;;;1908:79;;:::i;:::-;1876:113;2007:6;1998:15;;1780:239;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:117;2257:1;2254;2247:12;2271:117;2380:1;2377;2370:12;2407:552;2464:8;2474:6;2524:3;2517:4;2509:6;2505:17;2501:27;2491:122;;2532:79;;:::i;:::-;2491:122;2645:6;2632:20;2622:30;;2675:18;2667:6;2664:30;2661:117;;;2697:79;;:::i;:::-;2661:117;2811:4;2803:6;2799:17;2787:29;;2865:3;2857:4;2849:6;2845:17;2835:8;2831:32;2828:41;2825:128;;;2872:79;;:::i;:::-;2825:128;2407:552;;;;;:::o;2965:900::-;3078:6;3086;3094;3143:2;3131:9;3122:7;3118:23;3114:32;3111:119;;;3149:79;;:::i;:::-;3111:119;3297:1;3286:9;3282:17;3269:31;3327:18;3319:6;3316:30;3313:117;;;3349:79;;:::i;:::-;3313:117;3454:87;3533:7;3524:6;3513:9;3509:22;3454:87;:::i;:::-;3444:97;;3240:311;3618:2;3607:9;3603:18;3590:32;3649:18;3641:6;3638:30;3635:117;;;3671:79;;:::i;:::-;3635:117;3784:64;3840:7;3831:6;3820:9;3816:22;3784:64;:::i;:::-;3766:82;;;;3561:297;2965:900;;;;;:::o;3871:90::-;3905:7;3948:5;3941:13;3934:21;3923:32;;3871:90;;;:::o;3967:109::-;4048:21;4063:5;4048:21;:::i;:::-;4043:3;4036:34;3967:109;;:::o;4082:98::-;4133:6;4167:5;4161:12;4151:22;;4082:98;;;:::o;4186:168::-;4269:11;4303:6;4298:3;4291:19;4343:4;4338:3;4334:14;4319:29;;4186:168;;;;:::o;4360:246::-;4441:1;4451:113;4465:6;4462:1;4459:13;4451:113;;;4550:1;4545:3;4541:11;4535:18;4531:1;4526:3;4522:11;4515:39;4487:2;4484:1;4480:10;4475:15;;4451:113;;;4598:1;4589:6;4584:3;4580:16;4573:27;4422:184;4360:246;;;:::o;4612:102::-;4653:6;4704:2;4700:7;4695:2;4688:5;4684:14;4680:28;4670:38;;4612:102;;;:::o;4720:373::-;4806:3;4834:38;4866:5;4834:38;:::i;:::-;4888:70;4951:6;4946:3;4888:70;:::i;:::-;4881:77;;4967:65;5025:6;5020:3;5013:4;5006:5;5002:16;4967:65;:::i;:::-;5057:29;5079:6;5057:29;:::i;:::-;5052:3;5048:39;5041:46;;4810:283;4720:373;;;;:::o;5099:407::-;5232:4;5270:2;5259:9;5255:18;5247:26;;5283:65;5345:1;5334:9;5330:17;5321:6;5283:65;:::i;:::-;5395:9;5389:4;5385:20;5380:2;5369:9;5365:18;5358:48;5423:76;5494:4;5485:6;5423:76;:::i;:::-;5415:84;;5099:407;;;;;:::o;5512:149::-;5548:7;5588:66;5581:5;5577:78;5566:89;;5512:149;;;:::o;5667:115::-;5752:23;5769:5;5752:23;:::i;:::-;5747:3;5740:36;5667:115;;:::o;5788:99::-;5840:6;5874:5;5868:12;5858:22;;5788:99;;;:::o;5893:169::-;5977:11;6011:6;6006:3;5999:19;6051:4;6046:3;6042:14;6027:29;;5893:169;;;;:::o;6068:377::-;6156:3;6184:39;6217:5;6184:39;:::i;:::-;6239:71;6303:6;6298:3;6239:71;:::i;:::-;6232:78;;6319:65;6377:6;6372:3;6365:4;6358:5;6354:16;6319:65;:::i;:::-;6409:29;6431:6;6409:29;:::i;:::-;6404:3;6400:39;6393:46;;6160:285;6068:377;;;;:::o;6451:118::-;6538:24;6556:5;6538:24;:::i;:::-;6533:3;6526:37;6451:118;;:::o;6575:77::-;6612:7;6641:5;6630:16;;6575:77;;;:::o;6658:118::-;6745:24;6763:5;6745:24;:::i;:::-;6740:3;6733:37;6658:118;;:::o;6782:114::-;6849:6;6883:5;6877:12;6867:22;;6782:114;;;:::o;6902:184::-;7001:11;7035:6;7030:3;7023:19;7075:4;7070:3;7066:14;7051:29;;6902:184;;;;:::o;7092:132::-;7159:4;7182:3;7174:11;;7212:4;7207:3;7203:14;7195:22;;7092:132;;;:::o;7230:108::-;7307:24;7325:5;7307:24;:::i;:::-;7302:3;7295:37;7230:108;;:::o;7344:179::-;7413:10;7434:46;7476:3;7468:6;7434:46;:::i;:::-;7512:4;7507:3;7503:14;7489:28;;7344:179;;;;:::o;7529:113::-;7599:4;7631;7626:3;7622:14;7614:22;;7529:113;;;:::o;7678:732::-;7797:3;7826:54;7874:5;7826:54;:::i;:::-;7896:86;7975:6;7970:3;7896:86;:::i;:::-;7889:93;;8006:56;8056:5;8006:56;:::i;:::-;8085:7;8116:1;8101:284;8126:6;8123:1;8120:13;8101:284;;;8202:6;8196:13;8229:63;8288:3;8273:13;8229:63;:::i;:::-;8222:70;;8315:60;8368:6;8315:60;:::i;:::-;8305:70;;8161:224;8148:1;8145;8141:9;8136:14;;8101:284;;;8105:14;8401:3;8394:10;;7802:608;;;7678:732;;;;:::o;8416:1215::-;8765:4;8803:3;8792:9;8788:19;8780:27;;8817:69;8883:1;8872:9;8868:17;8859:6;8817:69;:::i;:::-;8933:9;8927:4;8923:20;8918:2;8907:9;8903:18;8896:48;8961:78;9034:4;9025:6;8961:78;:::i;:::-;8953:86;;9086:9;9080:4;9076:20;9071:2;9060:9;9056:18;9049:48;9114:78;9187:4;9178:6;9114:78;:::i;:::-;9106:86;;9202:72;9270:2;9259:9;9255:18;9246:6;9202:72;:::i;:::-;9284:73;9352:3;9341:9;9337:19;9328:6;9284:73;:::i;:::-;9367;9435:3;9424:9;9420:19;9411:6;9367:73;:::i;:::-;9488:9;9482:4;9478:20;9472:3;9461:9;9457:19;9450:49;9516:108;9619:4;9610:6;9516:108;:::i;:::-;9508:116;;8416:1215;;;;;;;;;;:::o;9637:210::-;9724:4;9762:2;9751:9;9747:18;9739:26;;9775:65;9837:1;9826:9;9822:17;9813:6;9775:65;:::i;:::-;9637:210;;;;:::o;9853:237::-;9993:34;9989:1;9981:6;9977:14;9970:58;10062:20;10057:2;10049:6;10045:15;10038:45;9853:237;:::o;10096:366::-;10238:3;10259:67;10323:2;10318:3;10259:67;:::i;:::-;10252:74;;10335:93;10424:3;10335:93;:::i;:::-;10453:2;10448:3;10444:12;10437:19;;10096:366;;;:::o;10468:419::-;10634:4;10672:2;10661:9;10657:18;10649:26;;10721:9;10715:4;10711:20;10707:1;10696:9;10692:17;10685:47;10749:131;10875:4;10749:131;:::i;:::-;10741:139;;10468:419;;;:::o;10893:180::-;10941:77;10938:1;10931:88;11038:4;11035:1;11028:15;11062:4;11059:1;11052:15;11079:191;11119:3;11138:20;11156:1;11138:20;:::i;:::-;11133:25;;11172:20;11190:1;11172:20;:::i;:::-;11167:25;;11215:1;11212;11208:9;11201:16;;11236:3;11233:1;11230:10;11227:36;;;11243:18;;:::i;:::-;11227:36;11079:191;;;;:::o;11276:117::-;11385:1;11382;11375:12;11399:117;11508:1;11505;11498:12;11522:117;11631:1;11628;11621:12;11645:724;11722:4;11728:6;11784:11;11771:25;11884:1;11878:4;11874:12;11863:8;11847:14;11843:29;11839:48;11819:18;11815:73;11805:168;;11892:79;;:::i;:::-;11805:168;12004:18;11994:8;11990:33;11982:41;;12056:4;12043:18;12033:28;;12084:18;12076:6;12073:30;12070:117;;;12106:79;;:::i;:::-;12070:117;12214:2;12208:4;12204:13;12196:21;;12271:4;12263:6;12259:17;12243:14;12239:38;12233:4;12229:49;12226:136;;;12281:79;;:::i;:::-;12226:136;11735:634;11645:724;;;;;:::o;12375:147::-;12476:11;12513:3;12498:18;;12375:147;;;;:::o;12528:146::-;12625:6;12620:3;12615;12602:30;12666:1;12657:6;12652:3;12648:16;12641:27;12528:146;;;:::o;12702:327::-;12816:3;12837:88;12918:6;12913:3;12837:88;:::i;:::-;12830:95;;12935:56;12984:6;12979:3;12972:5;12935:56;:::i;:::-;13016:6;13011:3;13007:16;13000:23;;12702:327;;;;;:::o;13035:94::-;13068:8;13116:5;13112:2;13108:14;13087:35;;13035:94;;;:::o;13135:::-;13174:7;13203:20;13217:5;13203:20;:::i;:::-;13192:31;;13135:94;;;:::o;13235:100::-;13274:7;13303:26;13323:5;13303:26;:::i;:::-;13292:37;;13235:100;;;:::o;13341:157::-;13446:45;13466:24;13484:5;13466:24;:::i;:::-;13446:45;:::i;:::-;13441:3;13434:58;13341:157;;:::o;13504:432::-;13672:3;13694:103;13793:3;13784:6;13776;13694:103;:::i;:::-;13687:110;;13807:75;13878:3;13869:6;13807:75;:::i;:::-;13907:2;13902:3;13898:12;13891:19;;13927:3;13920:10;;13504:432;;;;;;:::o;13942:386::-;14046:3;14074:38;14106:5;14074:38;:::i;:::-;14128:88;14209:6;14204:3;14128:88;:::i;:::-;14121:95;;14225:65;14283:6;14278:3;14271:4;14264:5;14260:16;14225:65;:::i;:::-;14315:6;14310:3;14306:16;14299:23;;14050:278;13942:386;;;;:::o;14334:271::-;14464:3;14486:93;14575:3;14566:6;14486:93;:::i;:::-;14479:100;;14596:3;14589:10;;14334:271;;;;:::o;14611:180::-;14659:77;14656:1;14649:88;14756:4;14753:1;14746:15;14780:4;14777:1;14770:15;14797:185;14837:1;14854:20;14872:1;14854:20;:::i;:::-;14849:25;;14888:20;14906:1;14888:20;:::i;:::-;14883:25;;14927:1;14917:35;;14932:18;;:::i;:::-;14917:35;14974:1;14971;14967:9;14962:14;;14797:185;;;;:::o;14988:180::-;15036:77;15033:1;15026:88;15133:4;15130:1;15123:15;15157:4;15154:1;15147:15;15174:291;15314:3;15336:103;15435:3;15426:6;15418;15336:103;:::i;:::-;15329:110;;15456:3;15449:10;;15174:291;;;;;:::o;15471:886::-;15732:4;15770:3;15759:9;15755:19;15747:27;;15784:71;15852:1;15841:9;15837:17;15828:6;15784:71;:::i;:::-;15865:72;15933:2;15922:9;15918:18;15909:6;15865:72;:::i;:::-;15947;16015:2;16004:9;16000:18;15991:6;15947:72;:::i;:::-;16029;16097:2;16086:9;16082:18;16073:6;16029:72;:::i;:::-;16111:73;16179:3;16168:9;16164:19;16155:6;16111:73;:::i;:::-;16194;16262:3;16251:9;16247:19;16238:6;16194:73;:::i;:::-;16277;16345:3;16334:9;16330:19;16321:6;16277:73;:::i;:::-;15471:886;;;;;;;;;;:::o;16363:180::-;16411:77;16408:1;16401:88;16508:4;16505:1;16498:15;16532:4;16529:1;16522:15;16549:320;16593:6;16630:1;16624:4;16620:12;16610:22;;16677:1;16671:4;16667:12;16698:18;16688:81;;16754:4;16746:6;16742:17;16732:27;;16688:81;16816:2;16808:6;16805:14;16785:18;16782:38;16779:84;;16835:18;;:::i;:::-;16779:84;16600:269;16549:320;;;:::o;16875:180::-;16923:77;16920:1;16913:88;17020:4;17017:1;17010:15;17044:4;17041:1;17034:15;17061:222;17154:4;17192:2;17181:9;17177:18;17169:26;;17205:71;17273:1;17262:9;17258:17;17249:6;17205:71;:::i;:::-;17061:222;;;;:::o;17289:664::-;17494:4;17532:3;17521:9;17517:19;17509:27;;17546:71;17614:1;17603:9;17599:17;17590:6;17546:71;:::i;:::-;17627:72;17695:2;17684:9;17680:18;17671:6;17627:72;:::i;:::-;17709;17777:2;17766:9;17762:18;17753:6;17709:72;:::i;:::-;17791;17859:2;17848:9;17844:18;17835:6;17791:72;:::i;:::-;17873:73;17941:3;17930:9;17926:19;17917:6;17873:73;:::i;:::-;17289:664;;;;;;;;:::o;17959:86::-;17994:7;18034:4;18027:5;18023:16;18012:27;;17959:86;;;:::o;18051:112::-;18134:22;18150:5;18134:22;:::i;:::-;18129:3;18122:35;18051:112;;:::o;18169:545::-;18342:4;18380:3;18369:9;18365:19;18357:27;;18394:71;18462:1;18451:9;18447:17;18438:6;18394:71;:::i;:::-;18475:68;18539:2;18528:9;18524:18;18515:6;18475:68;:::i;:::-;18553:72;18621:2;18610:9;18606:18;18597:6;18553:72;:::i;:::-;18635;18703:2;18692:9;18688:18;18679:6;18635:72;:::i;:::-;18169:545;;;;;;;:::o"},"methodIdentifiers":{"eip712Domain()":"84b0196e","execute((address,address,uint256,uint256,uint256,bytes),bytes)":"47153f82","getNonce(address)":"2d0335ab","verify((address,address,uint256,uint256,uint256,bytes),bytes)":"bf5d3bdb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MinimalForwarder.ForwardRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MinimalForwarder.ForwardRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple minimal forwarder to be used together with an ERC2771 compatible contract. See {ERC2771Context}. MinimalForwarder is mainly meant for testing, as it is missing features to be a good production-ready forwarder. This contract does not intend to have all the properties that are needed for a sound forwarding system. A fully functioning forwarding system with good properties requires more complexity. We suggest you look at other projects such as the GSN which do have the goal of building a system like that.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MinimalForwarder.sol\":\"MinimalForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MinimalForwarder.sol\":{\"keccak256\":\"0x7f3786eaba535fa3a159bb39f7f039ae6098a5cdf75d4ca64cec20e66dfc9eeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://771328ce52abddc492fe759832b9b558664c93c3fe43d0ba8bad8d61d70924f2\",\"dweb:/ipfs/QmdLjpV5j8C23o1dHtaPupxKa8yHfUNPzdd3QMSACh61Rv\"]}},\"version\":1}"}},"contracts/Student.sol":{"StudentRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"_trustedForwarder","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"student","type":"address"},{"indexed":false,"internalType":"string","name":"studentID","type":"string"}],"name":"StudentRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"student","type":"address"},{"indexed":false,"internalType":"string","name":"newStudentID","type":"string"}],"name":"StudentUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"_studentAddress","type":"address"}],"name":"getStudent","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_studentID","type":"string"}],"name":"registerStudent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_studentAddress","type":"address"},{"internalType":"string","name":"_newStudentID","type":"string"}],"name":"updateStudent","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_193":{"entryPoint":null,"id":193,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6316":{"entryPoint":null,"id":6316,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":252,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":604,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":621,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":453,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":448,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":505,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1551:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"759:80:16","statements":[{"nodeType":"YulAssignment","src":"769:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:16"},"nodeType":"YulFunctionCall","src":"778:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:16"},"nodeType":"YulFunctionCall","src":"800:33:16"},"nodeType":"YulExpressionStatement","src":"800:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:16","type":""}],"src":"696:143:16"},{"body":{"nodeType":"YulBlock","src":"922:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:16"},"nodeType":"YulFunctionCall","src":"970:79:16"},"nodeType":"YulExpressionStatement","src":"970:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:16"},"nodeType":"YulFunctionCall","src":"939:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:16"},"nodeType":"YulFunctionCall","src":"935:32:16"},"nodeType":"YulIf","src":"932:119:16"},{"nodeType":"YulBlock","src":"1061:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:16"},"nodeType":"YulFunctionCall","src":"1147:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:16"},"nodeType":"YulFunctionCall","src":"1115:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:16","type":""}],"src":"845:351:16"},{"body":{"nodeType":"YulBlock","src":"1267:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:16"},"nodeType":"YulFunctionCall","src":"1289:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:16"},"nodeType":"YulFunctionCall","src":"1277:37:16"},"nodeType":"YulExpressionStatement","src":"1277:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:16","type":""}],"src":"1202:118:16"},{"body":{"nodeType":"YulBlock","src":"1424:124:16","statements":[{"nodeType":"YulAssignment","src":"1434:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:16"},"nodeType":"YulFunctionCall","src":"1442:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:16"},"nodeType":"YulFunctionCall","src":"1523:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:16"},"nodeType":"YulFunctionCall","src":"1470:71:16"},"nodeType":"YulExpressionStatement","src":"1470:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:16","type":""}],"src":"1326:222:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620015873803806200158783398181016040528101906200003791906200022a565b33818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000e35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000da91906200026d565b60405180910390fd5b620000f481620000fc60201b60201c565b50506200028a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f282620001c5565b9050919050565b6200020481620001e5565b81146200021057600080fd5b50565b6000815190506200022481620001f9565b92915050565b600060208284031215620002435762000242620001c0565b5b6000620002538482850162000213565b91505092915050565b6200026781620001e5565b82525050565b60006020820190506200028460008301846200025c565b92915050565b6080516112e1620002a6600039600061068801526112e16000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806371e174451161005b57806371e17445146101135780637da0a8771461012f5780638da5cb5b1461014d578063f2fde38b1461016b57610088565b8063302056241461008d578063572b6c05146100a95780636b7b44d7146100d9578063715018a614610109575b600080fd5b6100a760048036038101906100a29190610b02565b610187565b005b6100c360048036038101906100be9190610b5e565b610304565b6040516100d09190610ba6565b60405180910390f35b6100f360048036038101906100ee9190610b5e565b610343565b6040516101009190610c40565b60405180910390f35b6101116104a6565b005b61012d60048036038101906101289190610c62565b6104ba565b005b610137610684565b6040516101449190610cba565b60405180910390f35b6101556106ac565b6040516101629190610cba565b60405180910390f35b61018560048036038101906101809190610b5e565b6106d5565b005b61018f61075b565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1661021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590610d21565b60405180910390fd5b6000815111610262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025990610d8d565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816102b19190610fc3565b508173ffffffffffffffffffffffffffffffffffffffff167f5d96587cd7638c0254288e0ebecb53200b69da0dd775bcc5be707492a811ed11826040516102f89190610c40565b60405180910390a25050565b600061030e610684565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90610d21565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461042190610ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461044d90610ddc565b801561049a5780601f1061046f5761010080835404028352916020019161049a565b820191906000526020600020905b81548152906001019060200180831161047d57829003601f168201915b50505050509050919050565b6104ae61075b565b6104b860006107e2565b565b600160006104c66108a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610551576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610548906110e1565b60405180910390fd5b6000815111610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c9061114d565b60405180910390fd5b604051806040016040528082815260200160011515815250600160006105b96108a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816106089190610fc3565b5060208201518160010160006101000a81548160ff0219169083151502179055509050506106346108a6565b73ffffffffffffffffffffffffffffffffffffffff167fc1b20826100814ba286ac576fe980df1dbbcef3d904bb81f3d69a0e8280dc114826040516106799190610c40565b60405180910390a250565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106dd61075b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107469190610cba565b60405180910390fd5b610758816107e2565b50565b6107636108a6565b73ffffffffffffffffffffffffffffffffffffffff166107816106ac565b73ffffffffffffffffffffffffffffffffffffffff16146107e0576107a46108a6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107d79190610cba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006108b06108b5565b905090565b6000806000369050905060006108c961092a565b90506108d433610304565b80156108e05750808210155b1561091a5760003682846108f4919061119c565b908092610903939291906111da565b9061090e919061124c565b60601c92505050610927565b610922610939565b925050505b90565b6000610934610941565b905090565b600033905090565b60006014905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109898261095e565b9050919050565b6109998161097e565b81146109a457600080fd5b50565b6000813590506109b681610990565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0f826109c6565b810181811067ffffffffffffffff82111715610a2e57610a2d6109d7565b5b80604052505050565b6000610a4161094a565b9050610a4d8282610a06565b919050565b600067ffffffffffffffff821115610a6d57610a6c6109d7565b5b610a76826109c6565b9050602081019050919050565b82818337600083830152505050565b6000610aa5610aa084610a52565b610a37565b905082815260208101848484011115610ac157610ac06109c1565b5b610acc848285610a83565b509392505050565b600082601f830112610ae957610ae86109bc565b5b8135610af9848260208601610a92565b91505092915050565b60008060408385031215610b1957610b18610954565b5b6000610b27858286016109a7565b925050602083013567ffffffffffffffff811115610b4857610b47610959565b5b610b5485828601610ad4565b9150509250929050565b600060208284031215610b7457610b73610954565b5b6000610b82848285016109a7565b91505092915050565b60008115159050919050565b610ba081610b8b565b82525050565b6000602082019050610bbb6000830184610b97565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bfb578082015181840152602081019050610be0565b60008484015250505050565b6000610c1282610bc1565b610c1c8185610bcc565b9350610c2c818560208601610bdd565b610c35816109c6565b840191505092915050565b60006020820190508181036000830152610c5a8184610c07565b905092915050565b600060208284031215610c7857610c77610954565b5b600082013567ffffffffffffffff811115610c9657610c95610959565b5b610ca284828501610ad4565b91505092915050565b610cb48161097e565b82525050565b6000602082019050610ccf6000830184610cab565b92915050565b7f53747564656e74206e6f7420666f756e64000000000000000000000000000000600082015250565b6000610d0b601183610bcc565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b9050919050565b7f4e65772053747564656e742049442063616e6e6f7420626520656d7074790000600082015250565b6000610d77601e83610bcc565b9150610d8282610d41565b602082019050919050565b60006020820190508181036000830152610da681610d6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610df457607f821691505b602082108103610e0757610e06610dad565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e6f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e32565b610e798683610e32565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610ec0610ebb610eb684610e91565b610e9b565b610e91565b9050919050565b6000819050919050565b610eda83610ea5565b610eee610ee682610ec7565b848454610e3f565b825550505050565b600090565b610f03610ef6565b610f0e818484610ed1565b505050565b5b81811015610f3257610f27600082610efb565b600181019050610f14565b5050565b601f821115610f7757610f4881610e0d565b610f5184610e22565b81016020851015610f60578190505b610f74610f6c85610e22565b830182610f13565b50505b505050565b600082821c905092915050565b6000610f9a60001984600802610f7c565b1980831691505092915050565b6000610fb38383610f89565b9150826002028217905092915050565b610fcc82610bc1565b67ffffffffffffffff811115610fe557610fe46109d7565b5b610fef8254610ddc565b610ffa828285610f36565b600060209050601f83116001811461102d576000841561101b578287015190505b6110258582610fa7565b86555061108d565b601f19841661103b86610e0d565b60005b828110156110635784890151825560018201915060208501945060208101905061103e565b86831015611080578489015161107c601f891682610f89565b8355505b6001600288020188555050505b505050505050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b60006110cb601283610bcc565b91506110d682611095565b602082019050919050565b600060208201905081810360008301526110fa816110be565b9050919050565b7f53747564656e742049442063616e6e6f7420626520656d707479000000000000600082015250565b6000611137601a83610bcc565b915061114282611101565b602082019050919050565b600060208201905081810360008301526111668161112a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111a782610e91565b91506111b283610e91565b92508282039050818111156111ca576111c961116d565b5b92915050565b600080fd5b600080fd5b600080858511156111ee576111ed6111d0565b5b838611156111ff576111fe6111d5565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006112588383611215565b826112638135611220565b925060148210156112a35761129e7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802610e32565b831692505b50509291505056fea26469706673582212206830246f49d1701ea63087bf4bd80f7c6dc6151cf884c3f28c2ca3879c0f3c2664736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1587 CODESIZE SUB DUP1 PUSH3 0x1587 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x22A JUMP JUMPDEST CALLER DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xE3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDA SWAP2 SWAP1 PUSH3 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4 DUP2 PUSH3 0xFC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x28A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F2 DUP3 PUSH3 0x1C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x204 DUP2 PUSH3 0x1E5 JUMP JUMPDEST DUP2 EQ PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x224 DUP2 PUSH3 0x1F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x243 JUMPI PUSH3 0x242 PUSH3 0x1C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x253 DUP5 DUP3 DUP6 ADD PUSH3 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x267 DUP2 PUSH3 0x1E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x12E1 PUSH3 0x2A6 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x688 ADD MSTORE PUSH2 0x12E1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71E17445 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x71E17445 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x30205624 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x6B7B44D7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x75B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D96587CD7638C0254288E0EBECB53200B69DA0DD775BCC5BE707492A811ED11 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x75B JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x0 PUSH2 0x7E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x5B9 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x634 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1B20826100814BA286AC576FE980DF1DBBCEF3D904BB81F3D69A0E8280DC114 DUP3 PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6DD PUSH2 0x75B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x763 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x781 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E0 JUMPI PUSH2 0x7A4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH2 0x8C9 PUSH2 0x92A JUMP JUMPDEST SWAP1 POP PUSH2 0x8D4 CALLER PUSH2 0x304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E0 JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 CALLDATASIZE DUP3 DUP5 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 DUP1 SWAP3 PUSH2 0x903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11DA JUMP JUMPDEST SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0x927 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x939 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x934 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x999 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP2 EQ PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B6 DUP2 PUSH2 0x990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0F DUP3 PUSH2 0x9C6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2D PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0x94A JUMP JUMPDEST SWAP1 POP PUSH2 0xA4D DUP3 DUP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA6D JUMPI PUSH2 0xA6C PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST PUSH2 0xA76 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA5 PUSH2 0xAA0 DUP5 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAC1 JUMPI PUSH2 0xAC0 PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH2 0xACC DUP5 DUP3 DUP6 PUSH2 0xA83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE9 JUMPI PUSH2 0xAE8 PUSH2 0x9BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP6 DUP3 DUP7 ADD PUSH2 0x9A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x959 JUMP JUMPDEST JUMPDEST PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB82 DUP5 DUP3 DUP6 ADD PUSH2 0x9A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBFB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC12 DUP3 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC1C DUP2 DUP6 PUSH2 0xBCC JUMP JUMPDEST SWAP4 POP PUSH2 0xC2C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC5A DUP2 DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC77 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0x959 JUMP JUMPDEST JUMPDEST PUSH2 0xCA2 DUP5 DUP3 DUP6 ADD PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53747564656E74206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B PUSH1 0x11 DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0xD16 DUP3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65772053747564656E742049442063616E6E6F7420626520656D7074790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 PUSH1 0x1E DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0xD82 DUP3 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA6 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE07 JUMPI PUSH2 0xE06 PUSH2 0xDAD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xE6F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0xE79 DUP7 DUP4 PUSH2 0xE32 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC0 PUSH2 0xEBB PUSH2 0xEB6 DUP5 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xEEE PUSH2 0xEE6 DUP3 PUSH2 0xEC7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xE3F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xF03 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0xF0E DUP2 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF27 PUSH1 0x0 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF48 DUP2 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xF51 DUP5 PUSH2 0xE22 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xF60 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xF74 PUSH2 0xF6C DUP6 PUSH2 0xE22 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xF13 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xF7C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP4 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0xBC1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST PUSH2 0xFEF DUP3 SLOAD PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xFFA DUP3 DUP3 DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x101B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1025 DUP6 DUP3 PUSH2 0xFA7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x103B DUP7 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1063 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x103E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1080 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x107C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xF89 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CB PUSH1 0x12 DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FA DUP2 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53747564656E742049442063616E6E6F7420626520656D707479000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1137 PUSH1 0x1A DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0x1142 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1166 DUP2 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP4 PUSH2 0xE91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0x116D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x11EE JUMPI PUSH2 0x11ED PUSH2 0x11D0 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x11D5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP4 DUP4 PUSH2 0x1215 JUMP JUMPDEST DUP3 PUSH2 0x1263 DUP2 CALLDATALOAD PUSH2 0x1220 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x129E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0xE32 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x30246F49D1701EA630 DUP8 0xBF 0x4B 0xD8 0xF PUSH29 0x6DC6151CF884C3F28C2CA3879C0F3C2664736F6C634300081400330000 ","sourceMap":"178:1977:15:-:0;;;522:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;603:10;576:17;1520::2;1500:37;;;;;;;;;;1451:93;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;522:95:15;178:1977;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;178:1977:15:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1883,"id":84,"parameterSlots":0,"returnSlots":0},"@_contextSuffixLength_314":{"entryPoint":2369,"id":314,"parameterSlots":0,"returnSlots":1},"@_contextSuffixLength_6466":{"entryPoint":2346,"id":6466,"parameterSlots":0,"returnSlots":1},"@_msgSender_263":{"entryPoint":2229,"id":263,"parameterSlots":0,"returnSlots":1},"@_msgSender_327":{"entryPoint":2361,"id":327,"parameterSlots":0,"returnSlots":1},"@_msgSender_6440":{"entryPoint":2214,"id":6440,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2018,"id":146,"parameterSlots":1,"returnSlots":0},"@getStudent_6427":{"entryPoint":835,"id":6427,"parameterSlots":1,"returnSlots":1},"@isTrustedForwarder_216":{"entryPoint":772,"id":216,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1708,"id":67,"parameterSlots":0,"returnSlots":1},"@registerStudent_6365":{"entryPoint":1210,"id":6365,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1190,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1749,"id":126,"parameterSlots":1,"returnSlots":0},"@trustedForwarder_202":{"entryPoint":1668,"id":202,"parameterSlots":0,"returnSlots":1},"@updateStudent_6406":{"entryPoint":391,"id":6406,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2706,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":2818,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":3170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3243,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2967,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf_to_t_string_memory_ptr_fromStack":{"entryPoint":4394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2_to_t_string_memory_ptr_fromStack":{"entryPoint":4286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e_to_t_string_memory_ptr_fromStack":{"entryPoint":3326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef_to_t_string_memory_ptr_fromStack":{"entryPoint":3434,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4429,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2615,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2378,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2642,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3597,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":4629,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3009,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3020,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":4570,"id":null,"parameterSlots":4,"returnSlots":2},"checked_sub_t_uint256":{"entryPoint":4508,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3894,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2430,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2955,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":4640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2398,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3729,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3859,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":4684,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":3749,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4035,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2691,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3037,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3618,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3548,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2566,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3739,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3977,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4461,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3501,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2519,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3783,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2492,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":4565,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":4560,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2497,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2393,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2388,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2502,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3634,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3964,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3835,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf":{"entryPoint":4353,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2":{"entryPoint":4245,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e":{"entryPoint":3285,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3647,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3793,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2448,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3830,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17434:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"748:87:16","statements":[{"nodeType":"YulAssignment","src":"758:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:16"},"nodeType":"YulFunctionCall","src":"767:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:16"},"nodeType":"YulFunctionCall","src":"796:33:16"},"nodeType":"YulExpressionStatement","src":"796:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:16","type":""}],"src":"696:139:16"},{"body":{"nodeType":"YulBlock","src":"930:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"947:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"950:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"940:6:16"},"nodeType":"YulFunctionCall","src":"940:12:16"},"nodeType":"YulExpressionStatement","src":"940:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"841:117:16"},{"body":{"nodeType":"YulBlock","src":"1053:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1070:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1073:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1063:6:16"},"nodeType":"YulFunctionCall","src":"1063:12:16"},"nodeType":"YulExpressionStatement","src":"1063:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"964:117:16"},{"body":{"nodeType":"YulBlock","src":"1135:54:16","statements":[{"nodeType":"YulAssignment","src":"1145:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1163:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1170:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:16"},"nodeType":"YulFunctionCall","src":"1159:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1175:3:16"},"nodeType":"YulFunctionCall","src":"1175:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1155:3:16"},"nodeType":"YulFunctionCall","src":"1155:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1145:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1118:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1128:6:16","type":""}],"src":"1087:102:16"},{"body":{"nodeType":"YulBlock","src":"1223:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1240:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1243:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1233:6:16"},"nodeType":"YulFunctionCall","src":"1233:88:16"},"nodeType":"YulExpressionStatement","src":"1233:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1337:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1340:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1330:6:16"},"nodeType":"YulFunctionCall","src":"1330:15:16"},"nodeType":"YulExpressionStatement","src":"1330:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1364:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1354:6:16"},"nodeType":"YulFunctionCall","src":"1354:15:16"},"nodeType":"YulExpressionStatement","src":"1354:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1195:180:16"},{"body":{"nodeType":"YulBlock","src":"1424:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1456:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1486:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1464:21:16"},"nodeType":"YulFunctionCall","src":"1464:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1452:3:16"},"nodeType":"YulFunctionCall","src":"1452:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1438:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1603:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1605:16:16"},"nodeType":"YulFunctionCall","src":"1605:18:16"},"nodeType":"YulExpressionStatement","src":"1605:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1546:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1558:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1543:2:16"},"nodeType":"YulFunctionCall","src":"1543:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1582:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1594:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1579:2:16"},"nodeType":"YulFunctionCall","src":"1579:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1540:2:16"},"nodeType":"YulFunctionCall","src":"1540:62:16"},"nodeType":"YulIf","src":"1537:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1641:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1645:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:16"},"nodeType":"YulFunctionCall","src":"1634:22:16"},"nodeType":"YulExpressionStatement","src":"1634:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1410:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"1418:4:16","type":""}],"src":"1381:281:16"},{"body":{"nodeType":"YulBlock","src":"1709:88:16","statements":[{"nodeType":"YulAssignment","src":"1719:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:16"},"nodeType":"YulFunctionCall","src":"1729:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:16"},"nodeType":"YulFunctionCall","src":"1758:33:16"},"nodeType":"YulExpressionStatement","src":"1758:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:16","type":""}],"src":"1668:129:16"},{"body":{"nodeType":"YulBlock","src":"1870:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1975:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1977:16:16"},"nodeType":"YulFunctionCall","src":"1977:18:16"},"nodeType":"YulExpressionStatement","src":"1977:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1947:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1955:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1944:2:16"},"nodeType":"YulFunctionCall","src":"1944:30:16"},"nodeType":"YulIf","src":"1941:56:16"},{"nodeType":"YulAssignment","src":"2007:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2037:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2015:21:16"},"nodeType":"YulFunctionCall","src":"2015:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2007:4:16"}]},{"nodeType":"YulAssignment","src":"2081:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2093:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2099:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2089:3:16"},"nodeType":"YulFunctionCall","src":"2089:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2081:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1854:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1865:4:16","type":""}],"src":"1803:308:16"},{"body":{"nodeType":"YulBlock","src":"2181:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2204:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"2209:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2214:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2191:12:16"},"nodeType":"YulFunctionCall","src":"2191:30:16"},"nodeType":"YulExpressionStatement","src":"2191:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2241:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2246:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2237:3:16"},"nodeType":"YulFunctionCall","src":"2237:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2255:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2230:6:16"},"nodeType":"YulFunctionCall","src":"2230:27:16"},"nodeType":"YulExpressionStatement","src":"2230:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2163:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2168:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"2173:6:16","type":""}],"src":"2117:146:16"},{"body":{"nodeType":"YulBlock","src":"2353:341:16","statements":[{"nodeType":"YulAssignment","src":"2363:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2430:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2388:41:16"},"nodeType":"YulFunctionCall","src":"2388:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2372:15:16"},"nodeType":"YulFunctionCall","src":"2372:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2363:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2454:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2461:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2447:6:16"},"nodeType":"YulFunctionCall","src":"2447:21:16"},"nodeType":"YulExpressionStatement","src":"2447:21:16"},{"nodeType":"YulVariableDeclaration","src":"2477:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2492:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2499:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2488:3:16"},"nodeType":"YulFunctionCall","src":"2488:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2481:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2542:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2544:77:16"},"nodeType":"YulFunctionCall","src":"2544:79:16"},"nodeType":"YulExpressionStatement","src":"2544:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2523:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2528:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2519:3:16"},"nodeType":"YulFunctionCall","src":"2519:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2516:2:16"},"nodeType":"YulFunctionCall","src":"2516:25:16"},"nodeType":"YulIf","src":"2513:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2671:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2676:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2681:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2634:36:16"},"nodeType":"YulFunctionCall","src":"2634:54:16"},"nodeType":"YulExpressionStatement","src":"2634:54:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2326:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"2331:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2339:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2347:5:16","type":""}],"src":"2269:425:16"},{"body":{"nodeType":"YulBlock","src":"2776:278:16","statements":[{"body":{"nodeType":"YulBlock","src":"2825:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2827:77:16"},"nodeType":"YulFunctionCall","src":"2827:79:16"},"nodeType":"YulExpressionStatement","src":"2827:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2804:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2812:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2800:3:16"},"nodeType":"YulFunctionCall","src":"2800:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2819:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2796:3:16"},"nodeType":"YulFunctionCall","src":"2796:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2789:6:16"},"nodeType":"YulFunctionCall","src":"2789:35:16"},"nodeType":"YulIf","src":"2786:122:16"},{"nodeType":"YulVariableDeclaration","src":"2917:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2944:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2931:12:16"},"nodeType":"YulFunctionCall","src":"2931:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2921:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2960:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3029:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:16"},"nodeType":"YulFunctionCall","src":"3017:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"3036:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"3044:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2969:47:16"},"nodeType":"YulFunctionCall","src":"2969:79:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2960:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2754:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2762:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2770:5:16","type":""}],"src":"2714:340:16"},{"body":{"nodeType":"YulBlock","src":"3153:561:16","statements":[{"body":{"nodeType":"YulBlock","src":"3199:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3201:77:16"},"nodeType":"YulFunctionCall","src":"3201:79:16"},"nodeType":"YulExpressionStatement","src":"3201:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3174:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3170:3:16"},"nodeType":"YulFunctionCall","src":"3170:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3195:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3166:3:16"},"nodeType":"YulFunctionCall","src":"3166:32:16"},"nodeType":"YulIf","src":"3163:119:16"},{"nodeType":"YulBlock","src":"3292:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3307:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3321:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3311:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3336:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3371:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3382:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3367:3:16"},"nodeType":"YulFunctionCall","src":"3367:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3391:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3346:20:16"},"nodeType":"YulFunctionCall","src":"3346:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3336:6:16"}]}]},{"nodeType":"YulBlock","src":"3419:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3434:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3465:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3476:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:16"},"nodeType":"YulFunctionCall","src":"3461:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3448:12:16"},"nodeType":"YulFunctionCall","src":"3448:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3438:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3527:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3529:77:16"},"nodeType":"YulFunctionCall","src":"3529:79:16"},"nodeType":"YulExpressionStatement","src":"3529:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3499:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3507:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3496:2:16"},"nodeType":"YulFunctionCall","src":"3496:30:16"},"nodeType":"YulIf","src":"3493:117:16"},{"nodeType":"YulAssignment","src":"3624:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3669:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3680:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:16"},"nodeType":"YulFunctionCall","src":"3665:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3689:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3634:30:16"},"nodeType":"YulFunctionCall","src":"3634:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3624:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3115:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3126:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3138:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3146:6:16","type":""}],"src":"3060:654:16"},{"body":{"nodeType":"YulBlock","src":"3786:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3832:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3834:77:16"},"nodeType":"YulFunctionCall","src":"3834:79:16"},"nodeType":"YulExpressionStatement","src":"3834:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3807:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3803:3:16"},"nodeType":"YulFunctionCall","src":"3803:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3828:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3799:3:16"},"nodeType":"YulFunctionCall","src":"3799:32:16"},"nodeType":"YulIf","src":"3796:119:16"},{"nodeType":"YulBlock","src":"3925:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3940:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3954:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3944:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3969:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4015:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:16"},"nodeType":"YulFunctionCall","src":"4000:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4024:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3979:20:16"},"nodeType":"YulFunctionCall","src":"3979:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3969:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3756:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3767:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3779:6:16","type":""}],"src":"3720:329:16"},{"body":{"nodeType":"YulBlock","src":"4097:48:16","statements":[{"nodeType":"YulAssignment","src":"4107:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4132:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4125:6:16"},"nodeType":"YulFunctionCall","src":"4125:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4118:6:16"},"nodeType":"YulFunctionCall","src":"4118:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4107:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4079:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4089:7:16","type":""}],"src":"4055:90:16"},{"body":{"nodeType":"YulBlock","src":"4210:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4227:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4247:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4232:14:16"},"nodeType":"YulFunctionCall","src":"4232:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4220:6:16"},"nodeType":"YulFunctionCall","src":"4220:34:16"},"nodeType":"YulExpressionStatement","src":"4220:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4198:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4205:3:16","type":""}],"src":"4151:109:16"},{"body":{"nodeType":"YulBlock","src":"4358:118:16","statements":[{"nodeType":"YulAssignment","src":"4368:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4380:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4391:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4376:3:16"},"nodeType":"YulFunctionCall","src":"4376:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4368:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4442:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4455:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4466:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:16"},"nodeType":"YulFunctionCall","src":"4451:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4404:37:16"},"nodeType":"YulFunctionCall","src":"4404:65:16"},"nodeType":"YulExpressionStatement","src":"4404:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4330:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4342:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4353:4:16","type":""}],"src":"4266:210:16"},{"body":{"nodeType":"YulBlock","src":"4541:40:16","statements":[{"nodeType":"YulAssignment","src":"4552:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4568:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4562:5:16"},"nodeType":"YulFunctionCall","src":"4562:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4552:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4524:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4534:6:16","type":""}],"src":"4482:99:16"},{"body":{"nodeType":"YulBlock","src":"4683:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4700:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4705:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4693:6:16"},"nodeType":"YulFunctionCall","src":"4693:19:16"},"nodeType":"YulExpressionStatement","src":"4693:19:16"},{"nodeType":"YulAssignment","src":"4721:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4740:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:16"},"nodeType":"YulFunctionCall","src":"4736:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4721:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4655:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4660:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4671:11:16","type":""}],"src":"4587:169:16"},{"body":{"nodeType":"YulBlock","src":"4824:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4834:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4843:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4838:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4903:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4928:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"4933:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4924:3:16"},"nodeType":"YulFunctionCall","src":"4924:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4947:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"4952:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4943:3:16"},"nodeType":"YulFunctionCall","src":"4943:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4937:5:16"},"nodeType":"YulFunctionCall","src":"4937:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4917:6:16"},"nodeType":"YulFunctionCall","src":"4917:39:16"},"nodeType":"YulExpressionStatement","src":"4917:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4864:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"4867:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4861:2:16"},"nodeType":"YulFunctionCall","src":"4861:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4875:19:16","statements":[{"nodeType":"YulAssignment","src":"4877:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4886:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4889:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4882:3:16"},"nodeType":"YulFunctionCall","src":"4882:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4877:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4857:3:16","statements":[]},"src":"4853:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4986:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4991:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4982:3:16"},"nodeType":"YulFunctionCall","src":"4982:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"5000:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4975:6:16"},"nodeType":"YulFunctionCall","src":"4975:27:16"},"nodeType":"YulExpressionStatement","src":"4975:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4806:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4811:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4816:6:16","type":""}],"src":"4762:246:16"},{"body":{"nodeType":"YulBlock","src":"5106:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5116:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5163:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5130:32:16"},"nodeType":"YulFunctionCall","src":"5130:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5120:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5178:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5244:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5249:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5185:58:16"},"nodeType":"YulFunctionCall","src":"5185:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5178:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5311:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5300:3:16"},"nodeType":"YulFunctionCall","src":"5300:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"5318:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5323:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5265:34:16"},"nodeType":"YulFunctionCall","src":"5265:65:16"},"nodeType":"YulExpressionStatement","src":"5265:65:16"},{"nodeType":"YulAssignment","src":"5339:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5350:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5377:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5355:21:16"},"nodeType":"YulFunctionCall","src":"5355:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:16"},"nodeType":"YulFunctionCall","src":"5346:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5339:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5087:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5094:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5102:3:16","type":""}],"src":"5014:377:16"},{"body":{"nodeType":"YulBlock","src":"5515:195:16","statements":[{"nodeType":"YulAssignment","src":"5525:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:16"},"nodeType":"YulFunctionCall","src":"5533:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5525:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5583:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:16"},"nodeType":"YulFunctionCall","src":"5568:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5591:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5597:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5587:3:16"},"nodeType":"YulFunctionCall","src":"5587:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5561:6:16"},"nodeType":"YulFunctionCall","src":"5561:47:16"},"nodeType":"YulExpressionStatement","src":"5561:47:16"},{"nodeType":"YulAssignment","src":"5617:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5689:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"5698:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5625:63:16"},"nodeType":"YulFunctionCall","src":"5625:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5617:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5487:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5499:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5510:4:16","type":""}],"src":"5397:313:16"},{"body":{"nodeType":"YulBlock","src":"5792:433:16","statements":[{"body":{"nodeType":"YulBlock","src":"5838:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5840:77:16"},"nodeType":"YulFunctionCall","src":"5840:79:16"},"nodeType":"YulExpressionStatement","src":"5840:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5813:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5822:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5809:3:16"},"nodeType":"YulFunctionCall","src":"5809:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5834:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5805:3:16"},"nodeType":"YulFunctionCall","src":"5805:32:16"},"nodeType":"YulIf","src":"5802:119:16"},{"nodeType":"YulBlock","src":"5931:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5946:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5988:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:16"},"nodeType":"YulFunctionCall","src":"5973:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5960:12:16"},"nodeType":"YulFunctionCall","src":"5960:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5950:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6038:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6040:77:16"},"nodeType":"YulFunctionCall","src":"6040:79:16"},"nodeType":"YulExpressionStatement","src":"6040:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6010:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6018:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6007:2:16"},"nodeType":"YulFunctionCall","src":"6007:30:16"},"nodeType":"YulIf","src":"6004:117:16"},{"nodeType":"YulAssignment","src":"6135:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6180:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6191:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6176:3:16"},"nodeType":"YulFunctionCall","src":"6176:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6200:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6145:30:16"},"nodeType":"YulFunctionCall","src":"6145:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6135:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5762:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5773:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5785:6:16","type":""}],"src":"5716:509:16"},{"body":{"nodeType":"YulBlock","src":"6296:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6313:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6336:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6318:17:16"},"nodeType":"YulFunctionCall","src":"6318:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6306:6:16"},"nodeType":"YulFunctionCall","src":"6306:37:16"},"nodeType":"YulExpressionStatement","src":"6306:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6284:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6291:3:16","type":""}],"src":"6231:118:16"},{"body":{"nodeType":"YulBlock","src":"6453:124:16","statements":[{"nodeType":"YulAssignment","src":"6463:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6475:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6486:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:16"},"nodeType":"YulFunctionCall","src":"6471:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6463:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6543:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6556:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6567:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6552:3:16"},"nodeType":"YulFunctionCall","src":"6552:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6499:43:16"},"nodeType":"YulFunctionCall","src":"6499:71:16"},"nodeType":"YulExpressionStatement","src":"6499:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6425:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6437:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6448:4:16","type":""}],"src":"6355:222:16"},{"body":{"nodeType":"YulBlock","src":"6689:61:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6711:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6719:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6707:3:16"},"nodeType":"YulFunctionCall","src":"6707:14:16"},{"hexValue":"53747564656e74206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"6723:19:16","type":"","value":"Student not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6700:6:16"},"nodeType":"YulFunctionCall","src":"6700:43:16"},"nodeType":"YulExpressionStatement","src":"6700:43:16"}]},"name":"store_literal_in_memory_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6681:6:16","type":""}],"src":"6583:167:16"},{"body":{"nodeType":"YulBlock","src":"6902:220:16","statements":[{"nodeType":"YulAssignment","src":"6912:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6978:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6983:2:16","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6919:58:16"},"nodeType":"YulFunctionCall","src":"6919:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6912:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7084:3:16"}],"functionName":{"name":"store_literal_in_memory_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e","nodeType":"YulIdentifier","src":"6995:88:16"},"nodeType":"YulFunctionCall","src":"6995:93:16"},"nodeType":"YulExpressionStatement","src":"6995:93:16"},{"nodeType":"YulAssignment","src":"7097:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7108:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7113:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7104:3:16"},"nodeType":"YulFunctionCall","src":"7104:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7097:3:16"}]}]},"name":"abi_encode_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6890:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6898:3:16","type":""}],"src":"6756:366:16"},{"body":{"nodeType":"YulBlock","src":"7299:248:16","statements":[{"nodeType":"YulAssignment","src":"7309:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7321:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7332:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7317:3:16"},"nodeType":"YulFunctionCall","src":"7317:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7309:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7367:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:16"},"nodeType":"YulFunctionCall","src":"7352:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7375:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7381:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7371:3:16"},"nodeType":"YulFunctionCall","src":"7371:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7345:6:16"},"nodeType":"YulFunctionCall","src":"7345:47:16"},"nodeType":"YulExpressionStatement","src":"7345:47:16"},{"nodeType":"YulAssignment","src":"7401:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7535:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7409:124:16"},"nodeType":"YulFunctionCall","src":"7409:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7401:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7279:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7294:4:16","type":""}],"src":"7128:419:16"},{"body":{"nodeType":"YulBlock","src":"7659:74:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7681:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7689:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7677:3:16"},"nodeType":"YulFunctionCall","src":"7677:14:16"},{"hexValue":"4e65772053747564656e742049442063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"7693:32:16","type":"","value":"New Student ID cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:16"},"nodeType":"YulFunctionCall","src":"7670:56:16"},"nodeType":"YulExpressionStatement","src":"7670:56:16"}]},"name":"store_literal_in_memory_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7651:6:16","type":""}],"src":"7553:180:16"},{"body":{"nodeType":"YulBlock","src":"7885:220:16","statements":[{"nodeType":"YulAssignment","src":"7895:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7961:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7966:2:16","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7902:58:16"},"nodeType":"YulFunctionCall","src":"7902:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7895:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8067:3:16"}],"functionName":{"name":"store_literal_in_memory_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef","nodeType":"YulIdentifier","src":"7978:88:16"},"nodeType":"YulFunctionCall","src":"7978:93:16"},"nodeType":"YulExpressionStatement","src":"7978:93:16"},{"nodeType":"YulAssignment","src":"8080:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8091:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8096:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8087:3:16"},"nodeType":"YulFunctionCall","src":"8087:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8080:3:16"}]}]},"name":"abi_encode_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7873:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7881:3:16","type":""}],"src":"7739:366:16"},{"body":{"nodeType":"YulBlock","src":"8282:248:16","statements":[{"nodeType":"YulAssignment","src":"8292:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8304:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8315:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8300:3:16"},"nodeType":"YulFunctionCall","src":"8300:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8292:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8339:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8350:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8335:3:16"},"nodeType":"YulFunctionCall","src":"8335:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8358:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8354:3:16"},"nodeType":"YulFunctionCall","src":"8354:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8328:6:16"},"nodeType":"YulFunctionCall","src":"8328:47:16"},"nodeType":"YulExpressionStatement","src":"8328:47:16"},{"nodeType":"YulAssignment","src":"8384:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8518:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8392:124:16"},"nodeType":"YulFunctionCall","src":"8392:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8384:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8262:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8277:4:16","type":""}],"src":"8111:419:16"},{"body":{"nodeType":"YulBlock","src":"8564:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8581:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8584:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8574:6:16"},"nodeType":"YulFunctionCall","src":"8574:88:16"},"nodeType":"YulExpressionStatement","src":"8574:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8678:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8681:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8671:6:16"},"nodeType":"YulFunctionCall","src":"8671:15:16"},"nodeType":"YulExpressionStatement","src":"8671:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8702:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8705:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8695:6:16"},"nodeType":"YulFunctionCall","src":"8695:15:16"},"nodeType":"YulExpressionStatement","src":"8695:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8536:180:16"},{"body":{"nodeType":"YulBlock","src":"8773:269:16","statements":[{"nodeType":"YulAssignment","src":"8783:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8797:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8803:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8793:3:16"},"nodeType":"YulFunctionCall","src":"8793:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8783:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"8814:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8844:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8850:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8840:3:16"},"nodeType":"YulFunctionCall","src":"8840:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8818:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8891:51:16","statements":[{"nodeType":"YulAssignment","src":"8905:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8919:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8927:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8915:3:16"},"nodeType":"YulFunctionCall","src":"8915:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8905:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8871:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8864:6:16"},"nodeType":"YulFunctionCall","src":"8864:26:16"},"nodeType":"YulIf","src":"8861:81:16"},{"body":{"nodeType":"YulBlock","src":"8994:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"9008:16:16"},"nodeType":"YulFunctionCall","src":"9008:18:16"},"nodeType":"YulExpressionStatement","src":"9008:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8958:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8981:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8989:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8978:2:16"},"nodeType":"YulFunctionCall","src":"8978:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8955:2:16"},"nodeType":"YulFunctionCall","src":"8955:38:16"},"nodeType":"YulIf","src":"8952:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8757:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8766:6:16","type":""}],"src":"8722:320:16"},{"body":{"nodeType":"YulBlock","src":"9102:87:16","statements":[{"nodeType":"YulAssignment","src":"9112:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9120:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9112:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9140:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"9143:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9133:6:16"},"nodeType":"YulFunctionCall","src":"9133:14:16"},"nodeType":"YulExpressionStatement","src":"9133:14:16"},{"nodeType":"YulAssignment","src":"9156:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9174:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9177:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9164:9:16"},"nodeType":"YulFunctionCall","src":"9164:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9156:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9089:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9097:4:16","type":""}],"src":"9048:141:16"},{"body":{"nodeType":"YulBlock","src":"9239:49:16","statements":[{"nodeType":"YulAssignment","src":"9249:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9267:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"9274:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9263:3:16"},"nodeType":"YulFunctionCall","src":"9263:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"9279:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9259:3:16"},"nodeType":"YulFunctionCall","src":"9259:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9249:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9222:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9232:6:16","type":""}],"src":"9195:93:16"},{"body":{"nodeType":"YulBlock","src":"9347:54:16","statements":[{"nodeType":"YulAssignment","src":"9357:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9382:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"9388:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9378:3:16"},"nodeType":"YulFunctionCall","src":"9378:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9357:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9322:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"9328:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9338:8:16","type":""}],"src":"9294:107:16"},{"body":{"nodeType":"YulBlock","src":"9483:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"9514:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"9526:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9510:3:16"},"nodeType":"YulFunctionCall","src":"9510:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"9497:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9537:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"9568:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9579:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9549:18:16"},"nodeType":"YulFunctionCall","src":"9549:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9541:4:16","type":""}]},{"nodeType":"YulAssignment","src":"9655:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"9686:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"9697:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9667:18:16"},"nodeType":"YulFunctionCall","src":"9667:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9655:8:16"}]},{"nodeType":"YulAssignment","src":"9715:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9728:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9739:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9735:3:16"},"nodeType":"YulFunctionCall","src":"9735:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9724:3:16"},"nodeType":"YulFunctionCall","src":"9724:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9715:5:16"}]},{"nodeType":"YulAssignment","src":"9754:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9767:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9778:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"9788:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9774:3:16"},"nodeType":"YulFunctionCall","src":"9774:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9764:2:16"},"nodeType":"YulFunctionCall","src":"9764:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9754:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9444:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"9451:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"9463:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9476:6:16","type":""}],"src":"9407:393:16"},{"body":{"nodeType":"YulBlock","src":"9851:32:16","statements":[{"nodeType":"YulAssignment","src":"9861:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"9872:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9861:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9833:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9843:7:16","type":""}],"src":"9806:77:16"},{"body":{"nodeType":"YulBlock","src":"9921:28:16","statements":[{"nodeType":"YulAssignment","src":"9931:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"9938:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9931:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9907:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9917:3:16","type":""}],"src":"9889:60:16"},{"body":{"nodeType":"YulBlock","src":"10015:82:16","statements":[{"nodeType":"YulAssignment","src":"10025:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10083:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10065:17:16"},"nodeType":"YulFunctionCall","src":"10065:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10056:8:16"},"nodeType":"YulFunctionCall","src":"10056:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10038:17:16"},"nodeType":"YulFunctionCall","src":"10038:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10025:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9995:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10005:9:16","type":""}],"src":"9955:142:16"},{"body":{"nodeType":"YulBlock","src":"10150:28:16","statements":[{"nodeType":"YulAssignment","src":"10160:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"10167:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10160:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10136:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10146:3:16","type":""}],"src":"10103:75:16"},{"body":{"nodeType":"YulBlock","src":"10260:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10270:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"10325:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10294:30:16"},"nodeType":"YulFunctionCall","src":"10294:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"10274:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10349:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10389:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10383:5:16"},"nodeType":"YulFunctionCall","src":"10383:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10396:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"10428:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"10404:23:16"},"nodeType":"YulFunctionCall","src":"10404:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"10355:27:16"},"nodeType":"YulFunctionCall","src":"10355:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10342:6:16"},"nodeType":"YulFunctionCall","src":"10342:105:16"},"nodeType":"YulExpressionStatement","src":"10342:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10237:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10243:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"10251:7:16","type":""}],"src":"10184:269:16"},{"body":{"nodeType":"YulBlock","src":"10508:24:16","statements":[{"nodeType":"YulAssignment","src":"10518:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10525:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10518:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10504:3:16","type":""}],"src":"10459:73:16"},{"body":{"nodeType":"YulBlock","src":"10591:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10601:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"10615:30:16"},"nodeType":"YulFunctionCall","src":"10615:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"10605:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10700:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10706:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"10714:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10656:43:16"},"nodeType":"YulFunctionCall","src":"10656:65:16"},"nodeType":"YulExpressionStatement","src":"10656:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10577:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"10583:6:16","type":""}],"src":"10538:189:16"},{"body":{"nodeType":"YulBlock","src":"10783:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"10850:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10894:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10901:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"10864:29:16"},"nodeType":"YulFunctionCall","src":"10864:39:16"},"nodeType":"YulExpressionStatement","src":"10864:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10803:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"10810:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10800:2:16"},"nodeType":"YulFunctionCall","src":"10800:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10815:26:16","statements":[{"nodeType":"YulAssignment","src":"10817:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10830:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10837:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10826:3:16"},"nodeType":"YulFunctionCall","src":"10826:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"10817:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"10797:2:16","statements":[]},"src":"10793:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"10771:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"10778:3:16","type":""}],"src":"10733:186:16"},{"body":{"nodeType":"YulBlock","src":"11004:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"11030:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11044:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11092:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11060:31:16"},"nodeType":"YulFunctionCall","src":"11060:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"11048:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11111:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11134:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11162:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11144:17:16"},"nodeType":"YulFunctionCall","src":"11144:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11130:3:16"},"nodeType":"YulFunctionCall","src":"11130:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11115:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11331:27:16","statements":[{"nodeType":"YulAssignment","src":"11333:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"11348:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11333:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11315:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"11327:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11312:2:16"},"nodeType":"YulFunctionCall","src":"11312:18:16"},"nodeType":"YulIf","src":"11309:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11400:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11417:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11445:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"11427:17:16"},"nodeType":"YulFunctionCall","src":"11427:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:16"},"nodeType":"YulFunctionCall","src":"11413:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"11371:28:16"},"nodeType":"YulFunctionCall","src":"11371:80:16"},"nodeType":"YulExpressionStatement","src":"11371:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11021:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11026:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11018:2:16"},"nodeType":"YulFunctionCall","src":"11018:11:16"},"nodeType":"YulIf","src":"11015:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10980:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"10987:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10992:10:16","type":""}],"src":"10925:543:16"},{"body":{"nodeType":"YulBlock","src":"11537:54:16","statements":[{"nodeType":"YulAssignment","src":"11547:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11572:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"11578:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11568:3:16"},"nodeType":"YulFunctionCall","src":"11568:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11547:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11512:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"11518:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11528:8:16","type":""}],"src":"11474:117:16"},{"body":{"nodeType":"YulBlock","src":"11648:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11658:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11707:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"11710:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11703:3:16"},"nodeType":"YulFunctionCall","src":"11703:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11722:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11718:3:16"},"nodeType":"YulFunctionCall","src":"11718:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"11674:28:16"},"nodeType":"YulFunctionCall","src":"11674:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11670:3:16"},"nodeType":"YulFunctionCall","src":"11670:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11662:4:16","type":""}]},{"nodeType":"YulAssignment","src":"11735:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11749:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"11755:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11745:3:16"},"nodeType":"YulFunctionCall","src":"11745:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11735:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11625:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"11631:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11641:6:16","type":""}],"src":"11597:169:16"},{"body":{"nodeType":"YulBlock","src":"11852:214:16","statements":[{"nodeType":"YulAssignment","src":"11985:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12012:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"12018:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11993:18:16"},"nodeType":"YulFunctionCall","src":"11993:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11985:4:16"}]},{"nodeType":"YulAssignment","src":"12031:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12042:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12052:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"12055:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12048:3:16"},"nodeType":"YulFunctionCall","src":"12048:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12039:2:16"},"nodeType":"YulFunctionCall","src":"12039:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"12031:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11833:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"11839:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11847:4:16","type":""}],"src":"11771:295:16"},{"body":{"nodeType":"YulBlock","src":"12163:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12174:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12221:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12188:32:16"},"nodeType":"YulFunctionCall","src":"12188:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"12178:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12310:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12312:16:16"},"nodeType":"YulFunctionCall","src":"12312:18:16"},"nodeType":"YulExpressionStatement","src":"12312:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12282:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12290:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12279:2:16"},"nodeType":"YulFunctionCall","src":"12279:30:16"},"nodeType":"YulIf","src":"12276:56:16"},{"nodeType":"YulVariableDeclaration","src":"12342:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12388:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12382:5:16"},"nodeType":"YulFunctionCall","src":"12382:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12356:25:16"},"nodeType":"YulFunctionCall","src":"12356:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"12346:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12487:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"12493:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12501:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"12441:45:16"},"nodeType":"YulFunctionCall","src":"12441:67:16"},"nodeType":"YulExpressionStatement","src":"12441:67:16"},{"nodeType":"YulVariableDeclaration","src":"12518:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12535:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12522:9:16","type":""}]},{"nodeType":"YulAssignment","src":"12546:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12559:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12546:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12610:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12624:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12643:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12655:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12651:3:16"},"nodeType":"YulFunctionCall","src":"12651:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12639:3:16"},"nodeType":"YulFunctionCall","src":"12639:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12628:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12675:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12721:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"12689:31:16"},"nodeType":"YulFunctionCall","src":"12689:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12679:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12739:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12748:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12743:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12807:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12832:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12850:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12855:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12846:3:16"},"nodeType":"YulFunctionCall","src":"12846:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12840:5:16"},"nodeType":"YulFunctionCall","src":"12840:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12825:6:16"},"nodeType":"YulFunctionCall","src":"12825:42:16"},"nodeType":"YulExpressionStatement","src":"12825:42:16"},{"nodeType":"YulAssignment","src":"12884:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12898:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12906:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12894:3:16"},"nodeType":"YulFunctionCall","src":"12894:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12884:6:16"}]},{"nodeType":"YulAssignment","src":"12925:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12942:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12953:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12938:3:16"},"nodeType":"YulFunctionCall","src":"12938:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12925:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12773:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12776:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12770:2:16"},"nodeType":"YulFunctionCall","src":"12770:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12785:21:16","statements":[{"nodeType":"YulAssignment","src":"12787:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12796:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"12799:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12792:3:16"},"nodeType":"YulFunctionCall","src":"12792:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12787:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"12766:3:16","statements":[]},"src":"12762:208:16"},{"body":{"nodeType":"YulBlock","src":"13006:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13024:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13051:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13056:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13047:3:16"},"nodeType":"YulFunctionCall","src":"13047:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13041:5:16"},"nodeType":"YulFunctionCall","src":"13041:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13028:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13091:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"13118:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13133:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13141:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13129:3:16"},"nodeType":"YulFunctionCall","src":"13129:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"13099:18:16"},"nodeType":"YulFunctionCall","src":"13099:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13084:6:16"},"nodeType":"YulFunctionCall","src":"13084:64:16"},"nodeType":"YulExpressionStatement","src":"13084:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12989:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12998:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12986:2:16"},"nodeType":"YulFunctionCall","src":"12986:19:16"},"nodeType":"YulIf","src":"12983:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13182:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13196:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13204:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13192:3:16"},"nodeType":"YulFunctionCall","src":"13192:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"13208:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13188:3:16"},"nodeType":"YulFunctionCall","src":"13188:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13175:6:16"},"nodeType":"YulFunctionCall","src":"13175:36:16"},"nodeType":"YulExpressionStatement","src":"13175:36:16"}]},"nodeType":"YulCase","src":"12603:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12608:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"13238:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13252:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13265:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13256:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13289:67:16","statements":[{"nodeType":"YulAssignment","src":"13307:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13326:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13331:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13322:3:16"},"nodeType":"YulFunctionCall","src":"13322:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13316:5:16"},"nodeType":"YulFunctionCall","src":"13316:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13307:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13282:6:16"},"nodeType":"YulIf","src":"13279:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13376:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13435:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"13442:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13382:52:16"},"nodeType":"YulFunctionCall","src":"13382:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13369:6:16"},"nodeType":"YulFunctionCall","src":"13369:81:16"},"nodeType":"YulExpressionStatement","src":"13369:81:16"}]},"nodeType":"YulCase","src":"13230:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12583:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12591:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12580:2:16"},"nodeType":"YulFunctionCall","src":"12580:14:16"},"nodeType":"YulSwitch","src":"12573:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12152:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"12158:3:16","type":""}],"src":"12071:1395:16"},{"body":{"nodeType":"YulBlock","src":"13578:62:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13600:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13608:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13596:3:16"},"nodeType":"YulFunctionCall","src":"13596:14:16"},{"hexValue":"416c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"13612:20:16","type":"","value":"Already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13589:6:16"},"nodeType":"YulFunctionCall","src":"13589:44:16"},"nodeType":"YulExpressionStatement","src":"13589:44:16"}]},"name":"store_literal_in_memory_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13570:6:16","type":""}],"src":"13472:168:16"},{"body":{"nodeType":"YulBlock","src":"13792:220:16","statements":[{"nodeType":"YulAssignment","src":"13802:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13868:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13873:2:16","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13809:58:16"},"nodeType":"YulFunctionCall","src":"13809:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13802:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13974:3:16"}],"functionName":{"name":"store_literal_in_memory_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","nodeType":"YulIdentifier","src":"13885:88:16"},"nodeType":"YulFunctionCall","src":"13885:93:16"},"nodeType":"YulExpressionStatement","src":"13885:93:16"},{"nodeType":"YulAssignment","src":"13987:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13998:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14003:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13994:3:16"},"nodeType":"YulFunctionCall","src":"13994:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13987:3:16"}]}]},"name":"abi_encode_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13780:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13788:3:16","type":""}],"src":"13646:366:16"},{"body":{"nodeType":"YulBlock","src":"14189:248:16","statements":[{"nodeType":"YulAssignment","src":"14199:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14211:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14222:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14207:3:16"},"nodeType":"YulFunctionCall","src":"14207:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14199:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14246:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14257:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14242:3:16"},"nodeType":"YulFunctionCall","src":"14242:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14265:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14271:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14261:3:16"},"nodeType":"YulFunctionCall","src":"14261:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14235:6:16"},"nodeType":"YulFunctionCall","src":"14235:47:16"},"nodeType":"YulExpressionStatement","src":"14235:47:16"},{"nodeType":"YulAssignment","src":"14291:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14425:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14299:124:16"},"nodeType":"YulFunctionCall","src":"14299:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14291:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14169:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14184:4:16","type":""}],"src":"14018:419:16"},{"body":{"nodeType":"YulBlock","src":"14549:70:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14571:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14579:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14567:3:16"},"nodeType":"YulFunctionCall","src":"14567:14:16"},{"hexValue":"53747564656e742049442063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"14583:28:16","type":"","value":"Student ID cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14560:6:16"},"nodeType":"YulFunctionCall","src":"14560:52:16"},"nodeType":"YulExpressionStatement","src":"14560:52:16"}]},"name":"store_literal_in_memory_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14541:6:16","type":""}],"src":"14443:176:16"},{"body":{"nodeType":"YulBlock","src":"14771:220:16","statements":[{"nodeType":"YulAssignment","src":"14781:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14847:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14852:2:16","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14788:58:16"},"nodeType":"YulFunctionCall","src":"14788:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14781:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14953:3:16"}],"functionName":{"name":"store_literal_in_memory_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf","nodeType":"YulIdentifier","src":"14864:88:16"},"nodeType":"YulFunctionCall","src":"14864:93:16"},"nodeType":"YulExpressionStatement","src":"14864:93:16"},{"nodeType":"YulAssignment","src":"14966:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14977:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14982:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14973:3:16"},"nodeType":"YulFunctionCall","src":"14973:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14966:3:16"}]}]},"name":"abi_encode_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14759:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14767:3:16","type":""}],"src":"14625:366:16"},{"body":{"nodeType":"YulBlock","src":"15168:248:16","statements":[{"nodeType":"YulAssignment","src":"15178:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15190:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15201:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15186:3:16"},"nodeType":"YulFunctionCall","src":"15186:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15178:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15225:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15236:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15221:3:16"},"nodeType":"YulFunctionCall","src":"15221:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15244:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15250:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15240:3:16"},"nodeType":"YulFunctionCall","src":"15240:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15214:6:16"},"nodeType":"YulFunctionCall","src":"15214:47:16"},"nodeType":"YulExpressionStatement","src":"15214:47:16"},{"nodeType":"YulAssignment","src":"15270:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15404:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15278:124:16"},"nodeType":"YulFunctionCall","src":"15278:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15270:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15148:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15163:4:16","type":""}],"src":"14997:419:16"},{"body":{"nodeType":"YulBlock","src":"15450:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15467:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15470:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15460:6:16"},"nodeType":"YulFunctionCall","src":"15460:88:16"},"nodeType":"YulExpressionStatement","src":"15460:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15564:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15567:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15557:6:16"},"nodeType":"YulFunctionCall","src":"15557:15:16"},"nodeType":"YulExpressionStatement","src":"15557:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15588:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15591:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15581:6:16"},"nodeType":"YulFunctionCall","src":"15581:15:16"},"nodeType":"YulExpressionStatement","src":"15581:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15422:180:16"},{"body":{"nodeType":"YulBlock","src":"15653:149:16","statements":[{"nodeType":"YulAssignment","src":"15663:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15686:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15668:17:16"},"nodeType":"YulFunctionCall","src":"15668:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15663:1:16"}]},{"nodeType":"YulAssignment","src":"15697:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15720:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15702:17:16"},"nodeType":"YulFunctionCall","src":"15702:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15697:1:16"}]},{"nodeType":"YulAssignment","src":"15731:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15743:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"15746:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15739:3:16"},"nodeType":"YulFunctionCall","src":"15739:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15731:4:16"}]},{"body":{"nodeType":"YulBlock","src":"15773:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15775:16:16"},"nodeType":"YulFunctionCall","src":"15775:18:16"},"nodeType":"YulExpressionStatement","src":"15775:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15764:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"15770:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15761:2:16"},"nodeType":"YulFunctionCall","src":"15761:11:16"},"nodeType":"YulIf","src":"15758:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15639:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"15642:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15648:4:16","type":""}],"src":"15608:194:16"},{"body":{"nodeType":"YulBlock","src":"15897:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15917:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15907:6:16"},"nodeType":"YulFunctionCall","src":"15907:12:16"},"nodeType":"YulExpressionStatement","src":"15907:12:16"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"15808:117:16"},{"body":{"nodeType":"YulBlock","src":"16020:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16037:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16040:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16030:6:16"},"nodeType":"YulFunctionCall","src":"16030:12:16"},"nodeType":"YulExpressionStatement","src":"16030:12:16"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"15931:117:16"},{"body":{"nodeType":"YulBlock","src":"16180:343:16","statements":[{"body":{"nodeType":"YulBlock","src":"16218:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"16220:77:16"},"nodeType":"YulFunctionCall","src":"16220:79:16"},"nodeType":"YulExpressionStatement","src":"16220:79:16"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"16196:10:16"},{"name":"endIndex","nodeType":"YulIdentifier","src":"16208:8:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16193:2:16"},"nodeType":"YulFunctionCall","src":"16193:24:16"},"nodeType":"YulIf","src":"16190:111:16"},{"body":{"nodeType":"YulBlock","src":"16334:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"16336:77:16"},"nodeType":"YulFunctionCall","src":"16336:79:16"},"nodeType":"YulExpressionStatement","src":"16336:79:16"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"16316:8:16"},{"name":"length","nodeType":"YulIdentifier","src":"16326:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16313:2:16"},"nodeType":"YulFunctionCall","src":"16313:20:16"},"nodeType":"YulIf","src":"16310:107:16"},{"nodeType":"YulAssignment","src":"16426:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16443:6:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"16455:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"16467:1:16","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16451:3:16"},"nodeType":"YulFunctionCall","src":"16451:18:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16439:3:16"},"nodeType":"YulFunctionCall","src":"16439:31:16"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"16426:9:16"}]},{"nodeType":"YulAssignment","src":"16479:38:16","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"16496:8:16"},{"name":"startIndex","nodeType":"YulIdentifier","src":"16506:10:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16492:3:16"},"nodeType":"YulFunctionCall","src":"16492:25:16"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"16479:9:16"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16118:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"16126:6:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"16134:10:16","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"16146:8:16","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"16159:9:16","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"16170:9:16","type":""}],"src":"16054:469:16"},{"body":{"nodeType":"YulBlock","src":"16594:31:16","statements":[{"nodeType":"YulAssignment","src":"16605:13:16","value":{"name":"len","nodeType":"YulIdentifier","src":"16615:3:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16605:6:16"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16572:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"16579:3:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16587:6:16","type":""}],"src":"16529:96:16"},{"body":{"nodeType":"YulBlock","src":"16689:28:16","statements":[{"nodeType":"YulAssignment","src":"16699:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16707:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16699:4:16"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16676:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16684:4:16","type":""}],"src":"16631:86:16"},{"body":{"nodeType":"YulBlock","src":"16768:105:16","statements":[{"nodeType":"YulAssignment","src":"16778:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16793:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"16800:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16789:3:16"},"nodeType":"YulFunctionCall","src":"16789:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16778:7:16"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16750:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16760:7:16","type":""}],"src":"16723:150:16"},{"body":{"nodeType":"YulBlock","src":"16976:455:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16987:59:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17035:5:16"},{"name":"len","nodeType":"YulIdentifier","src":"17042:3:16"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"17001:33:16"},"nodeType":"YulFunctionCall","src":"17001:45:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16991:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17055:21:16","value":{"name":"array","nodeType":"YulIdentifier","src":"17071:5:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"17059:8:16","type":""}]},{"nodeType":"YulAssignment","src":"17086:50:16","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"17126:8:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17113:12:16"},"nodeType":"YulFunctionCall","src":"17113:22:16"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"17095:17:16"},"nodeType":"YulFunctionCall","src":"17095:41:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17086:5:16"}]},{"body":{"nodeType":"YulBlock","src":"17164:260:16","statements":[{"nodeType":"YulAssignment","src":"17178:236:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17208:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17275:1:16","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17282:2:16","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"17286:6:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17278:3:16"},"nodeType":"YulFunctionCall","src":"17278:15:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17271:3:16"},"nodeType":"YulFunctionCall","src":"17271:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"17316:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17231:18:16"},"nodeType":"YulFunctionCall","src":"17231:169:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17187:3:16"},"nodeType":"YulFunctionCall","src":"17187:227:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17178:5:16"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17152:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17160:2:16","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17149:2:16"},"nodeType":"YulFunctionCall","src":"17149:14:16"},"nodeType":"YulIf","src":"17146:278:16"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"16955:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"16962:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16970:5:16","type":""}],"src":"16879:552:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Student not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61f114d3c8f0bdf1788d12e7cd9c0647170f6e01780fce5b7826ee9a8ba5e04e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"New Student ID cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5897953e812296fa90ddac0956e61315d71eedfeeafa3a8895c0f9c99fd55ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Student ID cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a561dd39804056f9cb85b243e31e4c69f88a53ccc3ae4251e4c0272f898f4cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes20(calldataload(dataArea))\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"182":[{"length":32,"start":1672}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806371e174451161005b57806371e17445146101135780637da0a8771461012f5780638da5cb5b1461014d578063f2fde38b1461016b57610088565b8063302056241461008d578063572b6c05146100a95780636b7b44d7146100d9578063715018a614610109575b600080fd5b6100a760048036038101906100a29190610b02565b610187565b005b6100c360048036038101906100be9190610b5e565b610304565b6040516100d09190610ba6565b60405180910390f35b6100f360048036038101906100ee9190610b5e565b610343565b6040516101009190610c40565b60405180910390f35b6101116104a6565b005b61012d60048036038101906101289190610c62565b6104ba565b005b610137610684565b6040516101449190610cba565b60405180910390f35b6101556106ac565b6040516101629190610cba565b60405180910390f35b61018560048036038101906101809190610b5e565b6106d5565b005b61018f61075b565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1661021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590610d21565b60405180910390fd5b6000815111610262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025990610d8d565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816102b19190610fc3565b508173ffffffffffffffffffffffffffffffffffffffff167f5d96587cd7638c0254288e0ebecb53200b69da0dd775bcc5be707492a811ed11826040516102f89190610c40565b60405180910390a25050565b600061030e610684565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90610d21565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461042190610ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461044d90610ddc565b801561049a5780601f1061046f5761010080835404028352916020019161049a565b820191906000526020600020905b81548152906001019060200180831161047d57829003601f168201915b50505050509050919050565b6104ae61075b565b6104b860006107e2565b565b600160006104c66108a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610551576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610548906110e1565b60405180910390fd5b6000815111610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c9061114d565b60405180910390fd5b604051806040016040528082815260200160011515815250600160006105b96108a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816106089190610fc3565b5060208201518160010160006101000a81548160ff0219169083151502179055509050506106346108a6565b73ffffffffffffffffffffffffffffffffffffffff167fc1b20826100814ba286ac576fe980df1dbbcef3d904bb81f3d69a0e8280dc114826040516106799190610c40565b60405180910390a250565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106dd61075b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107469190610cba565b60405180910390fd5b610758816107e2565b50565b6107636108a6565b73ffffffffffffffffffffffffffffffffffffffff166107816106ac565b73ffffffffffffffffffffffffffffffffffffffff16146107e0576107a46108a6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107d79190610cba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006108b06108b5565b905090565b6000806000369050905060006108c961092a565b90506108d433610304565b80156108e05750808210155b1561091a5760003682846108f4919061119c565b908092610903939291906111da565b9061090e919061124c565b60601c92505050610927565b610922610939565b925050505b90565b6000610934610941565b905090565b600033905090565b60006014905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109898261095e565b9050919050565b6109998161097e565b81146109a457600080fd5b50565b6000813590506109b681610990565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0f826109c6565b810181811067ffffffffffffffff82111715610a2e57610a2d6109d7565b5b80604052505050565b6000610a4161094a565b9050610a4d8282610a06565b919050565b600067ffffffffffffffff821115610a6d57610a6c6109d7565b5b610a76826109c6565b9050602081019050919050565b82818337600083830152505050565b6000610aa5610aa084610a52565b610a37565b905082815260208101848484011115610ac157610ac06109c1565b5b610acc848285610a83565b509392505050565b600082601f830112610ae957610ae86109bc565b5b8135610af9848260208601610a92565b91505092915050565b60008060408385031215610b1957610b18610954565b5b6000610b27858286016109a7565b925050602083013567ffffffffffffffff811115610b4857610b47610959565b5b610b5485828601610ad4565b9150509250929050565b600060208284031215610b7457610b73610954565b5b6000610b82848285016109a7565b91505092915050565b60008115159050919050565b610ba081610b8b565b82525050565b6000602082019050610bbb6000830184610b97565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bfb578082015181840152602081019050610be0565b60008484015250505050565b6000610c1282610bc1565b610c1c8185610bcc565b9350610c2c818560208601610bdd565b610c35816109c6565b840191505092915050565b60006020820190508181036000830152610c5a8184610c07565b905092915050565b600060208284031215610c7857610c77610954565b5b600082013567ffffffffffffffff811115610c9657610c95610959565b5b610ca284828501610ad4565b91505092915050565b610cb48161097e565b82525050565b6000602082019050610ccf6000830184610cab565b92915050565b7f53747564656e74206e6f7420666f756e64000000000000000000000000000000600082015250565b6000610d0b601183610bcc565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b9050919050565b7f4e65772053747564656e742049442063616e6e6f7420626520656d7074790000600082015250565b6000610d77601e83610bcc565b9150610d8282610d41565b602082019050919050565b60006020820190508181036000830152610da681610d6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610df457607f821691505b602082108103610e0757610e06610dad565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e6f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e32565b610e798683610e32565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610ec0610ebb610eb684610e91565b610e9b565b610e91565b9050919050565b6000819050919050565b610eda83610ea5565b610eee610ee682610ec7565b848454610e3f565b825550505050565b600090565b610f03610ef6565b610f0e818484610ed1565b505050565b5b81811015610f3257610f27600082610efb565b600181019050610f14565b5050565b601f821115610f7757610f4881610e0d565b610f5184610e22565b81016020851015610f60578190505b610f74610f6c85610e22565b830182610f13565b50505b505050565b600082821c905092915050565b6000610f9a60001984600802610f7c565b1980831691505092915050565b6000610fb38383610f89565b9150826002028217905092915050565b610fcc82610bc1565b67ffffffffffffffff811115610fe557610fe46109d7565b5b610fef8254610ddc565b610ffa828285610f36565b600060209050601f83116001811461102d576000841561101b578287015190505b6110258582610fa7565b86555061108d565b601f19841661103b86610e0d565b60005b828110156110635784890151825560018201915060208501945060208101905061103e565b86831015611080578489015161107c601f891682610f89565b8355505b6001600288020188555050505b505050505050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b60006110cb601283610bcc565b91506110d682611095565b602082019050919050565b600060208201905081810360008301526110fa816110be565b9050919050565b7f53747564656e742049442063616e6e6f7420626520656d707479000000000000600082015250565b6000611137601a83610bcc565b915061114282611101565b602082019050919050565b600060208201905081810360008301526111668161112a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111a782610e91565b91506111b283610e91565b92508282039050818111156111ca576111c961116d565b5b92915050565b600080fd5b600080fd5b600080858511156111ee576111ed6111d0565b5b838611156111ff576111fe6111d5565b5b6001850283019150848603905094509492505050565b600082905092915050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006112588383611215565b826112638135611220565b925060148210156112a35761129e7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802610e32565b831692505b50509291505056fea26469706673582212206830246f49d1701ea63087bf4bd80f7c6dc6151cf884c3f28c2ca3879c0f3c2664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71E17445 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x71E17445 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x30205624 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x6B7B44D7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x75B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D96587CD7638C0254288E0EBECB53200B69DA0DD775BCC5BE707492A811ED11 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x75B JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x0 PUSH2 0x7E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x5B9 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x634 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC1B20826100814BA286AC576FE980DF1DBBCEF3D904BB81F3D69A0E8280DC114 DUP3 PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6DD PUSH2 0x75B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x763 PUSH2 0x8A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x781 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E0 JUMPI PUSH2 0x7A4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH2 0x8C9 PUSH2 0x92A JUMP JUMPDEST SWAP1 POP PUSH2 0x8D4 CALLER PUSH2 0x304 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E0 JUMPI POP DUP1 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 CALLDATASIZE DUP3 DUP5 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 DUP1 SWAP3 PUSH2 0x903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11DA JUMP JUMPDEST SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0x927 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x939 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x934 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x999 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP2 EQ PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B6 DUP2 PUSH2 0x990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA0F DUP3 PUSH2 0x9C6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2D PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0x94A JUMP JUMPDEST SWAP1 POP PUSH2 0xA4D DUP3 DUP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA6D JUMPI PUSH2 0xA6C PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST PUSH2 0xA76 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA5 PUSH2 0xAA0 DUP5 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAC1 JUMPI PUSH2 0xAC0 PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH2 0xACC DUP5 DUP3 DUP6 PUSH2 0xA83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE9 JUMPI PUSH2 0xAE8 PUSH2 0x9BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB27 DUP6 DUP3 DUP7 ADD PUSH2 0x9A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x959 JUMP JUMPDEST JUMPDEST PUSH2 0xB54 DUP6 DUP3 DUP7 ADD PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB82 DUP5 DUP3 DUP6 ADD PUSH2 0x9A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBFB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC12 DUP3 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xC1C DUP2 DUP6 PUSH2 0xBCC JUMP JUMPDEST SWAP4 POP PUSH2 0xC2C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC5A DUP2 DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC77 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0x959 JUMP JUMPDEST JUMPDEST PUSH2 0xCA2 DUP5 DUP3 DUP6 ADD PUSH2 0xAD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53747564656E74206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B PUSH1 0x11 DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0xD16 DUP3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65772053747564656E742049442063616E6E6F7420626520656D7074790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 PUSH1 0x1E DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0xD82 DUP3 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA6 DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE07 JUMPI PUSH2 0xE06 PUSH2 0xDAD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xE6F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0xE79 DUP7 DUP4 PUSH2 0xE32 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC0 PUSH2 0xEBB PUSH2 0xEB6 DUP5 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDA DUP4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xEEE PUSH2 0xEE6 DUP3 PUSH2 0xEC7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xE3F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xF03 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0xF0E DUP2 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF27 PUSH1 0x0 DUP3 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF48 DUP2 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xF51 DUP5 PUSH2 0xE22 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xF60 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xF74 PUSH2 0xF6C DUP6 PUSH2 0xE22 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xF13 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xF7C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 DUP4 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0xBC1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0x9D7 JUMP JUMPDEST JUMPDEST PUSH2 0xFEF DUP3 SLOAD PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xFFA DUP3 DUP3 DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x101B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1025 DUP6 DUP3 PUSH2 0xFA7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x103B DUP7 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1063 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x103E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1080 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x107C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xF89 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CB PUSH1 0x12 DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FA DUP2 PUSH2 0x10BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53747564656E742049442063616E6E6F7420626520656D707479000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1137 PUSH1 0x1A DUP4 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP PUSH2 0x1142 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1166 DUP2 PUSH2 0x112A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP4 PUSH2 0xE91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0x116D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x11EE JUMPI PUSH2 0x11ED PUSH2 0x11D0 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x11D5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1258 DUP4 DUP4 PUSH2 0x1215 JUMP JUMPDEST DUP3 PUSH2 0x1263 DUP2 CALLDATALOAD PUSH2 0x1220 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x129E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0xE32 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x30246F49D1701EA630 DUP8 0xBF 0x4B 0xD8 0xF PUSH29 0x6DC6151CF884C3F28C2CA3879C0F3C2664736F6C634300081400330000 ","sourceMap":"178:1977:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1832:137:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:221:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;754:290:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1624:107:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1052:392:15;1531:13:0;:11;:13::i;:::-;1167:8:15::1;:25;1176:15;1167:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;1159:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1274:1;1250:13;1244:27;:31;1236:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1361:13;1323:8;:25;1332:15;1323:25;;;;;;;;;;;;;;;:35;;:51;;;;;;:::i;:::-;;1405:15;1390:46;;;1422:13;1390:46;;;;;;:::i;:::-;;;;;;;;1052:392:::0;;:::o;1832:137:2:-;1908:4;1944:18;:16;:18::i;:::-;1931:31;;:9;:31;;;1924:38;;1832:137;;;:::o;1452:221:15:-;1520:13;1554:8;:25;1563:15;1554:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;1546:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1630:8;:25;1639:15;1630:25;;;;;;;;;;;;;;;:35;;1623:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:221;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;754:290:15:-;670:8;:22;679:12;:10;:12::i;:::-;670:22;;;;;;;;;;;;;;;:33;;;;;;;;;;;;669:34;661:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;874:1:::1;853:10;847:24;:28;839:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;952:25;;;;;;;;960:10;952:25;;;;972:4;952:25;;;;::::0;927:8:::1;:22;936:12;:10;:12::i;:::-;927:22;;;;;;;;;;;;;;;:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:12;:10;:12::i;:::-;993:43;;;1025:10;993:43;;;;;;:::i;:::-;;;;;;;;754:290:::0;:::o;1624:107:2:-;1681:7;1707:17;1700:24;;1624:107;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1681:148:15:-;1760:14;1794:27;:25;:27::i;:::-;1787:34;;1681:148;:::o;2206:429:2:-;2268:7;2287:22;2312:8;;:15;;2287:40;;2337:27;2367:22;:20;:22::i;:::-;2337:52;;2403:30;2422:10;2403:18;:30::i;:::-;:71;;;;;2455:19;2437:14;:37;;2403:71;2399:230;;;2513:8;;2539:19;2522:14;:36;;;;:::i;:::-;2513:47;;;;;;;;;:::i;:::-;2505:56;;;;;:::i;:::-;2497:65;;2490:72;;;;;;2399:230;2600:18;:16;:18::i;:::-;2593:25;;;;2206:429;;:::o;1989:161:15:-;2078:7;2105:37;:35;:37::i;:::-;2098:44;;1989:161;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;3385:107:2:-;3457:7;3483:2;3476:9;;3385:107;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:308::-;1865:4;1955:18;1947:6;1944:30;1941:56;;;1977:18;;:::i;:::-;1941:56;2015:29;2037:6;2015:29;:::i;:::-;2007:37;;2099:4;2093;2089:15;2081:23;;1803:308;;;:::o;2117:146::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2117:146;;;:::o;2269:425::-;2347:5;2372:66;2388:49;2430:6;2388:49;:::i;:::-;2372:66;:::i;:::-;2363:75;;2461:6;2454:5;2447:21;2499:4;2492:5;2488:16;2537:3;2528:6;2523:3;2519:16;2516:25;2513:112;;;2544:79;;:::i;:::-;2513:112;2634:54;2681:6;2676:3;2671;2634:54;:::i;:::-;2353:341;2269:425;;;;;:::o;2714:340::-;2770:5;2819:3;2812:4;2804:6;2800:17;2796:27;2786:122;;2827:79;;:::i;:::-;2786:122;2944:6;2931:20;2969:79;3044:3;3036:6;3029:4;3021:6;3017:17;2969:79;:::i;:::-;2960:88;;2776:278;2714:340;;;;:::o;3060:654::-;3138:6;3146;3195:2;3183:9;3174:7;3170:23;3166:32;3163:119;;;3201:79;;:::i;:::-;3163:119;3321:1;3346:53;3391:7;3382:6;3371:9;3367:22;3346:53;:::i;:::-;3336:63;;3292:117;3476:2;3465:9;3461:18;3448:32;3507:18;3499:6;3496:30;3493:117;;;3529:79;;:::i;:::-;3493:117;3634:63;3689:7;3680:6;3669:9;3665:22;3634:63;:::i;:::-;3624:73;;3419:288;3060:654;;;;;:::o;3720:329::-;3779:6;3828:2;3816:9;3807:7;3803:23;3799:32;3796:119;;;3834:79;;:::i;:::-;3796:119;3954:1;3979:53;4024:7;4015:6;4004:9;4000:22;3979:53;:::i;:::-;3969:63;;3925:117;3720:329;;;;:::o;4055:90::-;4089:7;4132:5;4125:13;4118:21;4107:32;;4055:90;;;:::o;4151:109::-;4232:21;4247:5;4232:21;:::i;:::-;4227:3;4220:34;4151:109;;:::o;4266:210::-;4353:4;4391:2;4380:9;4376:18;4368:26;;4404:65;4466:1;4455:9;4451:17;4442:6;4404:65;:::i;:::-;4266:210;;;;:::o;4482:99::-;4534:6;4568:5;4562:12;4552:22;;4482:99;;;:::o;4587:169::-;4671:11;4705:6;4700:3;4693:19;4745:4;4740:3;4736:14;4721:29;;4587:169;;;;:::o;4762:246::-;4843:1;4853:113;4867:6;4864:1;4861:13;4853:113;;;4952:1;4947:3;4943:11;4937:18;4933:1;4928:3;4924:11;4917:39;4889:2;4886:1;4882:10;4877:15;;4853:113;;;5000:1;4991:6;4986:3;4982:16;4975:27;4824:184;4762:246;;;:::o;5014:377::-;5102:3;5130:39;5163:5;5130:39;:::i;:::-;5185:71;5249:6;5244:3;5185:71;:::i;:::-;5178:78;;5265:65;5323:6;5318:3;5311:4;5304:5;5300:16;5265:65;:::i;:::-;5355:29;5377:6;5355:29;:::i;:::-;5350:3;5346:39;5339:46;;5106:285;5014:377;;;;:::o;5397:313::-;5510:4;5548:2;5537:9;5533:18;5525:26;;5597:9;5591:4;5587:20;5583:1;5572:9;5568:17;5561:47;5625:78;5698:4;5689:6;5625:78;:::i;:::-;5617:86;;5397:313;;;;:::o;5716:509::-;5785:6;5834:2;5822:9;5813:7;5809:23;5805:32;5802:119;;;5840:79;;:::i;:::-;5802:119;5988:1;5977:9;5973:17;5960:31;6018:18;6010:6;6007:30;6004:117;;;6040:79;;:::i;:::-;6004:117;6145:63;6200:7;6191:6;6180:9;6176:22;6145:63;:::i;:::-;6135:73;;5931:287;5716:509;;;;:::o;6231:118::-;6318:24;6336:5;6318:24;:::i;:::-;6313:3;6306:37;6231:118;;:::o;6355:222::-;6448:4;6486:2;6475:9;6471:18;6463:26;;6499:71;6567:1;6556:9;6552:17;6543:6;6499:71;:::i;:::-;6355:222;;;;:::o;6583:167::-;6723:19;6719:1;6711:6;6707:14;6700:43;6583:167;:::o;6756:366::-;6898:3;6919:67;6983:2;6978:3;6919:67;:::i;:::-;6912:74;;6995:93;7084:3;6995:93;:::i;:::-;7113:2;7108:3;7104:12;7097:19;;6756:366;;;:::o;7128:419::-;7294:4;7332:2;7321:9;7317:18;7309:26;;7381:9;7375:4;7371:20;7367:1;7356:9;7352:17;7345:47;7409:131;7535:4;7409:131;:::i;:::-;7401:139;;7128:419;;;:::o;7553:180::-;7693:32;7689:1;7681:6;7677:14;7670:56;7553:180;:::o;7739:366::-;7881:3;7902:67;7966:2;7961:3;7902:67;:::i;:::-;7895:74;;7978:93;8067:3;7978:93;:::i;:::-;8096:2;8091:3;8087:12;8080:19;;7739:366;;;:::o;8111:419::-;8277:4;8315:2;8304:9;8300:18;8292:26;;8364:9;8358:4;8354:20;8350:1;8339:9;8335:17;8328:47;8392:131;8518:4;8392:131;:::i;:::-;8384:139;;8111:419;;;:::o;8536:180::-;8584:77;8581:1;8574:88;8681:4;8678:1;8671:15;8705:4;8702:1;8695:15;8722:320;8766:6;8803:1;8797:4;8793:12;8783:22;;8850:1;8844:4;8840:12;8871:18;8861:81;;8927:4;8919:6;8915:17;8905:27;;8861:81;8989:2;8981:6;8978:14;8958:18;8955:38;8952:84;;9008:18;;:::i;:::-;8952:84;8773:269;8722:320;;;:::o;9048:141::-;9097:4;9120:3;9112:11;;9143:3;9140:1;9133:14;9177:4;9174:1;9164:18;9156:26;;9048:141;;;:::o;9195:93::-;9232:6;9279:2;9274;9267:5;9263:14;9259:23;9249:33;;9195:93;;;:::o;9294:107::-;9338:8;9388:5;9382:4;9378:16;9357:37;;9294:107;;;;:::o;9407:393::-;9476:6;9526:1;9514:10;9510:18;9549:97;9579:66;9568:9;9549:97;:::i;:::-;9667:39;9697:8;9686:9;9667:39;:::i;:::-;9655:51;;9739:4;9735:9;9728:5;9724:21;9715:30;;9788:4;9778:8;9774:19;9767:5;9764:30;9754:40;;9483:317;;9407:393;;;;;:::o;9806:77::-;9843:7;9872:5;9861:16;;9806:77;;;:::o;9889:60::-;9917:3;9938:5;9931:12;;9889:60;;;:::o;9955:142::-;10005:9;10038:53;10056:34;10065:24;10083:5;10065:24;:::i;:::-;10056:34;:::i;:::-;10038:53;:::i;:::-;10025:66;;9955:142;;;:::o;10103:75::-;10146:3;10167:5;10160:12;;10103:75;;;:::o;10184:269::-;10294:39;10325:7;10294:39;:::i;:::-;10355:91;10404:41;10428:16;10404:41;:::i;:::-;10396:6;10389:4;10383:11;10355:91;:::i;:::-;10349:4;10342:105;10260:193;10184:269;;;:::o;10459:73::-;10504:3;10459:73;:::o;10538:189::-;10615:32;;:::i;:::-;10656:65;10714:6;10706;10700:4;10656:65;:::i;:::-;10591:136;10538:189;;:::o;10733:186::-;10793:120;10810:3;10803:5;10800:14;10793:120;;;10864:39;10901:1;10894:5;10864:39;:::i;:::-;10837:1;10830:5;10826:13;10817:22;;10793:120;;;10733:186;;:::o;10925:543::-;11026:2;11021:3;11018:11;11015:446;;;11060:38;11092:5;11060:38;:::i;:::-;11144:29;11162:10;11144:29;:::i;:::-;11134:8;11130:44;11327:2;11315:10;11312:18;11309:49;;;11348:8;11333:23;;11309:49;11371:80;11427:22;11445:3;11427:22;:::i;:::-;11417:8;11413:37;11400:11;11371:80;:::i;:::-;11030:431;;11015:446;10925:543;;;:::o;11474:117::-;11528:8;11578:5;11572:4;11568:16;11547:37;;11474:117;;;;:::o;11597:169::-;11641:6;11674:51;11722:1;11718:6;11710:5;11707:1;11703:13;11674:51;:::i;:::-;11670:56;11755:4;11749;11745:15;11735:25;;11648:118;11597:169;;;;:::o;11771:295::-;11847:4;11993:29;12018:3;12012:4;11993:29;:::i;:::-;11985:37;;12055:3;12052:1;12048:11;12042:4;12039:21;12031:29;;11771:295;;;;:::o;12071:1395::-;12188:37;12221:3;12188:37;:::i;:::-;12290:18;12282:6;12279:30;12276:56;;;12312:18;;:::i;:::-;12276:56;12356:38;12388:4;12382:11;12356:38;:::i;:::-;12441:67;12501:6;12493;12487:4;12441:67;:::i;:::-;12535:1;12559:4;12546:17;;12591:2;12583:6;12580:14;12608:1;12603:618;;;;13265:1;13282:6;13279:77;;;13331:9;13326:3;13322:19;13316:26;13307:35;;13279:77;13382:67;13442:6;13435:5;13382:67;:::i;:::-;13376:4;13369:81;13238:222;12573:887;;12603:618;12655:4;12651:9;12643:6;12639:22;12689:37;12721:4;12689:37;:::i;:::-;12748:1;12762:208;12776:7;12773:1;12770:14;12762:208;;;12855:9;12850:3;12846:19;12840:26;12832:6;12825:42;12906:1;12898:6;12894:14;12884:24;;12953:2;12942:9;12938:18;12925:31;;12799:4;12796:1;12792:12;12787:17;;12762:208;;;12998:6;12989:7;12986:19;12983:179;;;13056:9;13051:3;13047:19;13041:26;13099:48;13141:4;13133:6;13129:17;13118:9;13099:48;:::i;:::-;13091:6;13084:64;13006:156;12983:179;13208:1;13204;13196:6;13192:14;13188:22;13182:4;13175:36;12610:611;;;12573:887;;12163:1303;;;12071:1395;;:::o;13472:168::-;13612:20;13608:1;13600:6;13596:14;13589:44;13472:168;:::o;13646:366::-;13788:3;13809:67;13873:2;13868:3;13809:67;:::i;:::-;13802:74;;13885:93;13974:3;13885:93;:::i;:::-;14003:2;13998:3;13994:12;13987:19;;13646:366;;;:::o;14018:419::-;14184:4;14222:2;14211:9;14207:18;14199:26;;14271:9;14265:4;14261:20;14257:1;14246:9;14242:17;14235:47;14299:131;14425:4;14299:131;:::i;:::-;14291:139;;14018:419;;;:::o;14443:176::-;14583:28;14579:1;14571:6;14567:14;14560:52;14443:176;:::o;14625:366::-;14767:3;14788:67;14852:2;14847:3;14788:67;:::i;:::-;14781:74;;14864:93;14953:3;14864:93;:::i;:::-;14982:2;14977:3;14973:12;14966:19;;14625:366;;;:::o;14997:419::-;15163:4;15201:2;15190:9;15186:18;15178:26;;15250:9;15244:4;15240:20;15236:1;15225:9;15221:17;15214:47;15278:131;15404:4;15278:131;:::i;:::-;15270:139;;14997:419;;;:::o;15422:180::-;15470:77;15467:1;15460:88;15567:4;15564:1;15557:15;15591:4;15588:1;15581:15;15608:194;15648:4;15668:20;15686:1;15668:20;:::i;:::-;15663:25;;15702:20;15720:1;15702:20;:::i;:::-;15697:25;;15746:1;15743;15739:9;15731:17;;15770:1;15764:4;15761:11;15758:37;;;15775:18;;:::i;:::-;15758:37;15608:194;;;;:::o;15808:117::-;15917:1;15914;15907:12;15931:117;16040:1;16037;16030:12;16054:469;16159:9;16170;16208:8;16196:10;16193:24;16190:111;;;16220:79;;:::i;:::-;16190:111;16326:6;16316:8;16313:20;16310:107;;;16336:79;;:::i;:::-;16310:107;16467:1;16455:10;16451:18;16443:6;16439:31;16426:44;;16506:10;16496:8;16492:25;16479:38;;16054:469;;;;;;;:::o;16529:96::-;16587:6;16615:3;16605:13;;16529:96;;;;:::o;16723:150::-;16760:7;16800:66;16793:5;16789:78;16778:89;;16723:150;;;:::o;16879:552::-;16970:5;17001:45;17042:3;17035:5;17001:45;:::i;:::-;17071:5;17095:41;17126:8;17113:22;17095:41;:::i;:::-;17086:50;;17160:2;17152:6;17149:14;17146:278;;;17231:169;17316:66;17286:6;17282:2;17278:15;17275:1;17271:23;17231:169;:::i;:::-;17208:5;17187:227;17178:236;;17146:278;16976:455;;16879:552;;;;:::o"},"methodIdentifiers":{"getStudent(address)":"6b7b44d7","isTrustedForwarder(address)":"572b6c05","owner()":"8da5cb5b","registerStudent(string)":"71e17445","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","trustedForwarder()":"7da0a877","updateStudent(address,string)":"30205624"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"studentID\",\"type\":\"string\"}],\"name\":\"StudentRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newStudentID\",\"type\":\"string\"}],\"name\":\"StudentUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"getStudent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_studentID\",\"type\":\"string\"}],\"name\":\"registerStudent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studentAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_newStudentID\",\"type\":\"string\"}],\"name\":\"updateStudent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Student.sol\":\"StudentRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Student.sol\":{\"keccak256\":\"0x7781868b30e8a216d55c1083842b64af8a57b720b387a1a221f235295e395714\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b70bafa59747c5b72ab2a3e9a8336706193008d4e5ed1a3ab539350eeba31e8\",\"dweb:/ipfs/QmWfUMDCgV6dqYR8w9YGzwF2oYmbAB1fbf5vE2JVguKEAz\"]}},\"version\":1}"}}}}}